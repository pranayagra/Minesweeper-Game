(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    533102,       9559]
NotebookOptionsPosition[    531680,       9525]
NotebookOutlinePosition[    532095,       9542]
CellTagsIndexPosition[    532052,       9539]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Minesweeper", "Section",
 CellChangeTimes->{{3.73224332246321*^9, 3.732243334408166*^9}, {
  3.7322435097786207`*^9, 3.7322435205042863`*^9}},
 TextAlignment->Center,ExpressionUUID->"0f6c3696-07b3-437c-b74b-5d4cf58e8145"],

Cell[CellGroupData[{

Cell["Title Screen", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.728650984492378*^9, 3.7286509891368017`*^9}, {
   3.7286510804070644`*^9, 3.728651125824997*^9}, {3.728651611475852*^9, 
   3.72865163184548*^9}, {3.728651668129918*^9, 3.7286516905988684`*^9}, {
   3.7286521440628753`*^9, 3.728652152968508*^9}, {3.7286521875892644`*^9, 
   3.728652216864953*^9}, {3.7286523062589636`*^9, 3.728652580519998*^9}, {
   3.7286533174427333`*^9, 3.7286533192736297`*^9}, {3.7286534537012186`*^9, 
   3.728653476130796*^9}, {3.7286535856830177`*^9, 3.7286536081246843`*^9}, {
   3.728654021888423*^9, 3.728654043415924*^9}, {3.731119135460784*^9, 
   3.731119211156506*^9}, {3.7311192857991247`*^9, 3.7311193144492025`*^9}, {
   3.7311194250722837`*^9, 3.731119467384427*^9}, {3.731119505402889*^9, 
   3.7311199739709926`*^9}, {3.731120030676564*^9, 3.7311201626771097`*^9}, {
   3.7311201943277483`*^9, 3.7311202024158063`*^9}, {3.7311202630811005`*^9, 
   3.7311203681499767`*^9}, {3.7311204461076193`*^9, 
   3.7311204483916483`*^9}, {3.731120588820405*^9, 3.731120600488538*^9}, {
   3.7311208593422365`*^9, 3.731120889162426*^9}, {3.7312399165748434`*^9, 
   3.731240001644846*^9}, {3.7312400688429365`*^9, 3.7312400938724475`*^9}, {
   3.7312411883567557`*^9, 3.731241220919143*^9}, {3.7312412592744093`*^9, 
   3.731241371320558*^9}, {3.7312414103999133`*^9, 3.731241535664418*^9}, {
   3.731241716649181*^9, 3.7312417378876443`*^9}, {3.7312422154989815`*^9, 
   3.731242224017807*^9}, {3.7312423794719973`*^9, 3.7312424318500404`*^9}, {
   3.731246940566818*^9, 3.7312469653649178`*^9}, {3.7312470131433163`*^9, 
   3.7312470138918023`*^9}, {3.7312470591779547`*^9, 3.7312470611469*^9}, {
   3.731247212118985*^9, 3.7312472370439425`*^9}, {3.7312472851986036`*^9, 
   3.731247308140439*^9}, {3.7312473565327377`*^9, 3.7312473629397106`*^9}, {
   3.7312473946744595`*^9, 3.7312473958933463`*^9}, 3.7312570366363554`*^9, {
   3.7312570667628565`*^9, 3.7312571011396627`*^9}, {3.731257514565099*^9, 
   3.731257518126826*^9}, {3.731257586763342*^9, 3.7312576262487593`*^9}, {
   3.731257680168889*^9, 3.7312576813565655`*^9}, {3.7312580884638824`*^9, 
   3.7312581308862824`*^9}, {3.7312583536316037`*^9, 
   3.7312584152512007`*^9}, {3.7312584514239144`*^9, 
   3.7312584522497025`*^9}, {3.7312584857614765`*^9, 3.731258493236253*^9}, {
   3.7312587045959244`*^9, 3.731258803146616*^9}, {3.731258838456583*^9, 
   3.7312588908493695`*^9}, {3.731258942915373*^9, 3.7312589522668023`*^9}, {
   3.731258999044484*^9, 3.7312591062645526`*^9}, {3.7312942438519087`*^9, 
   3.7312942451359615`*^9}, {3.731294704631956*^9, 3.7312947398163905`*^9}, {
   3.7312949687752504`*^9, 3.731294984727456*^9}, {3.731295046684181*^9, 
   3.731295112032939*^9}, {3.731295144561154*^9, 3.731295238137729*^9}, {
   3.731295587450362*^9, 3.731295589338382*^9}, {3.7312957721310096`*^9, 
   3.7312958384362755`*^9}, {3.731295888625245*^9, 3.731295901165485*^9}, {
   3.731295942766238*^9, 3.7312959672947006`*^9}, {3.731296011219519*^9, 
   3.73129603427195*^9}, {3.7312961660984592`*^9, 3.731296227623581*^9}, {
   3.7312963416571507`*^9, 3.731296405079689*^9}, {3.731296535413302*^9, 
   3.731296648614742*^9}, {3.7312967298238745`*^9, 3.7312967422520266`*^9}, {
   3.7312967754044724`*^9, 3.731296786712577*^9}, {3.731296824953089*^9, 
   3.7312968439012833`*^9}, {3.7312969180582266`*^9, 
   3.7312969228343034`*^9}, {3.731296999831213*^9, 3.7312970013752375`*^9}, {
   3.731297085348274*^9, 3.731297134228877*^9}, {3.73129719036557*^9, 
   3.73129720795782*^9}, {3.731297239398179*^9, 3.731297270854577*^9}, {
   3.7312974156787815`*^9, 3.7312974206268406`*^9}, {3.7312975148040075`*^9, 
   3.73129751899206*^9}, {3.731297722678117*^9, 3.731297773418565*^9}, {
   3.731297850439062*^9, 3.73129793333152*^9}, {3.7312980149800086`*^9, 
   3.731298015128014*^9}, {3.7312981962420187`*^9, 3.731298244030648*^9}, {
   3.731298323399603*^9, 3.731298360820061*^9}, {3.731298511592634*^9, 
   3.731298512212679*^9}, {3.731298555177172*^9, 3.731298576885442*^9}, {
   3.7312986379644537`*^9, 3.73129864343248*^9}, {3.7313389062156115`*^9, 
   3.7313389204315643`*^9}, {3.731343031443264*^9, 3.7313430474307547`*^9}, {
   3.7313446053371363`*^9, 3.7313446502089767`*^9}, {3.7313447143963547`*^9, 
   3.7313447362573595`*^9}, {3.731344767525212*^9, 3.731344769850978*^9}, {
   3.7313449662774487`*^9, 3.731345007157504*^9}, {3.7313452062165995`*^9, 
   3.731345226835405*^9}, 3.7313537738044453`*^9, {3.731357455262526*^9, 
   3.7313575890623455`*^9}, {3.731357624904622*^9, 3.7313576541844254`*^9}, {
   3.731357774613328*^9, 3.7313578079456224`*^9}, {3.7313578707574587`*^9, 
   3.731358016722247*^9}, {3.731358066486493*^9, 3.731358083461049*^9}, {
   3.731358129534443*^9, 3.7313582781407022`*^9}, {3.7313583474779477`*^9, 
   3.731358450186017*^9}, {3.731358521968072*^9, 3.7313585702182903`*^9}, {
   3.731358604592389*^9, 3.731358684855487*^9}, {3.7313587215348396`*^9, 
   3.7313587370578775`*^9}, {3.731358890022902*^9, 3.7313589165387235`*^9}, {
   3.731358958329687*^9, 3.7313590709846015`*^9}, {3.731359147614979*^9, 
   3.731359175172415*^9}, {3.7313592114406786`*^9, 3.7313592502814894`*^9}, {
   3.731359289158629*^9, 3.731359359606877*^9}, {3.731359435113255*^9, 
   3.731359482299917*^9}, {3.731359738975008*^9, 3.731359743928322*^9}, {
   3.7313598295036345`*^9, 3.731359833737088*^9}, {3.7313600014960403`*^9, 
   3.731360071965391*^9}, {3.7313601453226414`*^9, 3.7313601861151867`*^9}, {
   3.7313602244862823`*^9, 3.7313602349377995`*^9}, {3.7313603697923765`*^9, 
   3.7313603888681574`*^9}, {3.731360450091547*^9, 3.7313604907978225`*^9}, {
   3.7313608579150248`*^9, 3.7313609267288675`*^9}, {3.7313609600006294`*^9, 
   3.731360961313278*^9}, {3.7313609916156025`*^9, 3.7313611167131195`*^9}, {
   3.731361173757638*^9, 3.731361237608659*^9}, {3.731361283630088*^9, 
   3.7313613151043615`*^9}, {3.731361373453093*^9, 3.7313614757822123`*^9}, {
   3.731361512320469*^9, 3.7313615654053354`*^9}, {3.7313616047173047`*^9, 
   3.7313616579441314`*^9}, {3.7313617065271873`*^9, 3.731361719254882*^9}, {
   3.7313617572790656`*^9, 3.7313618094477987`*^9}, {3.731361843781067*^9, 
   3.7313618472248335`*^9}, {3.7313618858337083`*^9, 3.731361923322585*^9}, {
   3.7313619730701256`*^9, 3.7313620373154216`*^9}, {3.731362135922155*^9, 
   3.731362162635754*^9}, 3.7313627418055077`*^9, {3.7313627820749073`*^9, 
   3.7313628009058547`*^9}, {3.731363195619339*^9, 3.7313631990658236`*^9}, {
   3.7313633165017505`*^9, 3.731363317142413*^9}, {3.731363360014741*^9, 
   3.73136338042324*^9}, {3.7313639294811897`*^9, 3.7313641050872593`*^9}, {
   3.731364208342381*^9, 3.731364249484578*^9}, 3.7313653878015013`*^9, {
   3.731367444035567*^9, 3.7313674448785543`*^9}, {3.7313674775882745`*^9, 
   3.7313674776706963`*^9}, {3.731369656785567*^9, 3.731369691693612*^9}, {
   3.7313699382732487`*^9, 3.731369942242857*^9}, {3.7313700628304234`*^9, 
   3.7313701127858686`*^9}, {3.7313701881297274`*^9, 3.731370346791729*^9}, {
   3.731370378642832*^9, 3.7313703814122334`*^9}, {3.7313704383954897`*^9, 
   3.731370519928363*^9}, {3.7313705963625617`*^9, 3.7313706833730764`*^9}, {
   3.731372159453668*^9, 3.7313722424423018`*^9}, 3.731372590761057*^9, {
   3.731375119036372*^9, 3.7313751309566307`*^9}, {3.7313751652533894`*^9, 
   3.7313752055159965`*^9}, 3.731375241300353*^9, {3.7313753620824533`*^9, 
   3.7313753736285915`*^9}, {3.73137540613035*^9, 3.731375420087004*^9}, {
   3.7313755333842497`*^9, 3.731375533665535*^9}, 3.73137599879688*^9, {
   3.731378733450918*^9, 3.731378756792944*^9}, {3.7313790358255434`*^9, 
   3.7313790375691757`*^9}, {3.7313791424957323`*^9, 3.731379204127262*^9}, {
   3.7313793085753946`*^9, 3.731379326337754*^9}, {3.731379753238009*^9, 
   3.73137977152168*^9}, {3.7313798185278263`*^9, 3.7313798397839084`*^9}, {
   3.731379881072731*^9, 3.7313799303994837`*^9}, {3.7313807531698227`*^9, 
   3.73138075650419*^9}, {3.731380792989094*^9, 3.731380796301778*^9}, {
   3.731381537338192*^9, 3.7313815467959595`*^9}, {3.731381576896776*^9, 
   3.731381602075914*^9}, {3.7314054517476273`*^9, 3.731405483556028*^9}, {
   3.7314055398247194`*^9, 3.7314055495808773`*^9}, {3.7314057547107506`*^9, 
   3.7314057692853084`*^9}, {3.7314059924568677`*^9, 
   3.7314060014173746`*^9}, {3.731412990965398*^9, 3.731413008122761*^9}, {
   3.731414753718604*^9, 3.7314147555988717`*^9}, 3.7314148334404907`*^9, {
   3.7314400605319767`*^9, 3.731440095679976*^9}, 3.7314401765976763`*^9, {
   3.731440398901453*^9, 3.7314404404714756`*^9}, {3.731469083370991*^9, 
   3.7314690946536174`*^9}, {3.7314714550562563`*^9, 3.731471455931363*^9}, {
   3.7314725587616014`*^9, 3.7314725608868113`*^9}, 3.731473002342781*^9, {
   3.731845923447528*^9, 3.7318459235725164`*^9}, {3.731846054874259*^9, 
   3.7318461796989126`*^9}, {3.731846211638499*^9, 3.731846231038602*^9}, {
   3.7318470379194765`*^9, 3.73184708661878*^9}, {3.731847154273157*^9, 
   3.7318472668610954`*^9}, {3.731853119963628*^9, 3.731853260831927*^9}, {
   3.7318534203646903`*^9, 3.731853550543564*^9}, {3.731853698893798*^9, 
   3.7318537612636347`*^9}, {3.7318538645583553`*^9, 
   3.7318538653084707`*^9}, {3.73185389630755*^9, 3.7318539097502956`*^9}, {
   3.7318540238046317`*^9, 3.7318540599995966`*^9}, {3.731854109089218*^9, 
   3.731854248535334*^9}, {3.731854511431429*^9, 3.7318547506617413`*^9}, {
   3.731854780668482*^9, 3.731854782278049*^9}, {3.731865135098883*^9, 
   3.7318653400389524`*^9}, {3.731865644808835*^9, 3.7318656783700047`*^9}, {
   3.7318657144989014`*^9, 3.731865831267496*^9}, {3.731866932435009*^9, 
   3.7318669670039062`*^9}, {3.731867011133568*^9, 3.731867011565876*^9}, {
   3.73187661253132*^9, 3.7318766558537493`*^9}, {3.7318769378075223`*^9, 
   3.7318769634580154`*^9}, {3.7318771241917477`*^9, 3.731877127304488*^9}, {
   3.7318826626460915`*^9, 3.731882668237235*^9}, {3.7318827549598*^9, 
   3.731882791923171*^9}, {3.731888686868372*^9, 3.7318887052474146`*^9}, {
   3.731888781790717*^9, 3.7318888302849913`*^9}, {3.7318888773769207`*^9, 
   3.7318889072472005`*^9}, {3.7318890143469753`*^9, 
   3.7318890294819307`*^9}, {3.731889208373373*^9, 3.7318893407056837`*^9}, {
   3.7318893894104185`*^9, 3.7318896405580025`*^9}, {3.7318897286535535`*^9, 
   3.7318898544299116`*^9}, {3.7318899371758776`*^9, 3.731889944754466*^9}, {
   3.7318903292435846`*^9, 3.731890407622876*^9}, {3.7318904398925796`*^9, 
   3.731890568868097*^9}, {3.731890615202138*^9, 3.731891064011232*^9}, {
   3.7318911107524824`*^9, 3.731891112987002*^9}, {3.7318911526312633`*^9, 
   3.731891175012256*^9}, {3.731891242990303*^9, 3.731891337578498*^9}, {
   3.731891379721876*^9, 3.731891627797306*^9}, {3.7318916847612333`*^9, 
   3.7318916947578707`*^9}, {3.7318917980497203`*^9, 3.731891863707821*^9}, {
   3.731956733694108*^9, 3.731956734303562*^9}, {3.7319691444805527`*^9, 
   3.73196915048947*^9}, {3.731969196836609*^9, 3.731969273229711*^9}, {
   3.731969310308354*^9, 3.731969331760366*^9}, {3.7319694408535786`*^9, 
   3.7319694562408595`*^9}, {3.731969515873*^9, 3.731969527593176*^9}, {
   3.731969602190462*^9, 3.7319696106182184`*^9}, {3.7319696592372847`*^9, 
   3.7319696611281137`*^9}, {3.731969753852504*^9, 3.731969802088394*^9}, {
   3.7322261572885284`*^9, 3.7322263993414035`*^9}, {3.7322265496221704`*^9, 
   3.7322265568193707`*^9}, {3.732242996307522*^9, 3.73224299961442*^9}, {
   3.73224303370872*^9, 3.7322430477583036`*^9}, {3.7322432217411323`*^9, 
   3.7322432245616727`*^9}, {3.732243294076372*^9, 3.7322433141820927`*^9}, {
   3.7322435594834156`*^9, 3.732243576844844*^9}, {3.732243625043559*^9, 
   3.7322436270970383`*^9}, 
   3.7322436613505473`*^9},ExpressionUUID->"c34ed131-6694-4218-aa12-\
092f13e1e126"],

Cell[BoxData[{
 RowBox[{"aaaaa", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"titleScreen", "[", "]"}], " ", ":=", " ", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"numR", "=", "4"}], ",", 
       RowBox[{"numC", "=", "4"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Title", " ", "screen", " ", "creates", " ", "a", " ", "pallette", " ", 
       "and", " ", "makes", " ", "a", " ", "graphics", " ", "command"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CreatePalette", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "We", " ", "use", " ", "inset", " ", "to", " ", "place", " ", 
              "the", " ", "object"}], ",", " ", 
             RowBox[{
             "then", " ", "we", " ", "used", " ", "Style", " ", "to", " ", 
              "display", " ", "the", " ", "words"}], ",", " ", 
             RowBox[{
             "Then", " ", "we", " ", "inset", " ", "the", " ", "picture", " ",
               "and", " ", "we", " ", "inset", " ", "all", " ", "of", " ", 
              "the", " ", "buttons"}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<MineSweeper\>\"", ",", " ", "Gray", ",", " ", "Bold", ",",
                 " ", 
                RowBox[{"FontSize", "\[Rule]", "60"}], ",", 
                RowBox[{"FontFamily", "\[Rule]", "\"\<Goudy Stout\>\""}]}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"Center", ",", "750"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Inset", "[", 
             RowBox[{
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJysvXd0ZPd15+nd/WPETsgFFDLQ6G52k+zcyKFQCIVYOeeEQmyggY5kN4NM
WZTk8diyNGN7Zr0z4xnPrGWPbdmyAimREpUjRVGiciQpUhRJMcgzZ3fnHO33
3vt7v3pVhW5S58w5F+88vPd7oV5VfermX1d2y1v433/nd37n4tuw8Gauju/s
ZO72VeOfwObF1eXNpfzs5qWl5aWd/uz/gY0j/9vv/M5n8EfrRwurty+tHFle
Pbq2ceLCzomLl+7Y2DyysnZs/TyWRwvrx5Y3ji2vsWwcKazfzrtO7Vw6c+nK
0fObR9Y37ljbOra6eWxt4+jq+h0rJFjBsYdW145ubZ26fOXkpct3bFy4ffU8
DrwdY5a3IEdXzotg+9G1zbu2L525es/JS1dxzts3zuu9LFssNBL3hjs8dfXq
nTs7t29sQY6tb9EZsHd5Q8nqOs5wx9aFk1fo0sc2t3BOkjUSutXVTYzHgXee
38IwnPDM1WsnLu7ctX3h5PbF41vbxzcvnNjaPrl1ieTCzumdS6cvXoWcvXb3
6StXT+1cofVLV85cvHxm5yrk3OWrsn724rXTWLl05exlDLt0fGf75KWLOAnO
doJOu3nX+S0Irnuct+DMd21t3nF+4w48GXraq/J2yAqeOT3ttY2TF3A/W/RU
l7G3cCS/dCRbOJxZgtBKDluWDxcKOD/k6Orq7Ssr+Be7SHJ5yO16Pb9019r6
8fWNo4XlQ9nc4WzuUCYrcjidZ8keyeQw8q7VNYzE+MM8DNsPpTJHkjkWrGRk
8J0rq8fX1jC+J53BgJ5k+nAieyieORJPH46lDifS3fFkTzJ1rFC4a3kVZz6Y
oH8PxUkOx5OHYolD0WRPjCWZPpYv3LG0fCiVxjDaHkkoicYhB2PxnnjiUCJ5
Ry5/LJvDumw/FI5BDobjkJ5QFIIVnJyHZe7ILmHlrtzSndnsndm8lrvSuTtT
2TsyGQjWIZXrd2SwkjuWTh9NpW6PJQ8GI92BYJc/0O0LQQ5i6Q1CuiA+/+FI
9BhuLxzBABLe1e31H/QFaIwn0OHxdvsDRyLR26Oxg/5wl2x0+bpdXi2dbu+h
QOhwMIwDuzweiHkvDVh0tzvdOOeRUARjut1uEqena9HdtehkcWNMl8vV6XYf
9gV7PDTmoMdz0OXVgvG05GMPeQMYRgM8niNu/2GX75DTfdjlUeL1HfJ4sTzi
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
Ua2XEjwnppvmnY1zi2aWiqWvxKSXCk7LlFLNUoy5CUttBksnKvVSDVLIvuFh
IBR6KQQr+0ifNLOUZN/gIPhZa7OZWDpiBilk78AAhmmWYp1hqwSEFJZCRC8F
S7GOjSaQDrDQOpRYch0MDtOBZwf2nYFi2atlL5agbl8v1FeAdF/vOdp45hzE
tHIWAgACpFjSOvsH9p0+ZzgKyFcgkBSW0kpvX83ZXtJpSfqFt9gu1FXr53px
FMx5EZj2opHKUZqlwAX0H7AU0BBmEjYZJkQMkqQQUtv4ynwuNfDZuleExADQ
DHqpUg5NeqkWoFhYCpOcR8LkT96MpdiLOxQbH4RsjGfKWNpssBQIfVOWAmI4
oaBPs9R8h/o3Ai8Hpr1mKa5rqKwAaZIBqFhKjzFfwMPReumuLMWrAEvZScsK
Z6icpSCkmaV4a0g9DsWEnGaW4t+GQAgshbYJlkJ3FZaWg9QXrPcHMRgghUYK
kFqC0CRD9R5lvJND1RvEMJJgkOiXTDaGyF9KOqc4V9nvqix9Hx1u1kuhVYKH
oByxjv8VPRMI1SxtFboGwxDWGGmlPcwbwxEQGNISCpF/1R9q9QVbvAEt6sxg
XSiCFfbfMooX2fta6hMAipuVjR9oEcfpb8lSUUorWQpU7srSutn5SpaaBfDE
MIDUMrsAqN6MpQ3Tc2K/l+mlmqX7x2xvylJSRMft9ZPTtfZJzVLadROWYn1X
lpKSCe1ubEzsd9Y5h0tA2jf4v4qlexmVwlJonsTM3VgK0Szde+5sGUv3nCaD
HWokVE1hKdnyp8/BtBdt0xDyrGobn8ecARtFF1VjYPifPi1YxtlkjPhdMVJE
HLMi+OqRxBPk3sxklQqUSAr3tGImdi6zlHyMYClAAbNXWKqdAGZXgLAU3FA+
WAaaJqRyySrqJsBG6KXthaUm9oLqvZps6n6Acbbxtb+00g2rgJ9Jk790bVVY
CqlkqWAc6CMbP19oSmXUCSuNd2YpCIkXbuVh6smESjDILI2DkIaNv6IpKuti
46t/Db3UEo01BknErhcHZlM4TBwLR8l4zxXoBw4aKbTNCr0U/9KWaKQjkxaW
gsAQQai4QGVdWCqRMmskVucLEGMZjCo4ZbC03u+HagqFE5Ck2BMb71rqXSR1
bl+DN6BZKv5ScqK6xR2KpVc8q9jVwmptk3Ee2P4SmVIhKvDQ6wOrAV4QVYJf
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
8Ev7fYGk6qCy4LbMu5pYGuecWFoWnKRtuj2grmYptoCHkBanB0vrgkuyoaRb
lETzsVT1ofNOKSalSiVexyFY1s8RLesdVKdfzEGdpN779Q6Vq183zempnKUv
ifpmG9/sLzXnlxr1+IqllXF8XXRfZuNXspR115I+UXuN+tAylkocX7NU6p5u
wVKtl5ojStrG/1/I0iqc9uYsBUWl8f7N9VKK40uz6DKWGkRVcSWdX3oLlkIo
nsv929syWWlvotJ1cktkq2YKVI+fKagVylqnNB7JNheiSsYOJWFmC5JvqXMy
MYASMldXqMIoy+n0Rhm+SnHn8s+WTAYDxCRvTqeNcEwxb0r0WPG4CvpUppOR
X2oeTI1TIqkSGz+eKsbIVC9Bck1ovZRt/GxjIlGEpJE3ZRCSMC6978SnoW18
7VLWLJUnKf7SXfVSM0vFeDeXO5m7kjawwin5pVp33VUv1fmlVGrKLJVCexMk
FUvFX9oYCUMvVUmqpmGic0pxaBGS5Xoplh6x8aW76W75pe6icLKTomUs2h6P
aYrKUvtRYebDwFd1TxJXUpF6Z+2sEyCtmp03Yk/+ukWn5ESJv1Qvpe6pnvNL
G40aUtpIMfq5egyTnCgHJTuV2Pgqn19qQkkoJXWWaqYEs1iRf3VZqNTak8wt
ArytLkDYJTS2LiyqIn0WVTq6sKBWZmYbZ+eoaNQx3zQ1B5FaUVVzOjNbP+2Q
ElHAECK1+bJeOzlRP616myifqg45aVqO2oSlnBM1JiwtCz9JHF/X45v8paas
J1PPPZWVOlDSUq+Spfj3Fiy9dW8TzVKdE1UZeCLMjgyX2fiKqCYbf1/vuaqB
W7D0jHQ65ZPg35PmDlGGFG18Yan0fy7LidJjVJUNrNFYnMrqc3nJ0mmWOZvC
KrVeSZxn00hnRJWl5EkGL02KwSwtprjnCbnU8ZhZSvX7hWWqvjcqiVR+OzVL
WZNay0Pr5zmxnyr9ZboNqcTH2dQUSzkp818VDVa6oEhFlZr1SWVSpZnPOWkC
INOOqClXmKXcvJooB21TXLWapbp4VnPSxNKk5CapJ3PzOL48RjxD0iRj5SAV
G58UzkSSnnYipTVSM0vNeqk0JrVwO1PNUulYIs5SKg6FwqnrnqSq1FvOUmpV
atSQgqU8+cjuLC2HpKGXGl5TmsIJeqnUkGIk2CssNdU9lbC0ORgSlrZGI8Bp
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
YHzH7FarA1tWIdgo2622VZLxvMWeqLW56ydmYenz3M22qmF7/YjLak832wvW
0ZXmMR45sd4ydR6CjZaxVM2Ar7rfU93vhdD6oI+X3roRX/2Yq2Z4Qld3qklF
uS2eFIdCcaUSKtUdZRzcbhhztU0l2ydX2ibW2ifOt05stNjXsWweX2kZX2m1
L7fZCpBm21KzbRm3ZB0riODf1rGlltG8dTjfOJK3DOcahrJNQ0uNg3msNAwn
Gkb91YPTVf3D+3rPiQeVWdq374S95pzL0h+zDKTokNElOdYykGvoT9f3xqpP
B/adWGRx7T3h2n/Kd+Ccv+qMb+/J+X0nZ/YcH917V29lX/1b+EvNcXyrt3Ao
cp/r2sOh60/OXviqbeXzIuNrn7Otfnps+eO9uf98OHsDljjUQql1urWCag48
8d6CBLWNYvxkSygLkE5sfCBy3xPOi18ZX/msbflzY8u43Gf5io8NLP1Nd/hG
UzBXPm2fv3As8Z6Fax8L3v/EzNaXcBTdJ+52+TOQkcI/HU+/ry140RqitCVu
wALurXTELg6t/UX4/q+5r319Yu2L9tUvjC9/YZwOxHUfH1n9hzuy7+5Kb7el
KWe1LZVsScSlvEj3vub217n2rHIjSxWS9MEzz8JM69wR5VDm7pHV/xK88YT7
8tfsq5+j+1TymbHCpwYLf3dn+qHuxPmu9LKUiLZxpVJ7ZLk7eH1k7T8Fbnze
ufMl3J7cJ57MWOHTOHAk+/DY0sNT65+0LX1iOPfocO6TSjIfH848PJT6x4nl
R6Y3PsV7afto9pOjuUdHsvj3H06n/rTVud3gSsDM1yyVCBSxNJPmHlPUZqor
sXx74sb42gcc64+NFx7j8zw+nH50JPMYTjWSxoX+aWrpo461R225x7BrJPOp
sdyncC3cxmj24f7Mf2pzblrmAgTSRWcxju9L9wSvT239VfjeLy9c+IJ96dPj
S5+15T9jyz8OGVv6cF/mz1vmt1o9qaL9HgobSqmaYWoXG58RKvwkpZRZ2swu
0zZP6rD/mmPrA8Ebn8cV6Sq5T4/nHx/PfxJ3bsMVU3/esXC5cT5C8z1xrj6Z
/5OBw577XJc+Grrny9Orn7blPkVH4W4LeLB4FA+PpD80s/KJiaVHx9J4Go8O
p2T5yHDqY8PJjwynPuhY+7g9/wne8glDHhlOfnQo9VdH/ffV2PwNDifVPdmn
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
STtYOhz7a+ilZc8Ez9O9/pOJ5JOTmafxwZbnKU8bL5BcQJvfHY//Y+fYNYOl
5f1LQUvqrXfi1G13Hr/ZHCVgKUxO2PhMb3p0iXuIM4GLzy2uPj2V+Wxf7L+C
pYfy68pfamTsc9J+QbeKKpVylpqqk5ReOrHy6cClX+D50Ift7teYh7/wnv+R
I/vVkfSHDvrvBUubg0WWkmfSt35n5N/Cxg9deVF4yLcK2/mZucI37ZlHT0b/
TYfnktXPVZlkkhNLO8PXYePD0MCPb+Ty67hW4p5XY1d+6d/6yWzuybHMR++I
/X5PcgcslY4uFgapmaU8/wj1K5BO0ZIQZeTeS8qokYQfiApLh/OPeLefgyIa
vvJKXF7dFXKYzGS/PpL68OHAg80+sJS6mGqWNnrzxNLlD/su/kT/nOHA6OUX
+bE8NR7/6nTmaZh+xEnjoeGj5V4nNx2+WXMr3wtdfEU+HsaxL9De3GfPRv68
Y+EiOGnx+aWzk2pMarR3JpzSehBjOj33TK98KbD9Cn7N6VT3vC4Xcm78wIEL
Rb84v/QDXEh9Wq6/IXs9578/lflKf+xvWhcuNMyH6hY9uvlevdvd7M0d9Dw4
ufZI8MpzfOAb8Wtv4GOGH0HweSr36b74X7TPX271ZKDHAm6NXFBP04M6PU0u
r9XpbXZRHVOz10dCeaRBanIi/8o0zR6j9Ik2elqcKbDUsf5Y4PKz/CXFq3hN
ruje+N5k9vH+6F8cct6wLiQauTyKZnNedDU6kkfd73NufT14+RdyFD5jYFdw
+2f4jE2kvgoCQKfCZ0m+2vgsYS8wO7f09Fjsi2NR6PM/D156xXysb/unc/mn
oPYcdf5uzWigcdopNn7NuMtiWxtK/RVM8uCV18zvKb3jma+Px740m/82DHCm
0BvynoavvOC/8CN+I76ATwXULSiW8jzl04J33JH73EDkP7dNXGiwuc0svcP1
btfWN/G2Grf3Kr+0Z2fz35pIfAW/kq71nxuKHN1P8jreo5c95783mXnsLud7
awd9opTuKqW5+kP7z8zU952fWXkEKDaDRb3jmSfGol+ezX9XXh2pUnh37qFX
t7j+/cn01/AwF1e+D21fIwJ3i710bPaTZ33vs/QnKlna0Lc0HP8r386P5DOW
uPvX8i2g55l7Et+R6cw3oPCLNaTfPkJB/suj0f/WMXr5tjttmqXmeUj3QwE+
xbqo0bzUPA+p9NVvdK30BB9y7jyFdwrfi/S9b8Svvri48t3p7BOTqc9Npj/d
G//L21P39iwVWUogXcob2umKMfHHTTVVsYtVlZBi6X325U9Grr2E15K579fJ
6696Nn4Isk0nv+BIf34k8fcH/Tc0S61GQRNYekf4zxYufC12/cXira5+G1/h
ydQXxtMPn4y+v8OzA5bS7CexOCdErXWFro/kPhy+8iyulbrx69SN1/Do5vLf
cKS+jMvZ0v90R+zdZr1Us9Q8n52wVGL31Ny+dJ47arZMK1FhaVfkntH8x/AR
il//FS6XufFa4MJPZ5e+MZX+Iu5zNPnBw4G3a5ZamaWk0BJL77Mtfyh07Zkk
vzo8FnwGcKtT6S9DxmNfnMl9M3z1JcAtdR/txbcGDw27JlNfssU/P7fyHWih
yRu/pidzz0sghuydSH/8bPTfgaWNLppMRLFUWpJKF2g9+QiztMN99/Tq5yP4
Fbjn9eS9ryeuQyv+4UxeLvSFscjn5wvfx2994sZrqftor3GhL06mP9Mf+S/t
C5v1c37NUhKaxi5/yPeOyfWHYzeeV+8d3yF+XHDzU9lHz8X+z7aZnRZ3GpDE
IZRJZTSC1j2gSOaMBlBen8ydR2VT3KvEMrsIaZjhviUL841zsUPuBx0bn4he
+7k8T9wqvolyxYn0o32R/9CzeL15MUlnkyp+p7dlPnun7/2uC0/Err8k9xm7
8ovF5aenM1+ZSH5+IvlF/KL5t3+Ob2jy+mt4c4OXnl0ofGs6/TV6C2KfGw1/
Pkh7X0vd+8+Z+94IX3x2YeVb0/z5tKc/fMz99vrxsLC0dnIKLG2yrw2l/2vo
2k/pPb3xOt5T+XDKezoW/exM/hvQmhK099emz8MXIaORx8EHvONx0171ecg8
NhD9j632LbC02majevzhyaoB7zHXOz3b3+Szvf7/M/aewXVV2broj1ev20k5
5yxLsixbstLOOeec81bOWbIkJwwGOl2g+3afhu6GpqGJBidsbJxzxgFMds7G
Ee6tOvfPG2POvbdlc86tVzVq19ZeWmuumb41xlzzG59/+qFj+Kqq7Sy5vSNi
9yGh+6ip5woBrkfkEXnX3HcJ5pc0ADe/dYHmt4ilDPZM/ATMxC335Hsyi5PK
4T3mPS2RpjF65B1b3ZPY4zDNoceh/eEpgD3uP8q1HwAMB3SF+6e9o+n6GoYZ
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
ax1naGuQsnCaw+O+0fxBje7lRbrnF2qeW6hdvUj/XI3u2cWGNbWGF+vMrzTa
/tpkfxUeQEvMb9Qa36gz/RMMviw2/keN6cV8aWcqV53KF1DeEyoyM1VZnB5x
+CNj72lF+Ausl+tz0p7Q/se5Lnh2rC0VPVckHCkSdoEV8DsKBZ0FgjZqefz2
fEFHgbATfs/ntedx23I5rWDZ7GA225fJNqcyZfFNLMLHXxJRbV7EQ7/U9jdd
1zGYQVg71+fQfVic4xjXuR9ckQr5K4CWuay2XHZLDiucyw7lcsNw2XzOEPil
3c9d9i37VtZ+WBY+JGk5JGk9KGndL23ZIw58WCzqBjcVw///RocULFPfMd/5
QvDZiy2r/rd58I6+/7ahD+wmWv9Vfc8lafisf9mdlmcfmoav6weuEruCNnhB
N/gNK7whzzxEk3U8fq9t9sKP4t4t7S/etS+9YRi8OuPES4aBC/LWs6be8z3P
/x/n2D1S3O0IIaLvqrHvirRj73z7M7mW1hybL0IpIpZr7QZw863+PvQM0kCM
vZFb1fdeM/Re0/afZbS8XWKbKnC2F1Khz3BbcbALnGdF//bu3/zsnrhn7McK
kjreNPZdh+I0Xd9bhy+FVz+wjtyM3uRVWjvD4Pf81s2VnlXF/i4kilK5wFBL
PnXCiR4o1WJGtqkLv+CfnkCJe6m4c3vr6p9c4/dxx3svVk3fewPaE+kqXYer
nL/JMbfHsJSul6YbQgW65XCrrWvuO0bvki5AMkvkVvt/gGZZZP9LmXNpqae3
zNMNVuql1lni6QCDLwCSWQY/wCZYltafpfVm63xZWneG3pWuw3VR9EudrgJr
Z633z+Hnfwg+c8c0dCXSoVDxvsuGgUuavlPN3n9XmJ8tNPXipdROMIiFM1QO
ajTDSZrSma5y5ZsChZZQjs5D/sFOovuIU5qm1NI8UeCX0ndP+rF9Hc8/tA3f
MfTcig6z61i7gW/5revyFKO5hsD/BUtjAqP/P7G03LDaNnWs7Tnc/InjJNrv
MFr0fV/zQxtLNMszFc4sHeE9kXxQyUJHtfGlltXnw6siY4x2Ab1PXd+XTO87
aZzeZK4jma9PERjgM5mvS+Jp4TNdas5S2NIllkS+FiyFq0vmaJM5miS2Gj6T
uaoELqaEiqQnjWIpRA2dL97D/XJ9tx5Pvd5ruOuj9UCF6g9JTa5EpjKRpQJL
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
qbUk1dqSltiTljgS66AIV0pzOI8/3mD9myj0ibRlJwSAgAYwGmWhT9Ttnxn7
tsna/lUi7U3lqmPrpeiwzWck13h5rrfE3p20ODCp94gyiNPc1HOMbX0zfXFX
Uo09ebExebE1cbEtcbEViobvqXXmlFoVvpaqWjSvqoquAAC0/hJLqV4zwlpF
1ezShtRqe4P+TyLPZ9DX2J6kjuCaKls+13eckAW2FDKm4ivN8QsUcdWqeVXq
+EX61CZbYr09taG9Tvcqy/oh0/ZvhvVfbMdbXOe/BJ5/C73vSP3vc11/zuW4
Zy9kUCyl0f1MPin4xvH1DSWOgRrPC+re/db+88qWr/ie08jTcZ0gDIVjXOdB
hn3DQv3/qNKvrNBOzjdMVjtWLXA9U+1eXW17sc72d2XPTvvU59KuvdyWXdyW
PfDJCe/khXdyglsZ3o8W2V6rdv5+gXtNhWPVfPtKNOuKcsszVaaXhIFt4Adq
O74R+E5xXZ/z3KdoiXz3EZZnY6FyOEVoTBQqwMNEbXcTplmmfqmia49l8Ct5
6Czcp4CchQwm1zGOd/siyx+zxG1JQj3F0gJ/MM/fChE3M/CBqf+svvsbof80
5ZVEyoIKunYusfxtvvbZMt3yctN0uWV5qWl6vnnZfP3qRYb/AFS3T55U9h5A
uaXWPbz2PZzWXdzWHeyWTfXB1wvNqPpBgfSxbL3NAVjKCa019H6Jb8S8p6Ax
Y+2J9+n+pEw1RbF0hnodxvgV9ue4rWsNg2c0HedoszwmB3kOs52fNVg+kLZt
lHVsYLg/bHS83+j4sMm5tsH5foPr7XrnqxWG6RylG7AUPMZELoZ4M9dUwWOE
B1MG7i9159mCBZa+Ess4VLnMsKzUMFmmnyzVLS3TTpVpVtaYX9H2bHdMfC5p
28ULbOP6PuP5t+MXeCx619Xb/2eGwJHEFeFWRhYX/NIsmYy+40ji8XCN7r/A
Ui3FUlHbOsvQF6q2L2jf0WYB43p3N3v+VaybyDMGwS9NVmsAS5GFJNeCR5qv
apd0vWefPK7uP8QJbuOGdvAiY2wbN7il0fP3HGU7kRZVx/j4Caggj36psHW9
qe+MsuVLaEzKgiFEmKPQ7032t4oUU4ClmVp9mlwFfjvF0nLlc+rOXaZ+CO0j
/w9GKUJs10FwLdRte9xjJ+Stn8EjGKWIfJ+Cod6T/4MG62/SGba4Wg5Jxs6A
+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
RThOLMkMp5siw8RSYKwwGrxhh5JNjkCpUAGtlHQNFHX2l3QPlvdJKgTGuqEx
ZQz8qOcS29/zL+AjIOg1co2HT7nmTuvHDzTbttXZE5h6AWEIMfoe65e69uqm
74ztehN6F82ImuGYABrDutVETgCiRre8Db/snXsRbjrGxAlT8qRl5LR3Dm58
f0Qs5fAploK3XNrLL+pSQNgFizy8+SVwJ7xzLxvI9YBHB9fjmXkKpsM4coou
M8p7ovc7CLjs04/I4teuYqkdS54ClgI6yX1s/X73/KnkLlxj/oVXqVKkFoXz
cI0NuX6SxzbmMvvzmjoI2bCjgNdb0NaX09YL419ntFforCUqPVip0pg1zAKV
a4sUmmyMD+F54ZCmoNMtDV6Dek+4VD7AVNg4IUQnTjvGwSE/xBpayGUO5Ta1
5rHa8jjtBS2dudzOHG536aC8RmMuVeoLpWqwYokWK7mJVcQwl68QEFWmXoul
G9jiNuWyf+Gx5M6PoDlSXf800qiTj1hGT7omj3Vo9uU1CRFLWRyAbvo8Ibez
m/qlGa69WPI/+qX55FiEPi+lWLqurqOI67eOHUzteiu5+5PIyjuUmU7cnkc9
M6eUEOMzzRhxN3HBcljcjXBjau+BlYyVUYeUBf3SfIEEjS9C6xNjuilfktcn
REV7sTSLpXltHesbmOsYrSUtTsp7Su/6FHaQZSwznrrkI/aJRywjd9YLJtfV
dgKQ5jYyNzQ2gv9cThzLvG55tXBYlfyzb/407Gv4Y33yPl3ir4bU/abhB1wz
D2sTByr7N+V1WHM71dRyOlSr7xVFveJi/iAD/dJ96tS9htST+uRZVYxIPiE9
4TG4pzumzwp9/1E56CvhS0oEQ/lDYojxa3z+hlgM4BSwtNJH/FKvj2FDLIU7
JpG76sTAU4AHT5VEs6BYpf6GX+raIoreCt6vYfgpTewxqqoDt0jYX/bJZ/Xp
w/XSUcDSgj5ROUTrdnfGUXSMdPqvUqSO6IdP65C4gXI82vhjeKmjz1gnTwhc
Py4TeAt65TDjEOri007E0h3C+I1awLrhJ7Xxx7GtGNwszsDMQrhnnniAq18p
GzIXSVSApeCF4pF6Fki9QcDSKpMVC9R04d0BrW+gfNDcY79MEbtOHrlZHr5F
Fj0gTxxQpm7Xjd1lnDyiTN4l9h/FJoafUscfoy1q8J+obWQauZejns/r1dRa
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
Z2bb3n9uf/uJa+xz++in9tGPb8Y+dn342vHx65t3X/BBtX/50f55vOPLBK/E
hc8Kq/vnFL8PXydZrwjbA+vz9zdfxl//mO6aX6FGbM36l25slheX2r5+ByLa
R9+/GfmA1TaM9Z5r5CMcwNLsYufyGrx7m3ezlLbUizVRZGnn8kqBpaKobNTM
Lp2YpI8wOIr1cmDs1eBbrddDANT7tnef2j9+ewPn8cPXtrefsV6PfWp7+5WV
Qu8+Y7W//6pvBa5rA/e8+/zq/bc3X6feTM63Tc1bz73Vjrk5snRiEjB8OTjQ
NjDQ1j/yum/0Vf/Yq4GR14Ojr4fGcAZp/zrBoU7jC20TFNDZotmjmXfds7M4
a7NxvXUKVedzEI9hIliqtf7XgwzFvxgYDIZr/9Bfg8OsLWFf/SkttR8RpioX
l702ofLdr9+9G1tPRsaeDg1TETA08tfgoLSrz0ZGX337gW8CWApMAZLB2kz4
mRZngqXgmPPHWZqar+zLdHgEk+YJ2wkyL4znYvsse8a/3n3AKdXtUlm2HEn8
n/+M3N7BZH0yPKrX+WKQlTAMfQyPPMWZZXwCP4234alNlnUJM+Yc51y+tYEB
E+QOSZbLooh37/HB9u7sg6XNJwVYjCwBVZT4d7CxA2MvrmxdYrFn9fllH2yw
h4exX38PX93wk3z77snA4ItBPRdfZ3hrHz+DP++twso+E7HUzLn9oxc/fj7B
Q/oHXsRGiy/GRp8PD2O9+fgJDhTu5UHwZoeGcfmEa4zNGCemno5l9/rCvc8+
fQHrao1zsvTuvv/k9OXE1JPB4acD4XPQ4gFHx958/f7s3TsdB7do2ZdhGB9v
5/wiNUcmEwbfhuGb1M/BzCxxf3QGimbr5BRm5Mj5BX5x+EfDe6JXFRe+n3gN
zz9/qa5vDjfO8bmNXl4NXV6OXuLKzcjFpa1r2qJX1wIpw9qN8/KxNcO3OU2c
AMhBn2EqPT7bgf2D2vIq3gsDX4ND+iFw9eGDHXr+/iN++737+6Cx7FK4+Tgv
VNY2Xr7/9KS3hp0v+vrwU+Ilrg8MvrJEG14wXv9z/LKShY8FX6H2L1/5GeIp
Bvu54r346F59+17b2MB/Vg33ONl5fx+Iw7/yr2rNnmXgVW1Aihs+19Bw2+gY
8ym1PnmdWE/tOnMitKDe4kVqA25/WuW9WPiyvfz0pbRA1WdpYwPnO9bqLy69
+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
NDgB0n/DUuJ0ZubPLPU8vlia8lN1U6EO33JPyvXrds0lkQrAc09gafhhWpWO
WOrOqfuwWQH5WcgsD8WyH69pb1n5wxjjL9iEvzwB5LFBf1SohL+7dUOUJmi0
S9VOpGCmBkc7nyXPrajcV9wy9BqN1nXoj3euHqS0xkejbN+1nD5BT+RR/yux
l+kYZmTuiqb49S0tXvsMR63JM0xuWMsjN/cq0VSVpmIm1izrYezvv0d/k+qK
e+Be7By9/jVyZWS+DeTHBzj062EQPvXdzTB8h5sgOBq8vAHxsPAocY+CJr4k
W5csaMe9FCbUWb2AK2yfYi+1jydBFv+zYt/+s6H+vx4Wq+v1RNE6zZeVhqVe
987SUlZcGszOlKWU1FnPE1UNeWoJy1nqdmlzx5LIUhY7uY/fbJcydrofkkqe
ewp5fCt2crsUS0Wh5T2YsrtCZaSoUvmG06293gMWjhbs0jRBD06mLGXoNaFo
mnsSSy21tN4cLPXcE1ka/XemlpY3I0tXWF9q6X6V+nu+KS5Dpfn4YmnHylLn
6rLfnpblM4C5vuHwLFA0XWxyZXX4XgTVkqWeo29mKS7h3ZdWliNL51UNpSpT
d+TTPL5Y2jY92zYdKktZ4DQ9LQ0pLllGZSxlin8isDTNK6k36R9YquRU1gt6
YoIr1KBOvhqfUgkWYTvJlvttyWgS8vbnT+We4O8HC8cM0T+zFL81lfSIpQoJ
ikuqhHyMpYAGWNpjT1GoI1IWBuYWWBp6nP7z92MsDZ1LjaV9KoJ9hKVwcpV2
19sJ+f3khcUEEJdYGrqvJNX1hRepPlqM017beKZWEU5hPAuVqJV0InOgAKoR
kK76UjjvjNNaNED1Wn1nV1yGPpCciL6HpQ3z9VqQ7DepF5eBFAuGIm5XLagZ
wGZSqr2SWcUcrHzJ6yCthTjuBmNFk+xM7dH85SAINXjiirrqxWpSs06vg3TU
1hUWFWoNfkOw+k/P+04a/aeNvpM6FvgJPArsEmpxHbGinoX6XhxlU/Zkl4b6
0r2jgudeYKkNtT8KNmcixlf/UrFUNVHEKczOzV15+mm9k2pHnaVmlwaWZtbp
9v5/ZSmWfPwQL93YKhilbpeqHjWYnf+apZ1LGwWWYptV8ssoXW1mKR6r/DtY
ypWr1c+xVBT9NyzF/majNPXx/8BSLJbWG0stztmapV5fKrvU+BlYalzNWKp6
flmhDlK3S6UzFUsLNmdLDWnK0pjHnxJLGZKdZtYpiJ5asdTtUsFQmeUCSxOj
9LJ6ehEqHi0I2RtZKkrI00yNwz4zDpmdv7ylvrIV/UIixqIBpGWepSlO02Ap
WRrUAU2FSeewsS/UGJAvUoWpl56ULz51sEutNikqDppS6nZeYJqMKtcsk1Ww
2MVnNghN6kvTCGe6kx8Ot11bpVOoPrVI6TmWdsIN5xRmyz318qM7V01U9O7P
bVkeqnFuSaI7O7jFwBVNtRy9BKT6BwnI1JCex0iCGHhyKbtUCSDJ4QFJJqFw
WT+n0VhnFGJAI5vNhtQ21TKxYeA5Zfhs320j7PsbjQGcrUxHr3HM2jbUuMKS
AnTozHSgemwUh2Lh9gFjcu34rP+4zlHRJ3X+eQbkNvrq9erJSRC92gRYX0bp
o5oNxasdR/GUleIzXCDTdJtl+WrIAJbiChjoKyShtoODL4NTeSXdLkNUyyGJ
exUv7d7En1kuya+wwGmDsibZpb6nmaXy8engO0vjku7JVKu7fAHBf89AStxF
u1RR2ULuSbl4nzGqeGlt00pPH2Fp6uOnRql3hC6wNJivs0tcUd8EbKqHc7Q5
59qnAmPFVZM+OUuz6lOPl2a1pnNzxlJW++Muefcd43Y5OZvOcpKPn7K0/c8s
jQ6+15fCpmUeamqKZfnR8felzaqJsoRIxlKxIiagM1AYKi+z+lILQubs0pQn
MV7qthxYqm5Laf1PSt3+2F+6maXNK6iZGld8PfXmgvnAUpUN1KI2Snmi1H4O
pfVmjatmXixNrXEvB3WWeqSiEACJFn5gafoxeoSTBqpVjTpL2QLlPH5iIZd0
YashpZJyT8q867FeF9pz3LBlMc+zupmadzxHWAy8kKNnW2YrnRJLq41z1fNb
vJSrKo3SYWidlzbTq5yexVqmk54YFKWrbpl37GThKLYdc0nX6b1MQTyZpoBk
LSq2KsQdhf/U/h+eqhsA7FIRVU0GAE/dhaNROG/aeZq79bpYCtNUpq9Im1sm
DmVn6Xpj4AymcmPwrD5wejaAu44imU00OmACUulJJW6SdkkDQ6VRkqAJS/Ko
VPcEoNGM3Nzhn7FWHyQsbYWCqFQcqlp98/Ez3qZlUYBkWl+qulBPzeuSy+xS
PDWRnmNpsDkVC8Vje7a2Qkw1CpqkJ/W+JVhgqWj5b1jquafg2ifd9cVS5ehb
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
oekPLHWhfWRpOFRShJ/JSA+PlcD6g11KEdP+gTJczSzNJowYdS2Pf5YZrnmW
dkXdk7M06ZYfRjgxhWTwVG9SZ2lz7SgLR7d26OPvHyrxlNiclsG3BiYUNJn/
LpYCrYWCKGbkI0t7ovzTWZpNGo0sVSNoSZaSWU5Zfals10KtvnvoYqnPD/V4
aZqvZ7LJ4qXK9aufnsdI5cvn5o/EPL7nnjpnF+S5d8Q8vveAyvShscqUvUoy
DSkf66NF3dr0mGoA79Kq8VbCfDZCiRxekvaTzIxzRZ2iDlLBVnNIXUAadExW
MaUNFJPOZ4pRbpua6Z6elW5UN6p7iU98piE6Mds5GW4Rb1UWrmpJFdVo3j1+
R0qOFwp1VKWjnaq9T6Op1ahwVJTVe8JrZyXtztHCL2Y0snpxEXztvO+sUECl
fomd4DPQ593jMxl7Ql1Y13iFbIhEk5gtmh+zdW3kU/Dx08qB2umltRw8l0jB
tZx+HAdp+o56zi7EUmdmVGbdi6UeNVU4Vz7+YyyF40znXXl8d96PPaNEszN0
yTs+Y41rYpeWk77NwS41SOZ8/KP8wNBYt4/nZbzUpooUOjvl9KExqSRBkxx/
lTClE+1LBwe9p7Bg61SqPurj7wmSct4TlmZmp6Yw4+FWSHCiPbo3898397Fk
l7qIPp08gp1Ku7tdyob5j7NUDZyxTc2dWvYtITY3NtwuzWmaXNmk2vv1dUVN
iV/cuLyZDB8RVFcVFIVTL07CHPVe0M21+oU8vtfhpyxt7v+capqCXbrYJMY3
SKo3aWkZ3v1mGFCSLy515MKMhM3ZubjQsZCUQk3NerxUuierHV1Ks/yexw81
n5Z7UulUz9IyQRptWt2uribluQWPAHgG3+OlJpWaszDCrOuevKue9y0RUePE
qGmfLkpIAphTU0wqRd19phidnLI13aFbLPGEFWQ7UnfesSxcNeHU1CdF467r
kWeKnaOmJKKY/eZeJYvZugyTN01bxDxLKt50tamvKAK61/AjuNvSAamWkhPf
rEWeMG49WJgq4oiNi8ugxzcdkDfTs52XGmlUYxmqNduPlQPNPr5Yaqm0c6bh
pOI8rHNRyBliIGHqXCN0aEkpmhU1RZbyI7VsfjNLtcRSvAtl51uyNAjezccP
3r3FS91/F0vVMx8fVMpSzyt5IFTOu+zScLTYuCmj6EFI66uSP2twmqTmU5Z6
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
05QSVYyVXZqytCkQuuU+vlm2mT60cwV+etZPj+br3h4FTXG2iOfog3DJ8vgc
kxfz+Hm7dKWZpdLgdy2udqRye8VLLaaqRH+zpknxUhu3V2SpZ+qZuI96/Ny9
yVy8ds3FM5aGPXmQiqXw652l3hXKiapgqfShmj+SsjQFqdfhF+qjnKUC6X9l
acHHL7DU5+KJpdiJ6zlO/muWwjQlTifZdi/NjITEt1mPito1z8JQvkZpnVwu
u2kiRphH3MTSYpLFsv+w1kwEdF2uh3nEqQIoyZKbUjKaxK6+TEmlzUCZvZ3w
1HzZyZPWAksbkaVByxneUX4Oss4gNitEuviL5p0u58ROwdmSSsb/5hl2pqDX
hxOqefUB5geFMB8Eyyqy1DuOeqVTGhH1pFKax0/7Niu+qs5Oqi8NQ0gtUmrK
0GxSM0cqN0IDKHYawfu1PJcs0lQFIB9fdqmm1acdSyT5BBiHOO/pPMjtGw1c
94W7tDSpuXZ2xuDqyanmOPenK85rHjyrS/gZ+jtJNX8YJJ9S0Ev1qZApRaCm
8dTkUBsGeuhKUoUCCNX9Q+mVNBs0iEAlYrL6Uumb0rl4NrV5V7PzrCbqwPqX
bnLJcLU5I6rV77aclMrsSzayOdZErYB7IS5qLA09oIzAIB4dduNkmG6/vMLi
fOWnoj7UffZAPDNixVJcaZ7FjMvAUpvWlG3wviUzoW1+1k/PcvRp4intrq9Y
qHqKpl1N0mx+1JCmLNXUvGlX3yteGmv+c5FSB6lYGjrtt5qLV2Bp6HySzHt6
+XPcWWqdS4O+vtDbpODjewTAF3x8rI6Jyc7JqVQtLpbCY3WWFnEaA6Fh5OVZ
FiDNYqr2kAi0C/nFAlqqJc9VAZ3UwVKOMoksjXGDHMYrcdpmKs7SMUN/j/jU
eLi61nt4ocDS3nBMsPQiVtXeaMpn+l7SyIazFIeimZrXxeshnB5ywlr9ODTZ
DNrkY6lEyadYKmVE9azuVfdFnFp9qVgaMkpNLC0pFmr1pd7kOcs95dP0OKb3
NmFh1YHUoEcluuQsH5XkMyTole6PNVFBXB9S84daYqny+ExI7TYVjlpFKA1O
o6gamDSzlPPubVWO8VIPlKOXzRkmNW+HKilwzxs3iYE+rV6L9IMZeXConiTa
JgYCklLQc5tJmYRTHSfV2ucmMu9zeDQorVFN+NPvsnWkY8Io1WRnXOHgZnuu
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
LTzDd97sp6MKAXdO8NPEqclS/PbUT+fFUvSVAEk1t6YdPz1Zihqp2GlvRKEs
znKwVKx9TnGq7I24VMymlvYH2GHZXO6k66U+OcWqWCrs5pNSK6f7K6b65bSn
M8cHS58EpBUzsp4PBkMdO81euWrhoiXjx4/v0a9fcsMGz/l9gqX+IFgK9ahD
zYQolAhZ3uejGK9iWmpFCpvjnXtLuF7KLC0WF6e0TnafpjCpV+K41JOldDdM
4BePiykWE+0AKRuLcL20iLj0SVgqGvoGS507oApnqWN5PnpGer9TXakGtYoA
2G0ClurZUWapnHqqLaaYeCaquLG3xMHSwuJST/+RwnRPJkufjYx4ulZNk6VY
YKI0pJKlDj2+g6Ucl3qz9NXXsFefDka1wTSGD0ebZswpBocaOCHDV7pZyp+C
tlTISxWT6/McDsFZqC+lxhOBH/9dc4zEGn9GN2YDVGxsOHLaoizdeKqkTT9t
zSbXz+L+5sUF+Q0dH2ShfbkM2ykrF0aB9uWluLWM1uMzKm07maV4VhRCs3O5
W+QAKQhJn4UUiy8Dky0fT1iHGJudcA3iRlMXLz4itzdbzXr8brUqiltR+Aiz
1N3HJzJTql5KO9qDpap3r4/VzdfDTphQoqjspWBG6xEjGvV/8wV/sGxiKvaW
4DLuMf0tSwmklMvXadR42rKl6zdvWrRg4fix47r37hNo3Phffn/5gHJoQhUU
rXxW3EuzZgnJlJRKab5/pftyevTyde5aNkE2a7TuiVlaKp1YmoomfjHpeeew
Y4afXRl60VEsjTFZSom8yOWNHJ8eOCqlf8tSrpcSGN05vrP3pOfwiaXqa10p
PBaZojuvWVpHHjdLY8LqxfLeEg5Kiau8T48+a8zqe68uEb112VRy7C35G5bW
qCGOi6W61urBUjrKf0TP6jMhzSX8RMgS9N2acam8pthrhpeTjEvpGxDpvLFX
/5lXFUufrqbiUvwl8tYLa9+I5moRLP3bcI5VjWo/nlyXBAUiHiOkJKrwTBRm
xc24VC0PkZJzIdWRvSesXoGi05RwgifClViWAjCZWdbw3MQQJljB9scKuXpP
i3gg3ZCVllNvR1G01+r+KsahoL2yfF0g/FbSm6wQQiPyN48AV75+ddDBPys6
zYOfBZkC/5hwFzWVSlB64mJT9CSclyGP8lmSfISvMG7GHKn1AqRzf2ZpqaBe
jZLiauVLr09wDxP4qi1l7MpTenwpjWeWlk9OjW/UeMLChXPXr2/55pvPU8As
d4TSp5ilmIn62+z+xaxQn8mTt7/37uZNGxbPXzBhzNiePXuHGjd9wR+oaGcp
tJ/M0hLSyY5OueSk13Ny2w4ZNnPdxoZ9+5dPEAVGW1AqWRqeJqZGlRhf5vhO
X3u524RYiv4UsVS52hkspVNCeuexHt+d40P46cjxHWm+GZeaLDWXPPPeEmJp
oXtLDJbqOmqkcrcvhKXyAsOBVO8mxYipkeNbR1FUtoTM2dGiWWrbp1cIS/ka
c7j0acPLqUTtSJ4vfUq73pshKLG0eO3azFLmLbOUYlF0qcBSnpUCSyVOqzFL
ORASgY3kjyN5//+gqAlSrjGGBTOwWVqkw8JXSB3xwQzVKrJEQEYpspQvI9ye
QcP6DbP6Hp4dqMra7Tsdc1aYqxctJJ2So6mEjR9qqgojtbJogMoDbqiqEFKM
zwpNDu8FoCR7EUyK8kWmtYpE6CVDFvCFG7J8ORDADOWa0ngYIsNNSdFb4k69
wOWrgJyP2tkiG0ZCgx8Sp0q2FOwbQntxwMkcuUvEkvbnYg8ANjhhB36FnBwh
twexpSto+UBW+YBS5eufKwTj+3LSz47n6jGvVVbKmlR3PjNLSDvTfM/5/E26
dp8yZ96aTZtWbNnSpHf//0lJEwKidD+mQ93jo3J2VLecVOMpWDXgr9+t+9YP
977/wd4tGzYunjt/4uixfXr0zGvS7NVgZiWpiuIcn51E6ICQBNIy8fE1crJ7
j5+wYvPWpRs2NezRp0Jcgjb4UJ16ZinFpdYWaBdLiY0iLpUGo4Ydc4xeWhID
ooq4VNowqY36qvdEyX60AqaMS8FSE6HPGjajzFJLeerFUo5LLfVopBdLde+p
mD3B17l8HTYGlZiNNHtPcGq27dOrw/pQq1KKAFLwLcLS43uy9O93k+LUqs3X
OAb1n3bMjtaqJThs+OKZQlGTpZ6+eIKlcnO+m6VWjv9aNWIpHTP3FKHRk7G0
sH6TO8GvomeieCbTKQLyGY2Y3Dy775tre3yGCp6592TeU9UtAyqJdth3sv8R
NO88DI8bop8ODzjl7CmPKnVqLSd8lxxKJZsJSFDNl6oGfYatBKrml+SVyLVx
GQWQzg2i6Va9FDdUpQzJVQdIxSoVyEJlxQCBKA5XDFCPFT0gGcCXzqAYNUO0
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
So+nGkrKxGVV7j058nfb/tKI2iWjhKZJzOHDuMQ27FRLzURFRJhz+Og3mVOm
z2qoKo2qowMlPUoo7CRamj2sZ4ylfE9Xo8S/OnDKf7P054y4FPU3zx6HGsXx
Kqg6elXmtD/HpW7uMUsFWGSizSuq3CyFosdSaLoiUmTcDpaiRWXqYfmrAGfE
pbyV1HNm3tRyMsPd+iOTpXCWD3fva9I7melHVi0qu3aedzoBifj/ogZic/KK
ZqmqGBTOUoKkWGGXnQOWelAU0/V6S55iqVbZ25ShySL3V0tLDJY6TJqE6D41
DSwlSL4cFx8VH5+fn9+3Z6+pUyavWb2Ssux169bNmDFj8NAh7Tp1zmvZ6nWi
LmEzLr5qWvorWdnVc+vXbdgopkmzeo2bJjZrPn31mjs//ufR4x++vXHz7Jlz
Rw4dfXf3nrUrV82eOp1Y2q1th0b5DTKy8yJTfc+lpJVLSiGelItPeskXaNar
94SZsxYsWbp2/Tp60t27d27dunXdmrVLFy+bPXPW6IkTfS1alZetHLtEVOT4
iCFLxcY/l5qe073nzHUbdxz7NLp5c6KQWl0ic3yxoVTPRLnj0sJYysVSayWp
ZKljTxRPOjlY6rnYxMzxRVMpqq7HfKlmaXhcLOJVMyK1++JFmYVT9wFL0evn
vaNs+WTteZYjASZLzW3PRcxE8QPe88wsVYZ6Bkv/8XpNNavv0jSZu6DZO09p
9g2KuvWhasbVqJeaM1FgqVnoY+cgDJl7zt44uIqQ1XyMCoA588+anVLGTnhT
Wcks5d0m5mdtV5rog/ReUQgnwDdXvpyOVXWFlxfANFuF1qhe8rJlte7DXuF0
sFR8h7n1MV5lXuP42RGXlskM8WWm5JOIamXlul5axKmSm0eHsnJZZbV6SaX0
NlH0lSh5xxY7MVovd+A7WIq+En0co7Diu5LdKJvQHsyE6hM5vmRpCVdcqiJV
WS+tEAxWSkmuFhcXExufnRXq0aXzxPETli9dJtpPGzfOmTNnxIgR3Xp079S7
V9dBgzsMHNxn7Phh02e+tXjxnFWrl23cvHr79lVbtu744MO7jx//8sefjx8/
vnn9xtdfnTl88NA7u3avWbFy1pRpQwcM6NqmbaO8/Ozs3IRg5gvJKZUTkyvG
JVQLZLbs3Xf0lKmz5y9YvnLFpk2bKCjdtWPn5o2bVq1YuWDe/GlTpg4bMya1
2Rvl0fWOTdAqUcFJyvGJchWTkhPfaDl15arPvrnw1dWrq99++6VgBq+BUjm+
7BlplnrLmsBShqfbecTN0mcN81BmKWZQbfFqnXrYp4cefYl60UWzVO02kZ0m
i6WF7IBiljqKpWaAinknEYIaLHXszDdn9YvVsNJ8x878wmeiRGef9+rznme3
t0jhfs21VIz6+uvo4z9L33B1+zTUa7qv9Fo1ikuJk0XMRNEh3tI1yj1Njo6r
oJQNmvM94Fk1TxxHH9njmOakBOecPHZhY/dMJWuS8lWoe+CVLFT2mSEljDIO
jO/xvVnXgHUikLMKjOLj0nIFsFIi/YCzIBBu7hEN5Tg2fzrKm2pxvRQWgZPS
Ed46okrpC5QMBMUNc1W7H9VLIWlPF5bKSiMvG/R0AQz41MuEls+bbiCISzkc
LYKoBNLK0r9JMtmHTSNgqVU11UqlIlgKnNJjuZM5R/xcqWlorIfxhBKM6eVH
ygSCVo6v66VulpbxB8oHAlWSk2vGxsfGxmYEgp3btxszavTSxUuIpbt27dog
/23fvvXtd9/5YN/H+w4dOnT880+OHTtw+MgnBw/vP3Bw3779H3/88fnz53+X
/x4/fEQsPfPlV8TSt3fuWr18xcy33iKWdmndpkluXv3snIZNmhOQM9u2TWvS
vE2/ASMnTp4xc/aiRYvWrFlDz0gs3bZl64Z165ctWTpn1uxJEyYOHD48qXHT
CrKLjYj02Xpq1ojo8XpObu+3pnx06otrd+59c/XqsdNf9hs/vnJCorVPL0Z0
/8WwU2LSk7AU5HSw1BGXFqYPfSYq2pOlvJsUMSfl9WoOvxCWPk0xZ50o7NuX
RVTbDihHXMq09AQpAOtgqbm9BNooVefUs/pyi1ShLPXU42OjlJulzuCzek1z
B5T9Gtm1h19zrVpiJkpr7d0spRT+SViKOoDS7EhlIveCATdTq8jCGeg0uToH
5aP78FIUNUmuF6RAjw9zTEtQKccmwWq8q/a/6Wt4tSZ0l5j/V9VdpdaxFJqs
x8drgZJh5tYvVKEpv0kEsXL1ivR0kyRhQZOSJkHLmZPLJIdOE6eU9rATOb4Q
YOaoVwHXrD5m5sFS3m1iqwOkWYhGvZR/e4WxFHoluWYkQ+1k1pYi5k5m3VQK
offEm51K6i15Je2bnZTQHncz0nx2FVEs9flLArkWSy3b+rDUlLI+X8VA4Pmk
lAhiab0YX0pqx7btKC4lmh04cODUqVMnT9ObU6dPy/+cOPn5558f//Tzo8eP
HaF/hw4f+uTgJ58QWY/du3fvzz///O233x49eEgs/eqLLz/Zf2DPjp2rli2f
PolYOrBTy1aNc3LzQzlvNGsxZcbMSdOnj5s8dfzktyZNnjJz5kxCNz3jzp3b
6WzZtHnNqtWLFiycMW362NFj+gwcmFzQhFkq5p3qiQXylRKS0lu32fzx/m8f
ff/d/UeXLl/9/PQXO/fu87dsWSYaElGZy8fGohSAHB++eJ4sLZOQJEZYjTko
8/CgKWf3NpDCjEmytHS8IDl/vLhdcU8xp9hbEheLvpL3Pj05ro+4VCnx7SwV
o6T2HL8wlnKmr1fZwwdK2jRrlhJjbf4jdjsnnjU1/Uds9VKd7Fv+I7Vr/bNG
9acNp2aeI0X+Xkhcavk1K91TzZqYd3KgEjk+sxSxqx2k1ZildA1HSmgAIe6y
9oW6espq7EdW8HAli77R2i6rd3Ui5gQB8Nj00HRIL+FrzOGrkpnbFZoQniMu
Fdp8qd9xCCTxWEE+X626UschpZQsBZ2qNigASwWX6LUgK7dySL0oMPCxRwsF
EES8UGsC0ebLB3s6q5qJ+SpjeBlzRwn3sb6rLOsljFWfSj5vvB6ZbyEChfZT
/t4yheuxP7Oc9PFUAqj0IPpEiEvp91lamy+D3qXlUc53/gxomjCrT9GsY3g+
XDbxhVmSZqka+9fzpfD9NFlaOd3/r8SUOjHx6ckpBNIFc+YSIc+e+ZpCzXPn
zp09e/brr7+mOPPL0198deo04fTEZ59/dvzT40ePHT8scErxJ11DqT2z9PrV
a3TxgY/3796+Y+XSZdMmTh7cb0DHFi2JpQ2zct5o1GTy+AlzZ8+ZOX0GpfAE
08kTJ02fOm3JosUbN24UhYX1G1YsWz5vzlz61Ihhw7v37ZtS0KiSBAtRlN6W
iY6rHsrtP33G6WvXHv/6+737D69cuvrFqdMfHzw0Zu78VyiVkF6fDpaqhfmF
xKV0iKXlk51lUo5UOc1XFqV2lhaTWbkYXjJY6vbFe1b38cFSpS11NJ4i6z4h
Sx05fmEgpdBU1EuVi1OkLpNyaFrrCVmqrimEpayNEgOotWs9VdNWBcXh/U5F
sxQ5PljKcamDpXSeeb06x6UukFZDvRQs5RBI/PnI0JQLfW6WltJbUMANpLEc
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
4OAJS5ZPWLJ00LTpbYaPyOvdK65Vqxcou09Kgki8tLaMR/tJyDxTUrFPj+dL
6YMwlxdBV3xivWZvDJo95+i5c9fvP7h199538t/t24KnhFXC6Q36d+064ZTy
d0LWpQsXKTpF+RS1U0qrKS499MlBzdIfwdL79+5cuXwRLN2+advShYsmjx0/
sGeftk2bEUjp5IdCXdt3XDBnLoWms2bNmjFtOtL8CePGU2hKsSjhdNCbAwmk
fXv36dWta+u2bQpatR49Y8aXly4//vnnP/4SVVkC6eWLIrU/eOCT9/a8vXHj
5hmLFqc0alxaLsfjVc/sUYLekzTXizf3jfDoFNuMio3TsXFYS8L6UDhDQZWA
z4Ypc2TrhGmLZ+wtwTXa8r6ePOIxxKGK1QlCek//O8owtPFYftwMLLUGPw4a
UnHoO6fnlSzVHqParFmwVxzrXRmawmMUdqJCNFpHHBaHhkfXY5UoH1O5D30o
cKpEo4YHqFJ94mLoRk3hkuF5x5+Ca54pDhW7TbBMD7P6pmbfPHKxCThJbyVO
rfbTM6++7mAp/XVDcI0cXwm6vViK5FQk/nabNs/us1Uv1VcCXBxJOvpZYhWJ
JBULlDyLBnQfbpAVVtEtpcei0K8xd9F71n7he+LWH5kVYA50WfJZyj4Oav3s
uoXHv8ZwwyNJs1TMf4KlhTfoRQVVyZ1C2Qg4hcdHsofkEyzltcxWH98YTypB
9DNYKjvvejI/ObWqL9Ci74BZy5YtW79uw7ZtW97es3r71mlLlvQbP/6NPn1T
mr/xij9YOTG5fFIKiCoMknhw1D6rT58i8P5vur/V4CG7Pzl8lRD64PG9+w/v
3btHifm9O3fp3LktiEr/bt76FgHq1asCp5cB02++OStg+jUy/cMHD1FyTVwl
7v7nP/8hlv7883/oJkQ5Yum+vR9t27R5yYKFk8aM69ejR+vGTZilHVq1mT19
hkzzZ3MHitJ8Su0pwR82ZOiQQYPf7D+AWNq/b7/p06fv3X/g9r37P/z8y+9/
/kEgpW+YnuILEZF+/N6e3Vs3blqyYmXvMeOeS0hCpVQ5jwhT5thnKCTTenzR
xNd9fNOvuZjsVbHc3tN/BB6jdHipPveSzPWkxE9zZ77nHD7l9WrJicnShHjz
YL0JcnxRPjUqAKoPJR8Lj1G5Jwpr93jbs3KoNzxGta99FGz16A7Fa9WRVqSR
HJcCnm5I8q1MDanjICKFnzJqBeyzLByWjbuBpcriOSIyTJNZPa/0YlZXFuYx
6taQKm2p0qJKaX9NWQQQnzK3XiAuRXKK46i5QeiNuJSp63C6dO6LkyxlVbvJ
tNK8aI6ivpAWAWV4zA+Ae8A4GmQ8veldXkjzmyw1vZYc98SsPliqtKX6++ef
CK8g+FlwGfSwnixF0YCfF79DDy2nZKmR43uwFF4hIg4X3fksZO6IMD3jUpOl
JbXXJ69sKoltJBZLpYIec1PJqRVT0rLbtJ08a86iJYvXrlm1devmnbt3bd6+
beX69XOWLBs5bXqPkSMb9ewZ17jJK4GMqsmpFKxisKeCcAPJKJ3mk1tNxCq5
CsmpUU2aTl615tTlK0TRBw8fP8S5/4AO4fT+3XtEwrvf3eEYlSCJfJ9CTcIp
/RM4lYVTQujRw0coLCSu0mU//fTTf//7J7P0xGeff/ThXqLc4vkLJo4e3bd7
d2YpndbN3pg2+S1K8+fOnjNrxkyk+cTSsaPHUJo/YthwYiml+fR425atFy9e
fPjw4U+i0fTHr7/+SiClMFmC9MA7u3ZuXi/3n8yZ72vRqqyMJJmliqgxMZ4s
dRD1b1kKU3tmKXyairtGTLFPrzCWohYKloo0XwLTzVJsiBKLTepFE3ufjoxA
dZTrpdhQqvya9f5SAqmhErUOs7QILyfW40Ow76kPdezMdxjbqZ35tWqFyU1T
6D09I+NMcewjpuAqWBou6Y1NKeIt3O3BcC+PUdmikqtLsJcPu02M2LXYa+Ko
a8QilFrqL10XLQEBJKeecSmuLIylJlg4gqUrcTdmmtVLMnpPnOM/IUsLuxL0
A/o4LjUjZ94RyvVSBJz4WcTX2n8QMxpHRRddOb6ytP2Xw3GpurIQLSdYKo8x
T6UsQtQRU08hsDRbff+pajyplB2nJktND3qWcyrhklR9wsbOmkFNTi+XmBzX
oGDI+IkzZs5eunjJ2rVrt23bRjjdun3b6jXr5i9eMmXWrBETJ/QdNrxDnz6h
li2jQ9mvpPueT02r6vNV9PnLpvoA0irp6bnduu/45JObDx/df/z9w0ffP+Z/
Dx/RIV49eGARlQLU727dvnVTRaci2b90mbBGOKVMH1NSlGIfP3qMHtBlv/z0
83//+18iHqGYYlhi6d4PPtyyYeOiefPHjxzdr2uPVo0aM0ubFxRMGjd24YJ5
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
sqlkbsnja6yLU9PEZid/gKAarvyX00sn82YnX/mklFcTU1KyQk2aNOvSoeOA
fv0JOJQXE4uIS5s3bwZO169fv3Tp0sWLFx85coQASLEliqIETwrwPv5w74nj
n1JuTlQkbP72y6+U6VMUevvbW4TET48dJx7euXNH9KQkSxGagqV3v7tDlyHN
d7D0zJdfQVIKeT4W8R34eD9YSpn+O3veJh7u2LadWLppw8b1a9fR97xy+Ypl
S5bS908BNsWlmNgnlrL6adiQoYPeHPhm/wEE1cXzF1BYi4iUQDpu1MgRgwYN
7NOna8dOObn1kzOzqqemVY1PrJCYVDYuvlx8QoW4hKpJKS/7g3XyGjTp3XfE
7DmLNmxcsWXLik2bh02dWjM7t2xCAqSmpoaUJaLwGGWzZj5KTMrvEgktZZM4
8BXFZ5Whs+Q5PO/Mo2ip7mOxVGlONUvRV5LazzrcxC9eS4zZK9ckPauPuJS9
nEwPJuVnJzHoyVKul6JtZPd0VizFNbiJuEbXQs0jsCnrpY4c/58SgE9rASn2
lrAiwGnAZ/Se0KM3RaZKK6o1pCZLHYfjUmYpNq7jrxs2vg5Nt41+mqUUyHmy
VGMqnQJXsJRn4N3eGZKlanBdstT7eRHoykKESKLpzo4OEbf7lYzLGMfCpujC
WZqF8qYnSznG5j6++g49fxZpgcTO8g4tp8FS8R3CwZOeFzuZ1XgSvU1KYw/6
Eimp9HRguJi1kF6fvCOUxaEyX0hH8i4ETV6+S5ZzqFZ9St6mmYtGyyYm/09s
QkRqamZWdoumzTp37ESQGT96DIVzixcuokiPcLpr167t23du2bLt6NGjt27d
IgyCpcRGgicB7e2duw7tP0AxJAWid25/R8D8Q/4jrlKwevr06YMHD1KGfuPa
dXyV6Oo/eoTQlBv61qyp7OZTmg+WitWmn35GLKU7gKUff7SP0nxi6Xt73t6z
Y6ebpRSX0jcP9RP9IJ4spVeNPr16D+jTd8KYsfTaMXXS5HGjRg8fOHhw7369
u3Zv1bxZTig7EMyM8/lfSUisUi+mckzci2lpcQ0KGnXtNmjSpEXr1m3atWfr
7t0bt25bvXHjvBUrG3frXkGKQBl68LUXfvcSpyViRXxriUCNQ1fS/wj+KuzE
s0CKEiiG8FlrL78Qjsysx5dae/EuvkqIQ6NjzbuZa/SgAA2Prif09dIqtBSF
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
2OxEB5udHCzFurxy8QmvxMbXjROOoYGUlIZ5ue1atSTOUAg3a8bM40ePffvt
t5KlQKnFUiLnpHHjp4yfuHzh4q3rN+597/1jR46KTP/6dbr0l19++fPPPynf
p68l6n52/FO0jYiEdBldc/f+PUyiYsr02rVrppiUWfrZZ58dP/5/iEuLZunQ
oUMHDXKytG3rNq1btXijedNmTZoWNGioWOrPDKT6iaVJcfGE0359+gqW7tiJ
1F6CdMH0GbM69h9QOTbekbybcnu1Uq/wUXzO8dVYvr2PL+LS6KiSMfXUTpLI
SLm+yb3qWXxcszTK2eU39zzLQS+V+9sGomR4KX2aKOMWhix16tBjzzl8zJcK
3taOsAal5BZomz60di1iKUqUvM/E5K3yYo5QtVBm6VM6XGT/EfZidh/H/tKn
nI543v4jbi8nc8+zu/dkzuqjXqo3WzpZqqSIgECq1dYHS5Hjq5YxyCPdf5Q+
HX/1Ki4Vmh1zowhYapKNPoWJIzdLw/VWJdWdF2FkCBm0yuXdUTHWzqOyqtYr
qXt6Xoz4UOn6C2GpLtUiLg0UxlI6wuhT5/jqO+dM3HKWT5c/cpB+ZOU6h+hX
stS+igS/7Sy6WLh8wgDUqxZqY2laCh27h52KS7FxVPTxlc+dOiUSk+mUTEqh
t2XiE/8VG187LoFC08R69QJpqY3y6xNeiDbEKIoViXVEvLt3KZB8CJaiXnrh
7Dli6aghw2ZPnb5m2YqdW7cd+Gjfyc9PXPzmAn0JZfoYN6XrKeaEhShhkHBK
5/Dhw5cuXaIIFizFWJSbpZTjPzlLKS79+xxfs9TM8SkuBUubNm7SqGEBsTQn
lM0sTY5PiJf2f3QreiIC6fLlyxfOXzB95owREyekFRSUjo429aGOsBM5fhEs
RdfJEZfaTlRdYml4nFhSiv67GuO3ATMStVBiKRdIxYmIpqPn8CMdLOUcXz6Q
g0+yJoA6p93X3qlpMmf1gVMHS8VHatcqUbcObJTNLr/JW8SlvEWKx0e5R1+0
l9NT9muEnKoQlpq+eN579bX/CLO0MN2Tmi+FUls7VOLPFslpSe2Kzn6+iBIJ
oeaVptMl73YLk2M/vOxd5/hyF5xr8ofuSbdipaR3z0tl0EHoWBH1sQ7INsFF
/En3ebLUgVPo4o0bBlR32yMuVUyzfOIK7eP7uOysukWGGai5YwTFZOiP2IPe
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
4RS71o0266UmSxFMYtjJvk/PikuxAwpTT+xDaoJUvlvLjDm5YaTmlMxdT1JH
z5P87n167HlnxqW27F6z1K0Ptbhq7NPDHYpVr2kDKe+AknGpYweUEaBaOb7b
F49193B2Rlzqni/lCBb10tJpPjHyLUMaHvbG7Lc4cnocE+lqjFx+FnEpFI6Y
BjfnzIWLUJoPd+D50nDdsgnXu6ewaxo3AUutzSGYfmdbefE4TQvtA3A1UlsB
UbpMttYxqbhU7b5TAlKBTSKqfhePgVm1tVVSSHE+yXpguiGbW5QdOA3j+Fyy
FEvtHNEmJjxLJqVxUwm/bZ4atek9teqTB0dxDUHy2USOM4uKSxGOlowXJyw+
AVOLZROSKqekvp5bP7N7jw5jx45csnThzp07Dx86cvbsuZs3v75y+cz5b858
fY6QCIXRsSNHCWIUFlJwCJxSuHj2rMApJfuEU0rJCadC8ikiVCGJOv35Ccrl
x4wY3qFN64Y5OUTUBtnZlPj36dZj0rjx61ev2b/3I4KkgPD16+Kr7DVSHigF
SOluJyVI6TshkELrtN9VKeWuU2EJPgWlXCzlydLCiqVQjxZIJT5YGkz3EUsJ
2sRwIjkFxoR0+n4I7/S9EepPnTp1moLoM+c+OHJkzob1PSdMSGvV+vnkpErx
cRUT4sonKrSKxhNWPdtZ6qiX0rGWPDvk9laOHy8/bquX8jQ+aqFaQ2r5NWtl
k/gSsxaqY84I11Es5d66uY3EoxaqdU+eu0nV3hIvlpp9pSL26anq6Os1wNt/
yrF8E6QmS9nLySPHl30lIiRiTrNe6tiqhzn8wmb1QVSwtHwgo5w/yNOG0Cpa
A4cOPb5UuzOjbFe6dZdQyktq2TodppoyYI04cogopp4ysitl5tBRQnv5JeIB
1JdyNgk3d357QaWp56fmozYAmB+BTl9eCazxLpey0g25rE+5iIJmeHZMzuMj
0F2ybFb4jcqIHVNM/HoEbabUHwXEaxNeg2QPSAma0nw4Yrl9ajreiiPXniAe
1kqrdFxg24efmg6hPWaimMxhCaJxXDYxuWpy6r9T0+MaN+s4YtS8TZs//Oyz
0xQTPnr0w59//eevP3/49ddHP/10//H39x7cv/XdbewOFb51584TOYmiBFXg
lDJuChfPnJE4lbVTxqn4d00QVYxLXb1GMCTavLdn98a1a1YuXbZx7TrKi4mH
9HGKZimUpYPtJejamyD96quvCOYEUpRJTbM8LNnj9r25z8QRlDoSfASlE8dP
IJaqyVKZ4GMaihL8LnpKH0Fp44JGlOBr9WgALCWA45eA34CqdVwRLwpq2vbe
3TsP7t99/PjGvQefnj274b33ek8YF9Mg/4XU1ErE0oSEcM1SYSwiWWqOj+Jg
2B7zUcXq2LaX2DSk0ljEzVLemY+4FIugjZkoWNtbfXwxoq9roURXAVgVeVr7
9BwsxRRTMVf+zl7MZl/JjEvNHr2ZwpuZvq2vZN8BZVxTu0TtutCQmvVS4qGD
pcCgmePzThL06LHbhONSbjyBpf945bWiWcr3oaMyyrR0c+M6b8wwI0Pep4Gp
fnT88ceO3UpO3aUkBjjJsa74YJoKd+UR2kaARSk0pe4SHCungWY8DmB1Ce4J
JT5foy7T+0aAbgU93j2i3+W5IO5riw/CHxnHrvEXtJezsupKfLnpqoyD3QLy
O1SXqTUpwkCZdfT8QgOGC/2m+GyGemkLZEDXaQ4v4efla/ioj+iXKjyp6CL5
glV8gRr1G+T26DVs7vxtnxz8nPBIf/GPvv9/rL11eJVXuv5/zsxU8CABajNT
wZMQdzechITgkOAS3N3d3V0KtHgLtLSUtrRQpy7TkcrM1KdTpz3zx+9e617v
s9f7vnunnPP95XquXJudlXdLm8++H//39z98/+MPP/30088///w/ztcvv/zy
448/fv/99998881XX32lNtn9458ff/gRnHpFs+efZ+AUJHntNYVT5ey/9TYL
pUhUUIUzSWDAy4d6aZMe9vQ+vinGfvChUFSpWZ1pEpC+pdL2ppr02rVAmFTq
oABSz+JRW5R6sk4s0fc7+AvmzbcdfBkBPWzIUDj4DJZybGmpU6UPlrbJy4dk
xXMwzbO6c5abrPF24U3DW6ens17/n//5Ge8k3tjrP//Pt9evf/jF51ffeXvj
kcPFI4ZHFxf9Pje3UWp6g9Q0lTZKTBA5ao/UY/uSaeGXGKkMIGVeSbPUjoWa
Uihxz2MDjZ/UpSopH2VWf94SCR7G+FlqcGpmN8WoM07tKDWnM5g0JEvZR+9h
KfNTwlLVIuqOhQbtta+CpdUiArNJbV1aoyVvqHhpFXl8m6VV+/i/qkul7wlm
xle646VWzY/XTIuN4+P7/FMdX6U5PTvhkq8JMi9OVxNZDi8nHttxS7t4HtgH
PQAKpmyqyOww7WVccoYC3MUG+mPCxA3kE8TuvjQnnYio1oegmTnGk05ss0Cu
Rn3IQKgT0wjEP3mDH0B8XOfzpcBWm6JLAwOgHMHJY2qZSLa5LCMqfFwzb0pf
EAdal/VYc/joM6+/8eq7f3oXmPvo44+hO//5Kec7ff3Vv7799zfff/sdOACu
ggAg6n/+8x/F1es/X//xpx9++IGF9OyCh0QETl9++WWADriDeoSGhJKEfFXJ
/XdVVxTU7J/111/1F7kqtylftRJ9n+32+EX8OoCs/Hp8adeeM0xskNK7NxP2
Llx45JFH7GEmHlEaNOvkaR0FSOngjx07duTIwKi9in7l/dTY0h6shirWDj47
nuD44x344YfvfvrpB6ASb9d/flFvlMLm9et4A/F2/fDd97Dvvvn23/8yy1X/
+flnf//0s7/+/e9vvP+XYxcuTFm2rMPAgZEdOoWzYZ/bRZ0+UP3P5HqpqnWU
d9ZJSVZo1ftD1U8TTe8nl4d6doOy+4nilvfzALNLrmbPWNa1xhOk6qcJepWe
dcZU5sdx1nQCu0dlN6htpmeftfrxcTViKX2dn/rq8KU/VDr3hZNsGg2ax5cz
vCCX4rG4lJOgZPaIazaps2PU6g9t5a8dDZqjt/tDbZbCqRezWcoMhYelkuao
mqXBuhoD9e2h+x/zWYoPk51uge4enVGS1lFPTZSwFP6yv77drjgy++I59tPX
VeRQOod9QFCJRF/AO7bq6qVJU1hq1TlYUVAnwilvoz8KKiVMrImy9y75R4ly
Gp7048vVOBYP5o+X8hh+iw5+8w5F87dsv/T8Cy9eexXoY+8SOMbReSxk+vzT
zziDFBLru+++Aw+AViACoCBXcT/gxsAp1Cm4SpzCDcc1xd8HEuHzvqe/3ne+
2FZvAMsWe34BvLqtCb+IZ6UyTa8rOQrRq5JNeoZJUJCq7vtHHjl37pyk7+36
fFlKElSUBs/gjxlTWRlw8FVlqR5bymooVpYW5hfkZue0b9sOTwDI1OL9e3wG
4ZMIzMRHEpdVQayqsoSP/w7tCu2tgsDv/Un2qOIFvvT665evXdt/7nzPKVMa
ZWT6WaqBqVhaPyNdzZvSLAU8HYSqG+CqsJTt9up8SroYdzqTtPYuZnsFc914
s5dZkCv9+LYp7pGiGrnO76qmezHpIeVm59oJ8WoLibNFVPpDzeQTfcxuHWVz
KPcsy9JS2R9qm2kUjTaN/LLdngZXHQqTvVGm61N3iUoPKe5nZyiN2XnuxWP5
aK0Isw5PzN6LR1ryTI2WEfYZYNapicrmrGBgyp4S7K94tGt1TBYmN5+/KOSp
my0MzK0Tsv8xCP3qOif9utRFSA18Vm8S+PgRO6QCzVlOT6U37e5Tucy8i4wM
ZJFCfIKYwfVOht3//pClnr54+wCfpJoX6tSXyhxRGO6vmelOKunHlfeQkBSW
qnBopmm697CUZxqkZ0Z1Kp63ecvDjz9x+Zkr+ILYA6wg//xcZe/SV198+a8v
vzJ69fsflDr97nsg7tnLzwCngJvETq+9/Oqrr7xmBOrrb4CHb+svylQqVWAV
Ri/e8FMvFSVF1QAoFR41clSVP3Gq3gsvsO9eQMrcPTtG7UkmtncvopTpe/Y6
saxUIqV2ib6dwaeDP7C8otyqhmKwtJ0ep5+XlZ2ZnoHrsyVBmPnh3z4ANtXn
BV7c26YmVknrl15+Bbr6ytXnnrl85emn8BIef+LiqQuPrty9u2TkqBYdOqq2
TSdeaqeWICzrSu5J15cG1jPJuDztmBv26jkn5KrHONWEMVWde4pxgqUxtaKd
yGpcgukhdfaQ1mwdR5O6fapT6ZFnD6kzc8/U7avC0dh4YJb9oX7typwXdzGz
bsrstbdMrkmQ1pTeeWcESi1rEIqA2vTyx8XZxsX3ZhmKahFtLSBlf6gsYiaE
VUVTZHSoHlIeUB33eA6+lnwQtXak+hE7tT0s9c8jslkqkVWw1NPRIyAVlnqA
JjVRnprVejqyGtTHF0KaoQE6vCkyMsw3OYQn5aGNM57nF6VmJ8iNsLSOM9+e
LA1MZ/KdDDpjREjL6jKyVGILVehSabTnMVY62SwNqNPsHDkmLK2fnh2elhnR
vuOYeQuOnHno/GOPX7x4EX/XAKNk50Nx9YvPVH89dNc3X/8b+L381NNMWxOn
8HZffvEV4NQI1Fdfw3WgUZXX/+ZbEkpVZH37XSaVeM9b/HpDHcP511WeydQ+
qUwT5Khe53T1aqBXFIpUQCodox7vnjWljJRu3bwFrj0UKbx7W5TCwWfWafrU
aRCldom+7B6Fg29n8NmGr8bpZ2ZlpKUDwniSNjPZkCVlBs/oKQGM6D569tx5
LZ6PHz9+4PCRlZu39Bo5snluzh1OvFSln9wrm9kGRUjW0LtIAvtDJalksbR+
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
apQItSnK8c7stRc5KuVPAOnB/QcIUpblz5g2vV+v3mDpsEEDx1SOmDB+7LSp
k+njr1qxcsO69du2bMXJgwcPHj169MEHH8R3XAGO/6QJE/2itKhT56IOHTu0
aduuoBCiNCcjM8PZ7gQHv3WriIjmLVo1a56VktKxsLBNTh5UK3iL82VdSvA0
hkAbjxkzcdrMdr17N4hLlB12Zl9zchJFqepp0vfo5XfJLNc3K+0SEuzeT5Xr
j03QP1J18s5UvTjGS+18vd94HYmXknJO8by1o8TJPXncfBPztOpLTa+oVTsq
cQDp2XflpzyzSVub/aGqTpWgbtHKbpNncNXVj98q0r+PXsGtdesbrInyzHn2
c9Jmqd1JWt3q2bd7SD01UcJStaMkw5sNkTy+is75qnQkXiqrhYIXmWtj/b9d
RyT5GpdX7hRb0nP3XNOevSkedGDIqjWf045MeuKl/hisJ14qs1jlp/Y17WSW
ZND8F5SPJHsMrPpYycrl1exr4pNClU7pY+bTJ8uclPP8mCP6pGFfnpuYOu/o
Uv1ZpnQpC6LMdVy6NK9Bfn79nJx62Wrwe8P0jN+nZ8bkFbTvXNStpLRnaWk5
9FXvPsMGDJg0ZtzOrdsAMXjWABqwJkQlTqlROcbThFK1UiVaaQQsyUnjAfKT
WS3RoqSoR44yQAqK2q49m+53bNk6YsjQPj16Kud64IBRw4dNHDtm+uRJs2fO
WrRg4Yply9evXbd54yac3LNnz4EDB0DU/ftViBWO/5xZs2WEPiRld92A37lj
p07t2rfT65uzM7MgStOTU2xR2rJps6b33IsbuAeGnxbm5hR1aN+trLS8X5/K
ocPGjx8/ddbcjv36NU6yNyybHiWYWtOcnubmXuAMRakEQrmLuV5yWlhikjbV
RirVUNYZ3SKa5DXZQyodoPbWZnr3+EUuGw1scLZOWr9idonKdlFp9iRF2T3q
2R+qkk1WHyj7nmpZraDsbKoTZfqbTLtojKvrX9qdArvzoqMDFI2JhTvv+PXx
qmqCu0qjW8NqRkVWjzDxTNtYfi89TQqYujlUrLrOTMlOZ9Mr2jK48Zr8K2ME
T1jKRHDVFY+e3FMVLHUN1QxWI+RpTmeMMVBq5a4REvTZOaCg/enhofcfmXyZ
038UWCli5dFccUt3Hk0inB6TZygtn/bbKCVMPGmz1JSTOQck887/Lgw1yCeF
PDeXZeVQG+tL6a2jOkZqh0xrpqtVpGAprG6WSuuHpWfUT0lvnJRyX3JKRk4u
JFlpJ7VYpEdR8dD+/desWHn4wEGoQaCMOD15/AQQR5efGpVEhdmzkQlJotVj
wk8PQiXH5JejAlLoSbjnBCnHk25cuw5yGiQs791nyID+lUOHjB89aurECVJc
Cjcf0hQqdPv27Tt37ty1axe+Q82uWbV6VOXICmvfaJluGu2kRWnb/II8XQqV
qUuhmHWKjoiEKG3RpGmTu+8xOI2Lz0zPaF9YUFrUuVfP7oMG9h9TOXLy5Mkz
5y0ES+tDT7qH6dUEapISSVRyjBNF3GHVeBJSDlCvalEaR43KmSTUnOYK+qcm
LhprhkTJnCjuK+GsEscYgDUDScDSukkKyPge1IhT2UMaIKG+YZpDdX6KpVOh
+ug524SMtVlq94rifsZU7TM2S1UHvWYp1zGbTvxobTZvoyLB0lqto2pEKtbV
Vm2kAWMHvfSQqmWjwXaM0gS5QRtI5eIULSZlQ5bm5AlzPAE3/BXXzMyyU9VB
q3SEusKfOr7+R5uWOMkOTcmSe2Br1waQpYEi2GAMF11qlzD9Kksln+5/dL4W
yeOHqk3iSb6NOF8jM8vDUvvlkKXmhTjvtrAR/wT6cBJspF/Pe/wsVf9R0jOF
pRryGTDys1ZqhrC0emo6DjNaqx5OgTT1ztT0VlnZWe3ad+pUVFpUXFZU1Kdb
twmjxgBTB/bshQi8/+AhcAxEBdkYNeVyJZuolKnCVbrqlKx+Iz+JUPyiIFS0
KJtDYVKNDzlKkHJ0CXQmQApCrliyFKIUkrJvz14DyyugUceOrJw0buy0KVMh
OxctnL98mcIp1emWTZvh73O/8+SJkyhK8Ys9nUYnmQoFUZqTlZ2hRWlKQmJc
TGx0VOuolq3g3Te59757776n+X1NIFOBWTj40LF4ArjUsCFDx40ZO23atDkL
lxSVl9eLcUHSnocflhzI46tQanSiMqdB3pN78iy8Yw8pa/XFfzdZIatL9Nbo
aJZO4Qyr9O2ppE68VHU/ca+9mIJncpKYTEThcCe7JkpuSK0+81OmP9SpLLU9
fXtmvmcMVND6Uk89P2dAqXmkURG1Ylp79o/oA62Mq65mlrr24nks2B5S1Rxq
94rKdZxiAHM/zZPHV/FSZz4G/gYZV6T3GpSlIvlcZT+h68w9QLPVlwtrTvWm
p+s8KCG99aUhTtoueci6eidLbrM0uMZ2XouH9n6WKkg6LJWT0oJkX1NYKq/C
Q0hejaOxSD9BsZ+luJ8hWQ9LPXl8HA7PLWiENycjq3FaRsvCNpklpUU9e3Xv
DV+3D9TdoIry+bNnwbXfu3MXwAV8AadAGbAG4kk8k+3w4J7t+AOq5KqgVegq
/xR+8jARSiEqWlSqnphmol/PFU42SDdt2Lhs0eLe3Xt0KykFUSFQhw4cBDd/
wpjRQOWMadPnzpkFnC5bsnTVipVrV68BUdmkP3vmrMEDBzHlhF/vrlNORZ06
c0degW50goOfpiOlEKUxraOjHFF63x/vhi7FbTj4WWnpULBdOnXGRUDmyuEj
Jk2YOGvWrAVLVxRXVJClgUVOFkvVeFK9yynA0hh72EigvtTaLeJiKXUpeGuE
qEVRP0ulVl9HQVX+XXD6qywVf58sldpRu8rU5PHdfU+eSnvWjpKl/tmknjx+
oL7UQah3t4jFUvds0lZiNkuDzSYN1I46MdVWgTiq1UPK3FMVu/MkXlrXUonM
+0iZeiiWKpdc7wqRThwln4JVjxN9Qkg/f+SCQSd4uMRhlre0tZZTvRn0pN3G
bjPN+7mQlSMBWP8zlClM/jpPeX/quq/JC4J+oXz8QEQlN59pd3kJdmk9WQpI
4j9HSB8fwExPd3z8LO28F+gDNkuztRkfH1e+LTf/7ryC6PYdCrp37zlwUP+h
QwcPHTJs2LARw4dWjhg2ZtRowAewArJ2a5yCYwApuGfWxmnnHR46EAru0fEX
359ilWgNZUp/8uskBO6pE/oLVwhKUY9fD/ecm0c4m3T54iXgWNfiLnTzB1X0
Hz540JjKEWwjnTljGnC6cP4COPvLly5buXzFimXL582ZO3zoMDWn1Oq+L3UW
N7crKCzIyc11R0ohSiNatmrZtFmze++7749/aHbvPTGREamJCQBuu7aF+HV8
DA0ZNHjs6DGqumz+vEWr1hT17290qZnnrMHImiiOenb24gWKncwx0/dkQOpm
qemjd2qihJOu7aLawFK1oyQxSfUiGZYG5KjsH2FTZ9UsNcFYnZ9SEtSZIOpn
KXTp/5Gl1hmzpykm2r8Xz2JplMwtsVnKufoq597qhlgqtfpV5OilJiooS29q
1tzPUqnzpI/Pv+Wgukv5xXr6faiuRjsaYNdGBvjjZEOMw2uxtOpeIYlGkqXB
u93d4U1hqR2xtNFnR4mD0t6u8xSWykkPS80z1HHLUDXzIjhDsdSuHbVZ6tWl
mqWmJDUES+uk56jvytRky9szsiLad+xQ0b9i9Ojh48fha8K48RMnjJs8acKU
yROnTpk0feo0YIfuMMAFlgJxQOili09ww9HVZ6+88NzzL7/4Eu4h/fDdhqqI
VRoBC5N7lBd/8qQC6LHjKrV07NiDKr/+gJ+ikmaiHOUwPQ4mNUOely2Hk17S
uQjaktKUUdPRI0fhdeHlzJiunH3wE0TldpKRIyo5PN9e6tTFWTbK8XrZ6Rl2
+h6itKUWpU3vubfpH/8Y2axZQkx0ZmpKQX5uUeeOPbv3wAVHDBs+cbyK0y5a
snjBilXtevcmS2uYOnwXS2F6qL7uwQ8o0jgPS4PqUp70+/g2S7k/VFjKA7Zr
/39gqczMF5bKDTNX35ltwjOerqX/d5Yyoe/4+CFZSv/9f8XSUDPzb4Sl1K6S
x2d0jgE3CqoqfFiSyjMq00Nd3qNGccogOEs9Bo0xyqAParngQtcdjRTVVzvT
dywjy2YpT4ZiGutC1SgSJ2IZ9FWHZZvPBQ9L/a9aPUOHpXxcT57IsJQvWT9u
KF0quSc67zzjsNHlvwOeYCn8d/NBlh74EU7WTc1slJreoqBt+37lIyZNmQDF
Nmv2jFkz4e0CL/Pmzp4/b86CefMBnMULF61euQqwArJAMGjIy5cvq6lQutf+
tddee/PNN9955x3Oc4bzDvrBQEKm+220hjIekIioINSvRSU6SorCr+cuPLjq
HEwKnQlBWNyxE4Rlz649+qrKrj5DBw4YOWz42JGjxo8bg88IfDrMnD4DlMN3
3DnI1+XE4nx494U65ZRjp5y0KGX6XovSu5vfd68WpUn5ejp0aZcSilLoeYhS
QHvZiuWLV69t26uXsDTQH2rpUmdVUwJX3fn78UlaZSF8fOaVOLQkIEejTJeo
7MWz+ui9c0tsljLd72cpc09kKWh5S1SkX5ea/lBnNmmApb4ZUNyzHCRS6mMp
197JLifbiw+w1NlR4sjRCP8MKJulzqYns+/Jqi/9lV1ON8JSxksDzqmmiviw
/tob0YeMrIbKwgjQSF1haSgFK2CREgL7QF3b3dYsDWA8GPNtGWmniqpmKdW4
7d2HOQVF/KwhS+1eTr/GlmcY0KWZXpDeCEttaUqWyjGTl0/NqGPllXDDw1L1
EI4WBUWbt2lf0Ld8xLSZsxYtWbR4qfpavAS+PD3flSuWrVq5HGhas2o1xB4w
BdUHjkGOqsHRb7zx9ttvv/fee3/+85//9re/faz3nHz66aeff/75O2+9DR4e
PnQ/MMh0P41oFbraxvvJTyIUvw6E2nFRyTGJUy9ylOOd8STxbPHM8fwnT5wE
GAKnZcVd4en369VzYLkKnFYOHQZnf+wYJVBxZtKEiRCrg/sP6K/DpD31FhK4
5yXO8Hzl3efl5ziilN33UlPK9L2OlCpRykhpUafOADJEaeXwERSleHPXrFmz
bsuWIRMntczNrx+rc9Y6+W5cePHxrTl7djO+3Y8fiqVcWM/5J5ykR73q2WvP
2lGpw69iBlTVLOWdZOmtrQMglZCp7BjFpQylQ7E0SuXfvducLZbe4vQ0gbrQ
lv79oQQgMCssFdfeqkE1c0f/Vyz1FI5Ws3aUVM1SqdW3q2XM5qCcAjWv2KoL
8iZEsnO4804y/iFP6sZGe0AxBad0SmpBlSVj4QOkckEvV1tAwQYaKqtkqQf4
Hn884OPruCVfix2FCJSDOiylPnRqsZRb7b4a3rQcwlkuyNdb1xdbUC9EJ5VE
D4t8DZPhTs4zbFBYUC8/TxQ7OWkn6EWXwmpnZhpVn54RnpbeJK+gffmAsbPn
LFq1ZuXadWvXrl+3bh1QuWnd+s3rN4BOTHBD8oFXoBbYhdvQhFeeeRb85Ap7
8POTTz4BPLkt7rvv1Iqon3/++fvvv4fjDxkJDMKY8RcjYAlMUZ40pubJT/4W
b5OipnZUU5RalEPyRY5SkXJaPqQgpCY8dPjp3UpKe3QvA04H9CsHNocPHgKB
qog6shI++KABA5lvsoeUcrZe28I20jFK7z5B10HZNaVN/nB3y/uaxkZEpSUk
5WVlA7/dSrqU9+41bNDg8aPHTJ2smq3wrDZs2LBtx/aN27dPW7i4Y0X/36dm
hKkizMCCe7Yj0YWXqaTGedf+O0tDg8ZLma8nS9VWaM1Sx8GXxiUXS5kzslga
LWbPNhFfPihLbV1qKBoVpYwDTJxZ0HYP6a3O3BJnvEk0WarKnKKV/+7nra1L
cQb+u9335NnXLLzFGdb82/X8shdPaCwUdWvXyBq6p0A0bVBdSt6CmX6WcusT
S0zNn63TXaglUCG31Pk1pGKLbn2y2hWd5vqgJ3NM7kmm3ok+FFyYinTHx5f6
9kCFuQaplLibYgMrj+/Rz7Wd2gAJ1bKEQNW0W8dslpJpMvbEfoY8ycZ8stSp
XgDTMtwfH1z8lOO8jfmmht/Bo5R6miIrfUGy1K4CdfnvzPjn55GlNTOV814j
LaNmSrrSoqnqRo3kNOrSerm5MP3EsmqlpTXKysnqP3D04qVLNm3esHXH1q3b
iUpgCnpPpel37gK1YCAn1SBkIbD28JmH3nz9DfAT4vPLL7/8+uuvv/322x9+
cO0t/c9//vPLL79cv34dnj4YyCvg12FAK42A9Zj9U0AVSpXlVSwM4MQSPCUm
mEhRRkdBUchmkaPQ1RyVP3/uvOmTp8C7h7wETktLinuW6dhp774DyyuGDBg4
fPAg2ICK/tLiRJAyd9+xfQc1wyS/gCknevfJ8Qnw7mN1HVRE0+bw7qFIm919
b+sWrZJj43PSMiBiIWh7dSsbVFE+aviIyVqU4vngGeIjaS++9u/buXffmm3b
x8xbkFxSehvcdtaux8axHYm61PTXO4FQ+u/CUqmJYspJJY/YmqR7SOukJDtL
SD1jSYKwVDL4/t7PX62JIk7VdWKiA7o0KirAwwgzAyosTs3cI0sDnHQ2h0pN
lMm/29690/dElkosVFgqHVKAp7pfn8F39U8fJwE9as5fZSnuB0vdU6RuqIfU
LM5r2pxGlqqWxtwC6S5s1KYdiWE65fO91rCQLYrmpP4ttVU52El1BW4rli5L
6fcUC/TR605J6bv0tMZry5eT6ph+wnIR+5rs0GSnJ8sp1WEc48PlBvpSeUF5
huyyxwFYg5x83lC39Un2/stJ6a+X83JNPq7p5Xf66+1Ge/NA6mXmawbqhln2
1+fkKHMa7bWzoDqV6uYA+7nqzqzc+lm5DXAgS819gtXXP8IZXg0nw3NyI0u7
DVm4eP6WrRv379914MD+/fsPqrYfr4ZUBZyHD7O/8vjx45cvX/7oo49EfP70
83W1cFN9/aK2FV//+eefrl//8acfv/+By+M++uDDUydOgn7QkzRwVeDsMf5o
ny5bxeOCn+cePvvYoxdYw//o+UeA8eMPHsPTA+23AKFr1lKL0qnnOlFZ3kSQ
cu0IHPl+vXqDpbCyLiU9upb17t6DvaVDBvQf3L+CIGWYtEfX0q7FRazMb68L
SqX1nt59QkysePfN72uiROnd90CdxkfHpCcnFeRkd27fARq4X9/eQ4cMYvoe
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
Ebn76bFHL0CUgrTgLS6+duWqxfMXzNYePUOjpKgtR7mXmXIUlJOdI1CkzNpL
jJQghSIFSHOyMwWkSXHxCbqa1C6CAkhbNGkKuqYkJMK7b1/YRrx7PBweHU9p
wbz5ug5qA1NOENsPnzm7Yd1G3I+vBQsWzF+4YC4+R+bPHzt9Rs+hw5I6dPxD
SmrjpJSwpESpL/WzVCWh9GIRv48vLBVdymiqn6XUpWSpPd8pqI8v/UoSSvXy
Vs8UNa1SwXrtTb2Tm6W3upc1S1i1Cl0qtaPOmUh68QFdatU7OSFQF0hhJKed
o7enPwWtww/KUu57MhFa90/ln1KrLyytnpqOv1OW09DPxT+9HqW1f80JCWaJ
f1rHlz3x5PEZY5QDNrVwkqFa2Q9SBUirYKkL0RbGTdTC9yRJSD409aF9wK6Z
d+Cc76SoVCC0pkNFN0sVnBvmFYrE9TQo1XaIStFehS41zrvOPakQhBacwlLH
bVc3aian4TwLtPiIJoiqf2SzFG7+bXm57YaNOHD2/HOvvv7Sy9cgPuG8P/uM
2iECsl189MKFc+cJz1PHjh8/+gDgCfF5cO8+6M/dW7dv37h5y7oNG6G2lq9c
uXjpkgULF+uxIVBosCWLFqsm1cVLbIN+AwCBRByGYIM03bt7j1ZxJ889fJaz
p7h19KHTZ1hfunP7jk3r1q9cugwEnqE9epuijI6GkqMAaZ8e3Xt1K2NBfmnn
kuIORXDt2+khzywl1SBNTktKTNRl+Wo8aUQk46L4UX52Tn5uHoQofis3Owe/
pXpU9ZBSQBsMx/Ohd79uzVp48axMwJM/efwEPjgmTZo0cfKk8VOnDp0woWzw
4MzSrvdlZjWIjQ/TRUF2fanp/YyBqx6Il7LqySxijomRstLAejtnBpT4726Q
BvJK7lr9qljqmU3qPeNjqfH0fSx17bW3LVIVjvpZSlFarWVr8fE9c0uCtZGq
+2u1jrnBGVBBez8NBt31pR7ZKdcRIPuvcEvT5h6WOlRRLJVueqogD4Ik960j
h5le/niI6sQYJT9us9SmLhsqQ7n5Jnzq3Bkqo2SrYtasMrzpz3nZr4W6FEyr
KVlyvhDd827HQCS8WTVLFZwdpvnlq3kCmqWi7W05aoPUZqnx3IOxFKaO6WJd
+V2y1KNLwdK72hT2mjlr09EHTl+8ePbipXOPP3720QsPnT935qGzJ0+eBsrU
HPuDhw7t2w/xuVvvAdm6cRPcbajE1UuXL1+4eMm8eQtmzZozbcaMSVOmTpw0
a9p05oY4HYXG4iV8h8E3B/2ma2kq/FH77A7dj4fjUCl8nTihloQe3H9AFepv
2rxmxUqK0ikTJsKhBkUlx+SJjkKOSqZJLRzp0bNnWdfupSXsbCpq37lzu05U
pNzR7CjSxOT4uIS4+KSERKhWIBpPFV45Xi87wrjKBKBWRVAlpUA0HgsPrT4X
LO9ePhfwWbBl6/bho0aXDxvataIiu7g4Iif3joTEuq1V/Q/z71KKr4rwnR2j
HpayO94svIuxm0Oj7Vr9G2Epc0/2/iZ/vFR256m4qG/OM+OlXC/i16XGPdcs
lXipR4uawxERZCl9fG8stEWUzVKJl3qDpS0CvZ9kqeZbyNmk9PGDzi0xDrt7
tknQXU7i43vipQTpzU2ase9JsVT//TpUUaWMRm06KsiDAsNSvffZ1qW2Z1rH
UV9h2j91msRdJw0TnGtSpGkfX+99MzgtFAtvo4z3a/EcmDgX1NhtarPU8zzr
6Dy+7eN79CF1KY6pnk1nu4fWpYHPGr/a1An6PL6NNdU/02s7EU71tqRkBbJF
ekoe38PaVi6JeDQ30tLwHobnqWYoeb21HH7ahh+xYUpFaF0+fmrA0tJwLDwn
9+527Vp06JRQWtZx8PChM+fMXb9+7e49m/bs3bZ7HyiyffvObdp537h69drl
y1ctWbZ0/sJFc+bMmzFj1pRp0yZMmjx2/PiRo8cNq6wcPHTksOEzp04DW5ge
UlOn5sylMf+uejynTgOCJo4dh5PsD1q/dh3U6Z7dOw/s3wsVyn58UBRc2rFt
+6YNG4GpZYsWzps1E6zGL4oWJUVDyVFFUV37BPR11SCVgvw2eflMNgV2NMcn
4Dt+Bdh89tlnn3/+eXy/ePGiZwUAXHgiGg+ExwXS8dGAT42Vy1dsXr9hz46d
eP74RDh79uy5849OmDUbCG2Zm3tHUnL9aAjRWClTZ3+oWnuXnFQnJdk9K499
T/G2Lq0WZ3x8w0+Ziq93OisfPyEx8Ou+aaJ+lnqc94Dm1PuayUm7W192Oqv7
Y2NqxsXyTHVrWr5nZj6Qq37FFDiZWiNzJjJS8VPvGAUtNUuleClC9C2Ra+lS
1ikZI0hvbmHy+G6WGtdbdt4JJ5l/98zDNypUnzExWPcsaF6HefxaEVGGq/hd
p3v0VusGWSrEEJaajJKO9fndZ8l9q2VzuiYqiPTSshNXqGuGauZxA1EV1VOy
+i0US4lTZ4em0od2NNLD/DrpZn2VnXsKov2sLJXESwOcd7LkDCbrV52nG96N
JHbNtdNSU3FMl2M5EU6tYHlB4lGz1HmGKgDreg+t+KedLWqQmyssZQN+Tbep
X3GzFBK0RhItuWZyCkzdgC7FsazsBtk5YemqSio8Ob1RStpdaWkRhW1yunUv
Gzp8+JSpAMK02fNmAof4mjFTic/xEyeOHj12xIiRQ4YNGzBocHn//r37lnfr
2bd7T7J05vQZtFkzZsKAVhoACwNLAcDRIyonjRuPM9zEBFpu2rh+29bNgKc9
5HkDXPvlKyARAdLpkydNGDN2vKaolDyBonZ0VJpD1dqmbt276QhpaVFxFw1S
+OmcWyITnlWXaFIyQIrvQPRbb7ypmrm++eYf//jHe++99/LLL19+6mkuRaXB
c8fzB0gZJmVl/vKly/BxsHPrtkPauz9z5syFxx/bdehwRlGXxvEJdXRtp38X
M1laKykROGVqiWJP+uhvjYrxsFR2iwhLeR2yVHSpvyLUUxMl/rtLKzIWqlnq
ry/lYZPHj41hDossvdVdy+TRpdUCVaOsz9RnIiKEpRILtcbgB3rthaXSZ+SO
hUZUwVJPD6nURHnlqEhQ35kAM62aqFpqfIpmLH7d0aJiwtLwnPxwpw1TN7wX
QAWF6wbwcD3Djb2K4dKnqX9kdzWG65/6u84b6vZwslFO+o+xU5J1RIF4qa+7
37Nk2bNx3nPBhnmFpvsyr5A9m4EOTd/j8qHtZwhPmS8q3L2qvhFei04/qa5P
HsNPs/MamBuqJEk32OZJl726vmqcdxps2Uqfo1vsc3N5NVUcpa9WLzOHB2C4
ra7MflJ92HTp5uTgE6qentPCZnwYHhr3h+tnpZaZZmfD6mbQMrWp2zgDdJPM
+iJZ4ZnZDdIzG0Cspqc10tP57kzLaF7YNrG4S0H3nsW9epdXDBgxZOiI/oMG
9u1b0atXv7JuvbqU9Cgq7tapc2mnTv179548fsK0SZOnTp4CA2dgIA8N+o1G
lg4bNFitlhs/YRZ03Zy5SxcuWrVs6bpVK1lDtWHN6vWrV8GvX7Fk6eL58+bM
mI7LAqTMLtla1KZoRZ++/Zw0U7euZTKPtLhjh87t26mUvVak+dk5AtK0pOQE
PZgUv/jKCy9+/dW/fvju+//5+Zeffvjxyy+//OCDD0DX565cvXTxCZGm+/bs
ZcHAlEmT58+es1xX5nOaFrz7M6dOw7s/f/HilCVL7kpJrZ+kxoBw552etsem
Tu5rTqrhzInibjtdSB9vG/BIH19lpvQZa+GdqcBXv5iQIM1Kyoz0DRjvr5OY
QE4aDqvtJJbsjDFLmmDci8d6fsfUecNkvTSZnaHCZJu6uBNwY3OorrFv7VGt
Cp5RirfsEuUZT31pdV2Gau8GlbyStaopsMuJGDRBV9dUvZaUu+qA1sOhJubZ
8/TsdJIRny1asiaK/fgqbgBQA6S2aZay29T8VeptwkSf+VvTO3+dv9nAhCX+
napjzhgNPWTD7CN2bSXWF+HADd7mXA7PMencZ3iT06XsYwIi/oiQ5FinwDwQ
y4g+XpAs5Twrz8QATiFQ9+tyLGpOBVg5Q6bxeXK2QL4yzhghtQhSQ8hs8+ao
rvnCQv3CzUwVT88+G+f5mcX3UCaWeE2XjPKkPfmEj6sQmpVNnVlPQxLPSvWc
6jP8r8YDvJrqLeWxXMNbh9vgagbRGp6RcVt65m1JKfVbtap/9z3RCckDKgYO
7T8QLO3TrVv3Ll2AUFp5z55jKkdAagKPE8dPmDRhImzyxEkwMEeM/wQSB5ZX
AKdQp/DZp0+eAsW7YM7sJQvmM2MFjx63F82bP2/W7FnTpk6ZMH7cqNGjNEIh
CKlF2RNKisKp5+Y7tbCprJsUPnXRC+47tWvboU2hStnn5hGkmalp6ckp3N8E
kMK737Fl67tvvvXh3z74/NPPvv33N9d//On69evfffcd/vnnP73/6ivXnr38
zMXHHgdOzz18dvXKVXghkNz4CFi7ctXmjZt279zF3P35s+cuPvHk4Yceyu3e
o2GyGj0KF567mHVbaIL0iqru+6QUbrQ3PfX6jNsSmZwKrGZ271mmavX06YfF
Jaj+zfiA8X41GD9RdjEnarP6Q/XmUBp788PiEqwD6jw/C8LilZmuzxCmxrbE
x3OMM9tCZQOpOsAVzGwpNf2hse7mUGO1o2PYSapaSqNifBbtNJZGO02gMdLX
z9ts/DT9+Lq2iv9k5RLNbBF1+kMVnJ29ouqn+oCc5IpS87uQoJZRkZqWUvqS
OscRpjlQJ1tvuGAo0l14U0v7kmz9DkRBecyO+FnxUqc2kvkaX4zRyn07fZeZ
VdZbmpOsLw1am8QKBFYciY/P3JMnDsCTfNV2D5f9WkwQmFW1+lPGvGqrT7OO
fZj9R/oThALVkNMxE68oKCDngb5aHr/eiXPWTk3j8+TjWg+a5rE6aSq8oNio
Qx9OfWmqvoh1WR0vtY/hmesoQQpOKgIkJtWPja+Nj+A777qpUaObGzRo+Ps/
di7qAjUIp3rYINjgIQMG9u/bD2AE6MaOHAXiQbONGzt6/Lgx48eqjSdq6Ymm
60SHsZMnThk/dsKAfuVcb6dmio4eOXHCOCjPGVOmzp4+DSoU34FQlbKfMHHi
2DFjR1bi2AiNUI8WNTvvdI5JNzSVdSvp0rW4qKRzJ8jRju07tNeDndvmF6hG
+6zsHKdFlCDlDCho1+NHH7jy9GUw8/33/vT3jz7+6osvIVB//uk67N//+vrj
jz9+++23X3rhxacuPfnYoxfgyC9dvGTh/AUrl6/YuH7Dzu07VGX+g0fPPnzm
0mOPP/H05SXbtt2WpBfNJ5l1zBCl2swuZr3RKY61TGxZ0rrUEZaOqYCqsxeP
99SKjheTGaf08T261DY1YIQNTc4qZ/8Z1lOZHtLYGOXIR9vHcFkTgiAqRZfK
d6NII2PZ/B6GM9o9Z1+8wzRtrZVxCgpvO+LTb6p2lOwFVIMaWep0mJopJYFe
0Qhj5GTQvfae2SY8w1+3h5wIKqWxNPAjfHcGSRmcMsOboshJGWlnlv0sVTE3
i6U19d9jIJ/i1BHVcvImEi/ViZggdVYMSDL3BE768+P29HhduJXvdBVl+Qkp
LFVlmZqlbFMK+ri6jT2LvZyuV+1EfeV1VdevWrnkmmmmSTMtzV/niTsZdg7F
UpqKk2iWsp4hSF29JmFNnaCnjKxpHjGNmHVQ6dzw5Z5ISDusWiMlBffLMfyn
VFHcpJQ6yalK58Ql4P+H3/3+D//dsNF/169/U3j4LeHhtzZoEJuYAgpCEw4e
NABYA9wqhw6DgXXAKRxw2KiRI0aPqhw9chQcYTEwlq7x2NFg7bjhg4f06dET
nvWgiv4g84jhQ9UakdFjQE7ahDGjcQ+Ea+XQIcMHDwJ1KUTZxASEKiGqW5lM
aFRRVOWYSos6d+nUsahDe8hR26/PzszKSEuXoSUyACo6IhJg37dr95kTJ0HC
568+9+brb/ztL3/99J+fgKJw9uHy//DDD59//jnufOO1168+ewU43bt7D0DK
FidTBHXmFO5/+umnz168VNC3bz01SyS5dmKy5Og98VI7j2+PHvX0NFGySmWp
u2o0Vm8hifHES0PV4ZOlkscPnnvSyK0W3drX0xTNeCms6jr86q3UmFA1YMRb
hx/IK8kMZzuvJJFS24SlWt96Kcr71XgTJ87JSKZdQXoje/Fk5h5hG7Snya4d
Za7Knll6q7abmzSTM25dqqp01DjlNAc+wVhaS2dDGmi1iT/wMF0+FMR0Boq+
M08GmOamrrpIdnajggISo0qWpjtFsCErYAlnp4093xR3AbypyoSTUnHETxA8
gRppaZ5PEOIUQKuemm7XRNnZeY/h/WHoMpxh1SpZCt8fL5n6NpCRN7ctlup4
gkNvA0kxkFCxNC0zUBNlWOoylYdys1Tn+lPVVKL4RPyfcOs99/6mUePfNGjw
2/r1f9egwS3hDW9t2BAsbfzHezp16VpRUQGmDdTDlxRUBw8EVGFwwGHwxBnS
rBS6Vo60jZkjILFnWTd45eW9+ziDmoFNBWd68dC9QCjuH+wgVLnz/VSxk0nT
WxQt61IiOSbIUe4ZEb8echQgTU1OYabJLByJjIpo2SqyRfN+vXquWbZi9/Yd
Dx4+8sjDZ5996ulXX3r5vXfe/eiDD7/47PPvv/3u559//uWXX7799lvmpF55
5RVgU62T3rZl/749HL766PlHnnzyyctXn1u6ecsdKSnKp9a7QW2W2p1N7pqo
mGox0SbjY2aTcslyjMk9mebQaF9DkyJzrbhEuyYqaO0oe5pslkpmSuqdAix1
6p3siia1NCQy6tbWhqU+0rrK8rl/hDOinRy9u9e+VSvOyvPvvLONs03o5nso
SpP5UZ7eT3sXM2uZqqiJYk+T1JdWMTNfavU9LKXd1OQ+6SG1dSkjkCyMDMpS
6q5aTmaZoQCj31LSXcc0n8FSDnsnf4yMdMNZWArVZ7NU8umerUZSuCUslVos
F1TdLFW5+FTiNMPjv9tq3J9Pl9fCmiiylNT1s5R+9K+ylBEAsrRuVhbrl+yi
+kAtk34PyVJ66CJEhahgKaMBNkuB9Jq+dL/6HExLMz5+ekZYaoqal9465uZ7
mvzm9jt/07ARtCgMrv3NDcJvbdgILIU0rR7eKCoxuXuPXlSGgBucbZjhKtAH
x1/rVQXDIUNhBKxglsawJ0Qpg5zQqBV9+sLrh0QcpCk9kIPycLu8YoATERV3
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
nMqHQjBC6gvqsAZZaqbNMEuVmAqTjnvlRKSnC0sNnM2ZZO3aJ8FYhqqGJGRl
h6VnqCL/5NTaehVm7fikunEJdaKia8LxueeeW+6485bbbqt+++2AA3Bxb6vI
oqIuffVaT8AQlOukl9EXd+wE6JF+kJF0yWHUlj7rCgM2GfzsqpWn+q3ORSVO
IJRXZr09I6JEaNvcfKEos0uchw8tqirwExLjlVMPLRoJijI6yjSTyFHcBl1B
WpzHr6sVeO062Cyl9epSMrhP34mVI+dOn7l66XLJST35xKUXn3/hnbfe/uCv
f/v000//+rcPR42fFHbHXaQofHxGm6s1aoxPH4XTxrepWPTdd6sER2szkcnM
NtFdS2QpM0q6tTMwd1TVVsUnKh0YYq99UF3qlYs6zsBKfkNyGTrqnCFLuYvZ
KN4I794Q0aUeltomM6CEpdScso+eLGUbqexrZrzUyb+bnnpVBm/n8ePigrKU
qjXUfCfpxxfssxvUA9Jqzr5mXsfLUqc/1Nalfpby0VnVz7WV1JmmQ5ydmLo9
3OoQN/2k1GY8TLaE5+SyjdFpV1S32ZzOCyrVp7s1ze+a/kfTehnubDHmSXNx
XsHqTuWgY0mRE7yqvzInVz+01Xepu+kDrZdsusz19HvmsdudP+IF9XNzWeDl
5OYKIaUftq7ToVk3I5tvVL1M08tJTtobn0lRW5cGGu2zs+Wtk35P3jav3Xm3
icEGGaYNX/9HMf349ZzmUJ5RP03PFMOvyG81yFZWNyOT/8QNdQDH0jLC09Ib
pqQ1Tkyu26LFrXfeVe2OO2refkeju+/Jb9uuX5++wwcPGT96zLhRo4FKsg7Q
69y+HayoQ0dVnqSNS+qLOneElXTuZFmRul8bOUxy4nc7axdeMkoMh6o1ItqX
z9MIpTufqbNLlhbVFfixcTF6vYjt1IscbXb3vRFNm4OxSXHx6ckpuA6ujAct
K+rStXOxQmjH9mX4p4NTuPz9yrpVDhg4Zdy4xXPnb1izdt+uQE7q1Veuvffe
e6+//U6boi74lFFR5UYqT6eSd410tg7StPFtv7n99pv+8Ef8lSnVp/Lyuj+U
e0WdFaLsqZeuT3sds6xv5i5m7gO1lzVzXzNdeHWnv6nT6STlLmbVdG/3e7KX
07om9zVzZ6h0d9Z29ofKXjx1OyYmlDHPLvuapR+KvZwMcsq+ZtMBqjs0xXRf
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
DLrqSalkaeCh/SxNyuBzkJr5mi6Wejs0yVJJ7gS16olJZGk9HayomqXSaO/6
THHrUpulom89hBSWsoZKWOo3OPhxHTqNmzN3+eo1G9dvoPN76NChBx54APw8
o7+OHz8Ogbpv374dO3ZA182dO7ekpCQ2OiZGI9E2jcrWMP4zRhuZCYuJjGIu
HoaTeTm5o0eOAr0P7j/wyLnzr7/62meffHr9+vUvPvscXvaTj1+8f/+BlYuX
jh0xsrRTp6yUlLQEpW/h0TPBBAJ3aNexuHNR99KufXp0h1MPig4fOmz0yDET
xv1/tZ1nmFzllee/LK3uruqW1ILBBqXOOVZ1VQe1AsHGgLAxFpggQAiTkwAB
AiGBABFMBkmASEIglCWCM2Abj8E24IQ9Djs7yTAzntl95sMa27P7Zc85//c9
99z33lvdzOzwvPRzVfXWrVst3V+d9D/naiIzzNG777zrgfvup49G3xHPPv3M
judf2Lt7zysvvfy1r33t9ddf//73/vKdH/6I3hoWKRmor7zyCn1rPPnkk/TN
smbNmvMuumjJySd/slCs69dGT27Osg4WUX7Gvf6IpUmQujlKhqUu8WQRWo6K
o3iwiJkNajVNcN7RD58Y6Kbped/cjaSP94BKxkt1fmikIZ0aS6u6umyfZ6d7
Ik52d2NuiNPRu2hnil1q+o6mzMVDb1KwNLXvqJ4ndRZzrdGHah4fRmmVr88H
Sy1vM1ma5uMrS7XbcDoKxsZyXocY604sKpssliIb8rFYmljw8UdnLprQ0qlU
RSqsWRtmxJWk7DQ+vu8xkqgfGFnoggPj7gpz3tdOXc4uXRT9GlP2oNhJerFm
xZz1bPAC+PJsQDiDpYBknfY1LY/alWRpsKFekiOzxye+eMlldz7w0KObtmiA
dM++vfsPHjjwyqv7Xnp559599NATTz9z74MPke16zZo1Z604f8mxx3VIXr27
mwOb/WYNdHXRwnGvLDIm4bYjEU+Pk0l5zZVX0XsR077xta9/6xvf/MFbb//N
X/+PP/zhD8TS//Wv//Ovf/vff/j9t145cPCpLY9vWLvugnPPPfmEEz53/Ikn
fuq444/hgiuyRT9/0meXnXLq6ad98dyzlq88j3NM5NSvuvKq61dfh+gomaPo
jY+QxfZtz5Ffz5kmCZB+5zvfeeutt957513i9m9//Rsi6p5du8kgpy8O+hLZ
sWPHY489duedd65afd1pK1d2LJiYIUJ75617lio8nWkap2hllkJtan38gKW2
VipgaXIWM1ga+fimlsnFPCdjaajH9ywNDU7o8Y1dCs2RsjTXJUZmj/fx/QTS
LJaCk1ZbmuQkdE86r1mlTKp7go9vWQqbE7NE2ebs6AxYGgVLRdMEtIKlQR4/
WRZL29S718r2CgaV2qWoNo/GB/tMh7frXARP/WIX6/MUsujI+4ojVP5r7huG
rjF3XYUk63Ri0chwM1Pd954K+iYJLqJzpsYtub6onHx3xp2eMJknsqYprtCj
fsz+6mymDF80WsIkv8N0u9T9ZvxrU21OhSRdJ+e2kJ0fLuf9UruUi/MnFvpv
QBcmdXuGy2SUlj538i333Lt5y+Pk/JJvu3Pn7r37Duw9+NLer7z64ksvb9q2
bd299110ww2fP/fchccf3z06+sn29ulz5tYdOTt/xJGHzZvf2NrW0dHV1dHZ
E6z2bl7IHLV3dLS1d7a2dclPsirJUCSggaLf/Po3kiz977/5LVj65ObHiKUX
nXPushOXfuEEFIWedMpS2KKnn33WcoRGyakniq5evfqmNTeuv3ndHbfdfs9d
dz94/wOuFEHN0QMHv/GVr77+rdfI/kSmiUBKFildA+2/Ze3NdGHPPvvsgQMH
CKfbt28nI3zD7bddumrVghNPnCWk8nZpIVcYxgjRkKijoxo7ZZaWytq6xM6g
1zin1uoH8VLLUhTha+4JeSL8xDm1z3OUxwdFhWypdmlqvZNjqcRCVfuZmldS
lmrtqI5GkqrObo2XAnHxfFBUO2pZakeQBFr7oGc+SGj1pOq/q86U5fPGf0et
qeae/pMspZMoRS1LM41SDwFlqeFALKONZA3dtlrfbnqbpGTntao/6kNSGrML
phenvRYuCirwwVLdyRHR8YWRTMDn0z2C9IRjWjMfldaPYVvsrW3GTT9LqhnJ
DUPGF4ClKmRAPbwzMrXMYNxnx2APZ/CZ4y3ypcBSgvEFQV5JI6IzRsfxvprH
d9n5ALny1pA74W85CKjS7Tl3YtEFN617aOtTW5957pkXXnh25+5te/Zu2b79
9ocfuWTt2pO/dMGiLyzr+9Rxc2l/Y1PNnLn5uXNz8+bWzp1HxzVHzskdeeSh
c+fPbmxpbmlrbW6h1a6rqa2tsRXH9HiLKWQaK5U3P7pJR9LTeu2b3/rh2z/4
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
oyjsWLFpMZEktmTwvc3Ra90UtPZVvT2uVj8j94SKd4IbWZ7JmKoLmaJPKexJ
aQeKvFJSa195TpNmlyrvQSwUwQS1XZNsV6NUc/fJPs82P6V5q6AGFSzV4nAt
qoGRE1eIx4U2YgJxqjq7OggZpWAIkdcKpewM1D1Z50xWwmfVJqXNP0oP/4Jp
yvlKn0WwNumnBksVtjbnDpYi9uukuGjuJ7bxYUuwFuvSIAAD0L9WWWpJaHNP
7qNZikpqyeaekGWziSe76ClYsHYbMlm5InmmZbJ8qppap81jluZSWOpW7ezZ
dXPm/MX8xo6+vpGx0QkRQ1m16TGLlxy75ChubHLMUcvPOoOIF7D0Tx/9kVj6
r7//F7D04N59YOnK5cu5D8mJSy85//yb19xIFEWxU2CLkq27e8eL+3dz7ehX
X/0KJ+vf+Pbb3//BO++89+Mf//QnP/351994Y/W6mwfJJJg7L3/EkbPmzp/d
0tbe018cLo+MjE1MLDr+uM+cdcaZV1x2+a2xwOnuZ7Y9e9dDD5509tnTewag
oyfTlL6DFIPaJ19BisctS1Pn2oN+WnGq/FRmen0oszSqd4rn39Ho3vXTkxMi
VjCjWNQFlnIn8MlYOtksZpc0R+1opA8VZRMsOuSPJmVpWIefwUnknqyGVO1G
HChLEQcgZk7vC03lqF8fsmOSmbIUVU5qL2j0NYVOH/s1P8VhVVP1rUptgLRC
ZhnGYTJVHex0yfSFrjCpQrYaVh9u3ihhLVrLaBuhgKjLLF00fcIXBmTkyGwe
3/b6SLIU4coKn4Wl8SMjytIKZNaio8MWLiYz0l1JOTT/lGlRr1cNWS+O6Goj
zGz8J84TQ6X89aHYyfLWsrS2VMbl0cp7JX4WSxF5UPuWEKq5fm7D3t55yLz5
xFICab6xCT4+WOrW7DkOp+zyz545b177QP/pZ57B80N9t70TpUEfN0E9cenn
Prv01GWnbLz9Dpimr3/rNWLpP/zd3/9J/iOW/uZXv2aW7t772MOP3nz9mi+d
tZyM0rOXnbr2uuvuuv0Oouj9996nFH36yaeIouSM7929h7zyr7zyqjr1P3z7
B++995MfvfPeq994bc1ttxeWHHV4e3tuzhy6YGnZyukzDlDMb5rX2d09UBgb
n1i6dOk555xz9VWr7rjt9i2bNu96cSedc9euXY8/9fTF199wRGnUOdTFYpyl
rvZec0M4VpaaeXYxvVIqS235KFiKftGax09qmmgz/HesyiylK4n4GWcp5tpr
vVNSH2pZitp+Lc5XZZNnKTGwT+vwU/uWZLG01q9JZzlpNh/xVRA1QqhEM3xP
P15gaVVL2zRfq5/KUu0RrSyldQi9yrAUdzfxE3c3DKqAY0njUCudpmLLfVyW
gjbJa2DTkc1Ix9IKtUm2yOo/z1J8L+CzVDibZSmZ99Y+TOqPNFtk039KVBe7
9vk1jnAiPiDVTUmWqo+vLE0l5FTsUsImtzoRu5Q/grxjVDdFd3pP3yGNTQTS
mrmNNY2NtU0pLAVIcSxxgHmtg4Pr77hjw4YNV11x5Ypzzj3VTyrByKczTj/t
rDNPX3XlVbt37oJd+u6P3lGW/ss//57s0u9/901l6flnnnXq0pNWXXrpvRs3
PnTf/WQxEuW2Pv4E4qJk3ypFyRZ947XX33zzzbfffvudd3/8vbd/sHPfwRs3
3F5ctKR+7tzcnHn5+Y10kdNmz8GKoHrEnBlHzjmyta23PHLsSUuXr1x5zfU3
3HX3l7du3bpnz54DBw68uHP3xgcfKp54Ul2/kz7Bx1eWRhZpfDaoyuT/AyzV
viXKUtcPX1WfnoeTstQtYSm9tgroS7DU1jtlsRQJcWWp75kf+u/x+tJ0lmb5
+MpSVEZVmFGSZKklqrJUQ7hql2ov/WQsNIul2pfPshQ3o3USLQeso0o7LSH/
AywNVOfsaC9w0cjKhPTRyIXTx13Fu1ZhBSd0PehifZPSWeq+QdAir6KNjcyU
Ws6pOs2897X5KylNoenajIgTbftOhy394yyFjw/7MGlw4n2RcnLwT2Mprscl
sEbGguJSNTvpJ21DqYDS223AHGH6Ep8vICWbk0BqWJq6ps2bV9fY1Ng/cP36
W5/YyiVJT219kizJa66+6vyVK4ir55274oLzVly48rxLL77ksc1bMDT5x+++
97u//wdl6a//6lff++6b5K0TS9dedwOx9OwvfvGOWzdseeTRx7c8hpJRpSh5
9KhWJYp+97vffeutt374o3df/eY373n40dNWruwiZ2Hu3NrZsubOQ4wC/K/2
LIVdTWilTze9vX1euTxw7KeOPe20S8gMvv/+p5/Ztm//wf379z/5/I6l531p
Rr+khAoF5N+TLHWaJjSv8yObo1omowCdol1K58dMqMosBUI1NKr85Db7w8Xp
pWH+KfFStSeTmibU4aPJc5aPzzmjXm6T4nuJxIT28OWlvrTP1I5OQWufES9N
2qXq41sGcjjU25+puTDES1HPr+Zo0HmvRkaZWJbapX351McHS+HWJVlqcxx5
E1m13TYC28zyZ1K7VIHGhtBkLOWk0sIJYqlnWiZLG8IedKMevx+PpfhErOWc
Gkv115j0ym3MEyy1k1AsUSOQ+moua5cmITkpSxXCk7K0Tk7IbfY9S6OnCiW6
66fNb4FRyqVQSZbOm8MrztI8WHrrhqeefpa845cPvrR/775nnn7ywQfuu/mm
teQ+X3XZpasu51w8ufkHpX39e++8G7D0ze98lzi56aGHb1p9/crly6++7LIn
Nm8hQ/S5Z7fteP4FMmjpnCh2IsuWKEpOPf2kUz2+9YnzLrqofPTR88ihmz1X
UVkjNnNO7FINTehiM7Wxqa6bTaBZw6VDC8OfKA53TCw8dtmyK9bc9NDWJ5/f
u3/b3v0rb7jp8OIIIzHNLg1IyEPo4iyt9f3nA5YGuSfLUnLq6eXK0mjsHcrv
fR0+WMq1UlLRlGQprbpiQVnKOE1jqepDs2r1XV7Js1SaM5OlF2iaMGMULfeT
fZ4jfehUWFq5515lHz+LpZq1D1ia9PErsNRG8NgE8vniJEvVglVMiUooqhu3
yLUsraBLdZ3lBCyMAse9sqwUW1dYushM20z44x59iDRalqppbc1sxbhCMpBV
upeMRSzFu2Tpj4KvpJScO7jqyyHwM7BL7cwpsLTOK+hDigonEeHUQGhWLBQs
BZmj+EBylcZmji2MsZRQXChNHyxUt3ZOm9dMICWcVs9nkOaam2sam+m4ev58
wiatqrlzsfBHehwsvWHDbc88+xw5yFD0P//8c0888dgD99976y3rrr/mamLp
qsuvuO7qa8hqJRi+9957v/vd7wikf/zjH3//T/+MHiN7du3e/PAjxNLLLrjo
4fsfeGH78zBED+zb/8pLL3/11a/QevXlV17at3/3jhcfeeD+a6+6ctnJnx9f
sPATLS1EURt5iOIPjU2xSO+c+bL4mFia6+wk17VB6khR99gwWDi8UGpftOT4
c8696JZbTrny6sNLowxGyePrrDrlZNBvREc2T+rjWz2UkzVJhmhaX29uiAfe
cZBT4qXVBoA2j4/ZIvD0U338KI8v7fWUpaqj13hpVg8ohqGZ14y+JdZzj7PU
zRZR3ZPVNE3r7KjqaM9maXr/0kBrrzFVtif9NJNU797m8S1CkyytbJfynq7O
XHcXbu3aUll9fK3bUbvLogA7I5MPgEoN4gnQNCFSmaXw8ekCoOvMlUtJliL3
pFnyzOhr2YV/XdrLJ9FiYPT95PWtYdHlsxWaoL1+FvcuaXklzdpYbtf5jnb6
u9JyiFQfX5dWw7oPmGCjw+nHYSn+li1LCZV2WZa6rFOxxE2HuvuqmloZofOa
wNJ8S1u+pUVZqgsIrWlsxB/rmpqbBgZvvP2O57a/QBQllu7du3f79m2PPbb5
vnvvuWX9zatXXUVu/mmnfOGEzxy/YsWKPfv2Eks/+OCDP//5z2Dpr375V9/9
9neIpWyXXn/DhnXroV0iitJPepy4Sp7+PXfdfc2qq09fduqxSxYvGh9bOMb9
UQvF0mHNLTVxTsJm1twZk1O+BabNnqd7qubOr25p5WofqatnU3PQcZLsq+l9
Aw0DQzOkntOyVHP0ubjNqf2Z3akyWIrMe5jH912b2Hrs74M9qSVVlqJYleOl
6vWjVh/x0mlmmnMNF2G6+UqBPjTn3840xu/iOKqwlFGf3k8v0pDa2lE/0xnH
nYTTj8tStUJRs4TFGDR5fHeQYCkn97vTNKRmTerjg6W0rDGpWQnlUrL3hfr4
zh9P1Cha0xS4iDIdPt+hbHEHCaBZgaSFZDKoa68/opZ/azqhWqr2UwTWON5a
2Zi0OfHWsJydIZ3oHOJO60MlmkFDfWadr8yMqjQzWIq5rvqIkxUsmHAnRDxT
TwWLseSCBjMWLPIsLbFTr9w279uwYPzQhRNR7MKfB4teVVsYho9/2MSi6fpF
OSwZitaO6ia2QgFJ+plrbiWc1ja14EF+RJRQOIYeCixtHhxau/HO51948cCB
Ay+99NLu3bvJN9+yafN9d99zy9qbr77i8vPOXn7KZz+3aNGi/uHh62+++Ufv
vvPhhx+Cpf/8j7//1S9/TSzdu3PXow8+tO7GmzY/uonOcPDgQSIzOfhPPPb4
XRvvvO7a1Rect5IM0WMWLlw4MjJRLtMilhaHy5+ki2R4cmiCCTm/CcdBHYKs
Ro9cXuzm9/Qxf4ZLGNLkOGmElgw0skWJS0bXmcwZaXtStUsVklFtfG8/dEyw
OeG/13oXHgt2KZf49g3YHndEP6wg9wQfH/WlaovqbFNonRAvrWLjMLIqxZjs
hF1q46VVnmzkyFd1dNk8vvffQx299sFTuzS1alTjpbanaHIWMyK08sG7U/cE
9aXWzY91H/VtSQDSQ1raqjwetRc0xjrHekklWAreWg/ddr3I8vHVLmVCjo9b
VlikJFmqJ7T3uFvotCykSnrZgQWL9DcasGj1ZgBJJVVA3WDZ2iRgXO3VJEvz
I7HvmmSk0VZm6vsq/dS6y/viIgQNLDaD0dhaqA+ZEqaWgHU5v2rppisMA3fK
0trScL40jG30s0b28BLqzhwfI5zSXxlmoPC1mRNq7RPkVBztoT+WWGLD/3qb
IvsTGXxiaa6VWcpPNTVPa2T40MKxtUsbBweZpTt3EUiJgTt37nzmqac3PfLo
l++86+Y1N1556SXnSMXU8OjYJ5tbykcf/dXXXvvdhx/8+7//+0cffUQs/atf
/OrNN75NLH3ogQfXr1//8MMPP/vss+hKTQYqnerhBx+6fcNtq1ddff65K05Z
uvToiQmwlBax9IjWdpZlzWlEdMLHe5sIpGCpwWmjXfR5c53dM6UPXq5QsCwN
9O+ae7L6+lj7poFIspSsL3VGrBSFIhZqA6qOt9g5xPIi2KVOr+T07311Pf0i
bJdCfRl8z6gUdaczUH19vuIULKWTsNmZtEv9UHsImlgGJXYpFPS0R3X0hCZu
nNXbl6Wjh6YJ4lB0FAmWau3BUn1tyhI8ShOVFH2oni0JUmVpIKu3glAcOLGV
V/dbBVatCSbo4xovdS0yDEsrW5vIXwS92QOWagIIO+tMF7g6mS40Xff7piWA
RpC1caz2zUNUcRmcEy1EcADdVoMfuAnpgVVcBppKsBR7VFCpCxNAgivE4/qm
eF/bYwQn5M3+2twG0WDymYXhqm/S0diHLeQVzJVm09RcD6Zd6GlZeTo+Nmti
Af76ZoyN0tLfBi8ZQYKXH7pgAe8cH+Nt5mz2nPQ48vjyYflsM4mx9A+ppbWu
qZX5KeYor7b22rb2XEtHDRG1rb2mvR19IeroNqRHWrCzZXpL69zegStuuHHH
bg6WHtx/gIzJp7Y+SQC887YNN163+tILLzjji6d/6tOfae0faGhqOqKnZ91d
d//dBx/++f+Apf/0V7/45Xdff4OwecfGuy654srb7ty4acvm5557juxScvNf
fGEHne3B+x/YcMutq6686ryzzzn5hBOOWrAALC2VSvO6u+ubGuubmonquWZe
df6YLo++FMTGxuOt+cYWWnRAG+jZXHvHrKHiLBGFOU29gsgfIy2u3fD4WCxA
Zw2a/djj5td7pqmgHhkiejm8eFXZx6bbx18CDT6vgeH6/mJdX6EOFBX/PZLY
IwOFd/GnosfdSTDa3o2zN2swkuTjgNu5+Gen9/FSlT3iycKrAaK6XYoyIy+F
Ej8im4We1Ssll/Y2wbzm5LMRRb1iNGh7oo/bFiXJ3iaWpXyMxztcM39lKZ6F
ABzz07XrBbu96MIRb46Byex6+6f2x7CdNFRLHuyk9zrUdN5QoX3ElviptDcI
3l093wbtFiJ7sFJZpDvxrO6xHGuIuouEy16hfpasnXZb8rPobwBfCvrL0WN7
KvsUtPzub0qOdfGD4rmD4XRMtLQb3Bw3ee1hExP87IJxXqIXbjBrpl/8lJPt
8yRNuk2q2zrIBCV+0k9aNbJqOzryPd3oEUFmyYyhQsMwD4U/lAxgsnboW142
E0tn9w1cfv2anXs5WLp/7z6EN8nIvOPWW66/5uqLzl+5bNmy0sLFh7e21Te3
0Drqcyd/7533/vh//i/5+P/04T/+4ufvf/v1N3bs2Lnigos7C8VTzjrzlo0b
Nz+2Zfv27fv374dM/skntj5w3/3rb1636vIrzj1r+UnHHbd4bIxYSv/N7+mZ
2dxMl0GrrpUXjgmVdIxqBB+jaDaLbe/qllb6aA2lkvYhsT6y41WxQDh1PaCK
8kfp8uGyP34ePWYwIRTAx0Izp6PHbPrBQeTZyfi0Kns1cXWzM4BttKF3KNcz
yAvtTPv7tWd+znd8qvUzm2x+ytqlqT33bB4/1gfV6Oitj0/2Kp7SpXuwTKfo
SEGP4IDtuRcEAWqNJF+DCUklvsYKYP1GqtK4rAl1U1aPH4UITF8+zT2p7inL
x8eNAzvTshSq7ei28geqx9c2GvpssHCGSXeCKqCuvrW7x8ejlziX05uRSfsw
stlgeXpS4YKT/UBgl2LK3sxFi/TzWoMTpp1asPaEybPpOaP6UjGkA3NdzWzY
2HaKgcY2dSesca0vhQ05PeEywMLHp1Zb3ZYNICKKc4KiLLQfc3lDGy+1NVG0
rX6kXFdmhvA/xeYWrKqWNmhP6OZiO6pcsp2OXPaqILmqvgGOgzW3kL13ZG//
FTfeuHv/AU7i79m7fdtzHCz98r0b1q2/9qpVK1ecd/xJn53X2ze92VmJh3Z0
bnjwoX/7iP/7xw8+/OX7vyCWPvrY46Vjjp3R1PSJrq5jPv/5dbffvuWxJ154
4YUD9N++/Qic0jlvWXvzlZdedvYZpy/99KcXjY4SS5t7+8BSBmlbMy9PVOI2
cmfw/TUCgMV/nN9CNjkhjviWWTsqs+pcfemgTNNLq7G38VLr42sDUmhI4eNb
lb3VNKFOVXNGWQuc5FiB8DDJSR1mV0Frb3uTWg1pssZe80rSb6THZp2mdUZ7
NK+UnMEUxEuD3JNGQQ9p79D5I0HP/BrffiQ5rzk1rxT0gsY2q2nSeqes3BN0
T3DEopy7JE0mjZfmvVaowY9py8rja/WUxhiD0imbXQKpbLzUbrDvHlQcaVon
XEYHVCH268Kbi2Px0vAjSxRUmWavMPnBNZ9u3zcZU3WVBr6uDLFQW+GJEKuq
PqEhVSrmVROKgigJhOJbid/X1KDiWfDNbROW1o2OcFgVgdz4yknuid18sHR4
eFpv339ra0cQHq4cN2wny6pYnDk60kBMHinnyJRCLNdEdNGik52j9o4j+geu
WLt278GX6L89u3Y/+/Qzmx/ddM9dd/Mgp8uvOGv5OUNEb7ESawRutfPmj37m
Mz/77W/+90d/+PDDD99///1vfPO1VWtuOrStDQCc2dq26PgT16y7dfMTW3fs
fPHgwYNk7j7/3PbHtzx23933rLvxpssvvuisL552/DHHjI2NceigpWUGGb1t
buXbWnlJpKIyS6vnt9S2dXLjjqEIpEgMaZ6dDmBzcgp+oJ9WFksRJUDtqNbw
BzVRLq+UnFnva0fB0swhTSaPPxWW5gcGoG9KDmmq6uoKNKSpmiZlqbMt4xn8
LJamT673LE3apcpSnYuXZKmtsU9lqWUm9gR99VP1oXiWBfiQmgZ7Orro2zZQ
xNikid7dtqIGENA5F8h9p9IMWSq4q9iZxT0Fi5aap+4B+mA/A0H8FqkgNSy1
CevUrwZNFWWdDdSKqhd80VHy96O1SRxpHMnUciLpY1mamskC+tjg9CxNLdTP
G9Un4TSqYvJ1obpqi4VcuQRrn+iXLw0nq6FAQpd78hrS2qFi7YDp3sar5LrM
jZRnjnuWDhfpLaJUF7N0GI4t+f5HFAsX3XDD3pdf1mzRow8/ctfGO2+8Yc0l
l17+6c+e/ImODoIkRw+aW1At0NDWvvHhh3//b//2wQcf/Pznv3hh977xTx1H
hmtdazsASMf9EwuvvnHtlq1PvrhrJ6f1vcV79513rb3h+ksvvOD0ZV849thj
2weHlKVC0XYOPnTKCMvWNsmUxVhqFyf9W9s4FjeYWYQPlqJWP9igxmdQX6os
jVU99fQhIor9kdY+ng9Cr7zKLGVdgDRnBkuTPfOtXaraz3R9qLBUtVHKUhTk
W5YiZ6QblKKV9aFTZKnW89fGZ94lzdfAf0+yVPegDh97bAZfjy1LLWljNVHk
49OpTNGjtgYCtbI4kI9rulPvcctSAksWIZW6YQmTL5cKWGrt0qxq+Tqfx58K
S/UbBInyOlOvFbPujI09dZbaPP6kLE1CEkzj1BLa4PsqsuD37I7lS4F7fJkN
gc3JuCuXEDyZlKWIGETXn2a+0k/kuerKJbCUl6kKIJbyKhZnlctzRseWX3nl
XhlgilQRZ95vv/266647Z+X57WStNZHf3W5Zmpvf2D0+/s2//P4//OM/vfvT
n1198/oGMiMbW3RbbVNLfn5jR6l80dXXbNq6ddee3WT07t2957lnt2165NF7
Nt5x43WrLzp/5SnLvtA7OkosJZDWtXeQkcw+e/8gZ+cHh+qJWnSPCE6r5jcG
BiqDlK6EwSsa8DSQ1uoM5XhNFFhneYs+UTpeJIultJSldnIoxyGlypSTQXGW
2kABVsDSpF3KhaCCZeypzFLdow2gUrX2CGNmsdTapRVYCiYn5phMzlIlnmVp
ql1qe5NGAQRPUctSxELts1NnaQVLSS00LQtnJpRT3Fhrwap/iv2BX5w3dUTK
0grWpr3ILELW+ZqoyixVyRXUXgFI7W9GIxs6DKvC78d+0VSomQ9+21knpEvi
lN/Ygix66wmtgt769RFRS8PTR0cQf0YgtJ7eNAFJFKwilV8nNWw5T86YlTvE
DZA5hCsspZMLSAuxCisQtVhsKJXmLlhw7rWr973yyr59LvF0//3337Lh1iuv
ufbopSc1SJEqG5xkMQpL6Y+5+c0zWlrPvPTSX/z13+z/+jf6lxxNIGV+tsWQ
m29smjc4uPziiwmnu/fuIesUMQSyezfefsfqa649b+WXSkcdNbOVQcoy7YHB
mdIfD4sBSI4w3ZjksjW2TJvfUjUvcvlF29VS29Ja29aeF2OvAkvRnznJW1BO
46XR6JA4RZWlToiU0DS5eCmBcaA/yy51WSHp4ZzFUsdJ8etR72T7O1miQtNk
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
LarSMuJkSyuLUltb6jvac2S+trXjEbvYGW9m7efsvoHPn7vi0aefeXHfvid3
vHj6FVf+hQiyYIuCpYiaEkt19nEw09PJkaRwlAcrD7rCsOQeaJ3cHNLCEC+Z
2hkNmu/jAn5uGQpp/9Ag7VGBZ96rMjFlHh2cnHgTE5a9fqpe1KDa30lHMNfb
Qcxe+4mpypiSbKfeO/2mmeyMyGre9LbCYkXngNtptZ9ujrPRh/p3iYlA7dw6
98f+ATtryQ5itvJ51YfagaG8unvrzQkDPX5eFiba60uCKfa6R/Wk9rV1iT1W
gpr3MtKc0Zmq1FRpoMkLG8FL2pCgCmJuqq+JEGHzHb7+X+vb63xjkyBljNwT
FI7JPiRQ7tf5bgAuqJvRHbTO6/e1aYB2JY3tgUXq9Ueu6EgUQ9EZjMbfTVuG
LEslTv7aVPMO3RNqoqx8PrlwQicmFRU/v7s/IWvn5YTQYek2jGnWDdhDPxtE
o8RNS8SCZaiOj+kGVUsJ91ytPhjYMDbGYMGlyjb+IwT40gKFj41af2aZl+7E
ZnmvEV1uT2kUP2UzW4OHjYwtOPW0Lc9s27b9uUce3XzOhRcT7urbOuDX5zs6
adV1dtFiOd7A0Mz+QXau290Gt428e9mZk9Im+1Q9vVwPWtvpzId1dY+d9Nnr
Nm58YNv2pRdedFiRR6zqCHsdZK8HUHe6bslOxsXmuu4BUWdK+8FgQc2ENqd6
Kky31353rpU91GEE0mGG4XRV08vSjqPRQVwgX48Z90NDM4aK9YDwwJCq5sHD
vJeaKiShta/t9j38YXJLpZODtkNcv4YLXI8UzF8WVLrpSCakgPYmugcaUu1t
kuxbgtYl+mxEIVmB7cqBU9NUxC1PsLqePu3dZw3XoHYU72IfrzFhVfjvkNjX
tjmz1jbuqxbdPSHUxgeS8VJcJO4j3INQtVvR6Ey5ebUZiN7+TjDuxeDRYHev
6XaPeyGn06hK3I+F4V4hDpE4oq/QyDs9qdGtz5I10++E4B0nxE69jPA4rnan
kye18/rsTDPLPqmdd8fQ78evrUG1roh/YvD9RGxbsFQeyz0BvDbf6uJx2llG
bo9fHfbQGzX4A10MRtHXI87JC497AjOER0dozZpYgMUS/gULuNUJmh6gQ4J/
CovMV/ddJlLT6cO80MGPLDqCJOKldMwG3oj8LMaW7C/RTrIJS587+d7NW558
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
w5mvGb8Z95HpC250RCXwAecjbdGI8/GtUilgKb3E1fYLLVNBOlMGPAUsdWsA
5iI8d34LiAV8WDXG0sDHByTFfOVip5r2TmiXnCrQGJywS70RyOhmWvYXkC2C
MaxZdbFdC7w4GtDHBEBAoN2x1HV2whLlpq0LhaZJNaRJljLlvF4pSlplsNRV
8nuQWovUstRK6au74xVNGSy1anrtAcWcJOz4zDusd2c0+r4lUe4pZgF26Vz7
WN+S9q5gJfNK0VNtnTiw85qtPRlL+qAeIM7SZIK+2vTTs/1PlJmWtylzmkxT
/RhvEzX2ukf1+DWJbZp4St0jQSr+Z1bbEcZLp8JS3akWWp0vd7S3tlI31S4N
LEnL0qBfXPC+UYaFi6zCaGSs2MAkyKwWAK59MBHPabhGR7JYamuT2HJ2njsn
uFP2yxXatk7pn2W4SBTVWSGxLFLCNkYvppiVnrROhyVeigin2KUIYEZyTk8/
1UlxcRS8+7Gx5ILQMmKprXFynntR8/iaooLfbXdaltIvDSxl86kNIOXYVx5N
QYeG6uhTlEvWLtWEux7EffyoionTN1LZzi6nCFi0Jiq1ux3ipaksjY1a7uNG
JWqXZtVN6YwSzT2xxqownFzaUq9WJUh9fZiVXKvD7AbdsGat548K9X2tvuae
sCdw4dG/FOdx5+/qlQXTVAqozLxjp990e9zCvGbsQR2+aDZVEqWrF31gMEsU
us5g4bWYSu/fqye5DcLP+l6n6w+mhVrhZ7o+1AwYDbSfea8AxU8QUvfX+sdT
9aG6J5cmyc/puNIESyvkVsAoy9IKlqGWMFkjrdYYSHanCx5q06QkNGCXloZZ
XEOerGdplturGf/ALg3UT5alIHP6Ca1d6uo8i7Ji++ukVkp9fGfBJuxJpIdQ
xWTnLrkVbyFSJ38vtGqGY88G29Dn2VUxoSfzYDERtyyqXeq1US4PlSQqWEpn
y8eE9kOoIIWtS08pJFE6ZfpEYewmyzA5LybOO5DLg056+jEVl/8dylgizm5z
up8M3ZK8adEPQ3HLDe4s8rcYWIo9fDYnVx+WJdOKpREH3yl9/RjZCfW6lWdG
6JM6JTtjNBigjBmjqB0FeJNzlnEGzChx+xM6U11EVFyzm48sMk/V3WOKvcrk
VWjPg6GhM5V599GGISdExU53PDSkC8qm6X2D9b06Q3mAxy73hyvXGxvETHvs
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
YKnWO3k8TomlYEgqS21XeWYg/PqKdqnOctLZIqks1Vho6izmCj5+kOpKsjTQ
NLkRJFJf6vgsXXS0SZTu4eI9HXSS0XPPpbHkTgQhnfdXkaWgLliq/T2SiSc+
HirnI/80xlKTx4+xdLrPJVmO2Yy5y1J53VNtWqG+LSFA8X8FlqKUaNZE1IUp
/BQmR4/8VK371Fnzi12ivM73P0namY6lw4LckbLusXamTp1jWElgIWCp9d99
qafSL9ZUX2s+EZNUliKljnpRWvn+iJYAkdc9FSqwlEOmYpeqUsmT2VSHekgm
Werr8COWIl7Kzr7AM7BLdRGcdb58Us0EkxiB0HjVaMRSl/2J+/gBS2v8/BHu
ky8+vmVpUBfKvZfjLLVBUY2dVmapHVhfYc6y2qUuj2+9ewGpslQ5mcrSij5+
l2Wp9fGTLEUPKLAUc0OSPj7r64WlWoOaLB9VTk461z5JThDVOvixmXdxTqrN
aeOlSQ3pNLE5K7B0mtfsM0ulESUI6ap0DEvhJ9rIGyapeZZK77i0qRlaGxDY
pbBjQ1ih2JKsPjNfI0FU+Sk+PliatHI9Id3MDvSWh3mcS4ck++nIu2lkI1cI
69vBc4KGsw9lNCcCkgEnBbnDSG27RIzkYuwgJGaafEPV8+yhcdj2KRYpRnmS
+0bvK6kih7WMUEBczhl1yQtq5l2he8lb+4alUU8SRvoQPojapb4aasiX6zuc
svNeTmGpeu686H73tfosgzIItSxl+pVcsp5tbD8zNDJKXd/+kQp2qRLVsjRq
ZhLPPaG+lN6IrnBav5tHH7n2phIVFQI2r1QTr7Fny62/v7KPX21c+Ey7VAxF
N2RZLF5rkea6elVrD2D6HvuFmYWiWqTKUhQyVScm2itUaSlLdX4oyBCbkVTR
x0fuCVeuuafahM2p/Z2Cen5rc6Zqmmxj0mQeH9isJ4om6Eosda+dzMev9n1N
p7W2ykLzPT7Gt8a09raqttYYig14XYGfi7aV1MdPqmYClrqCeRZdFpN2acDS
etmpfTvTdeKGpeoXWxMx2KnGc2D10UW6tp9CXWTE8vG6zfjVOpaaCe9hZkd3
KkujKwz3OOoi1qe8SnZRRqQRHV1SWaql9dwJpFgMWApr3Dr40v7OJW6gPzLV
9WGE08o5Y165sBSd9IJuJDajpMvSDyxVvz6LpfhmcSL6vqF8L6/KLLV26cdg
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
glmllqX/D16WXE4=
                 "], {{0, 317}, {452, 0}}, {0, 255},
                 ColorFunction->RGBColor],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "RGB", ImageResolution -> {144, 144}, 
                 Interleaving -> True, MetaInformation -> 
                 Association[
                  "Exif" -> Association[
                    "XResolution" -> 144, "YResolution" -> 144, 
                    "ResolutionUnit" -> "inch", "Software" -> 
                    "paint.net 4.0.19"]]],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{452, 317},
               PlotRange->{{0, 452}, {0, 317}}], ",", 
              RowBox[{"{", 
               RowBox[{"Center", ",", "525"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Center", ",", "Center"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"500", ",", "500"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Make Board\>\"", ",", "Bold", ",", 
                  RowBox[{"FontSize", "\[Rule]", "30"}], ",", "Red", ",", 
                  RowBox[{
                  "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], "]"}],
                 ",", 
                RowBox[{
                 RowBox[{"NotebookClose", "[", " ", 
                  RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "The", " ", "make", " ", "board", " ", "button", " ", 
                   "asks", " ", "for", " ", "deminsions", " ", "and", " ", 
                   "then", " ", "it", " ", "creates", " ", "that", " ", 
                   "board"}], "*)"}], "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"CreateWindow", "[", 
                  RowBox[{
                   RowBox[{"DialogNotebook", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"TextCell", "[", 
                    RowBox[{"\"\<Rows: \>\"", ",", "25"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"InputField", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "numR", "]"}], ",", "Number", ",", 
                    RowBox[{"FieldSize", "\[Rule]", "10"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"TextCell", "[", 
                    RowBox[{"\"\<Cols: \>\"", ",", "25"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"InputField", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "numC", "]"}], ",", "Number", ",", 
                    RowBox[{"FieldSize", "\[Rule]", "10"}]}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ChoiceButtons", "[", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{"confirm", " ", "button"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"makeBoardScreen", "[", 
                    RowBox[{"{", 
                    RowBox[{"numR", ",", "numC"}], "}"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"DialogReturn", "[", "]"}], ";"}], 
                    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
                    "]"}]}], "}"}], ",", 
                    RowBox[{
                    "WindowTitle", "\[Rule]", "\"\<Board Dimensions\>\""}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"WindowSize", "\[Rule]", "All"}]}], "]"}], ";"}], 
                "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"200", ",", "80"}], "}"}]}], ",", 
                RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"350", ",", "275"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Play Game\>\"", ",", "Bold", ",", 
                  RowBox[{"FontSize", "\[Rule]", "35"}], ",", 
                  RowBox[{
                  "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], "]"}],
                 ",", 
                RowBox[{
                 RowBox[{"NotebookClose", "[", " ", 
                  RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", " ", 
                 RowBox[{"playGameScreen", "[", "]"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "play", " ", "game", " ", "just", " ", "calls", " ", "the", 
                " ", "function", " ", "playGameScreen"}], "*)"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"Center", ",", "275"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<AI Solver\>\"", ",", "Blue", ",", "Bold", ",", 
                  RowBox[{"FontSize", "\[Rule]", "35"}], ",", 
                  RowBox[{
                  "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], "]"}],
                 ",", 
                RowBox[{
                 RowBox[{"NotebookClose", "[", " ", 
                  RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", " ", 
                 RowBox[{"AISolverScreen", "[", "]"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "AI", " ", "solver", " ", "isnt", " ", "complete", " ", "yet", 
                " ", "but", " ", "it", " ", "calls", " ", "the", " ", 
                "function", " ", "AISolverScreen"}], "*)"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"850", ",", "275"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Settings\>\"", ",", "Bold", ",", "Orange", ",", 
                  RowBox[{"FontSize", "\[Rule]", "35"}], ",", 
                  RowBox[{
                  "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], "]"}],
                 ",", 
                RowBox[{
                 RowBox[{"NotebookClose", "[", " ", 
                  RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", 
                 RowBox[{"settingScreen", "[", "]"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"200", ",", "80"}], "}"}]}], ",", 
                RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Settings", " ", "brings", " ", "it", " ", "to", " ", "the", 
                " ", "settings", " ", "screen", " ", "to", " ", "adjust", " ",
                 "what", " ", "you", " ", "want"}], "*)"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"475", ",", "175"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<High-Scores\>\"", ",", "Bold", ",", 
                  RowBox[{"Darker", "[", "Orange", "]"}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "30"}], ",", 
                  RowBox[{
                  "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], "]"}],
                 ",", 
                RowBox[{
                 RowBox[{"NotebookClose", "[", " ", 
                  RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", 
                 RowBox[{"scoreScreen", "[", "]"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"200", ",", "80"}], "}"}]}], ",", 
                RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Settings", " ", "brings", " ", "it", " ", "to", " ", "the", 
                " ", "settings", " ", "screen", " ", "to", " ", "adjust", " ",
                 "what", " ", "you", " ", "want"}], "*)"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"725", ",", "175"}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"ADD", " ", "Best", " ", "Scores", " ", "button"}], " ", 
            "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1200"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "800"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1200", ",", "800"}], "}"}]}]}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"WindowTitle", "\[Rule]", "\"\<Minesweeper\>\""}], ",", 
        RowBox[{"Background", "\[Rule]", "LightBlue"}], ",", 
        RowBox[{"WindowMargins", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Automatic", ",", " ", "Automatic"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", " ", "Automatic"}], "}"}]}], "}"}]}], 
        ",", " ", 
        RowBox[{"WindowSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1200", ",", "800"}], "}"}]}]}], " ", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\[IndentingNewLine]", 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.728650984492378*^9, 3.7286509891368017`*^9}, {
   3.7286510804070644`*^9, 3.728651125824997*^9}, {3.728651611475852*^9, 
   3.72865163184548*^9}, {3.728651668129918*^9, 3.7286516905988684`*^9}, {
   3.7286521440628753`*^9, 3.728652152968508*^9}, {3.7286521875892644`*^9, 
   3.728652216864953*^9}, {3.7286523062589636`*^9, 3.728652580519998*^9}, {
   3.7286533174427333`*^9, 3.7286533192736297`*^9}, {3.7286534537012186`*^9, 
   3.728653476130796*^9}, {3.7286535856830177`*^9, 3.7286536081246843`*^9}, {
   3.728654021888423*^9, 3.728654043415924*^9}, {3.731119135460784*^9, 
   3.731119211156506*^9}, {3.7311192857991247`*^9, 3.7311193144492025`*^9}, {
   3.7311194250722837`*^9, 3.731119467384427*^9}, {3.731119505402889*^9, 
   3.7311199739709926`*^9}, {3.731120030676564*^9, 3.7311201626771097`*^9}, {
   3.7311201943277483`*^9, 3.7311202024158063`*^9}, {3.7311202630811005`*^9, 
   3.7311203681499767`*^9}, {3.7311204461076193`*^9, 
   3.7311204483916483`*^9}, {3.731120588820405*^9, 3.731120600488538*^9}, {
   3.7311208593422365`*^9, 3.731120889162426*^9}, {3.7312399165748434`*^9, 
   3.731240001644846*^9}, {3.7312400688429365`*^9, 3.7312400938724475`*^9}, {
   3.7312411883567557`*^9, 3.731241220919143*^9}, {3.7312412592744093`*^9, 
   3.731241371320558*^9}, {3.7312414103999133`*^9, 3.731241535664418*^9}, {
   3.731241716649181*^9, 3.7312417378876443`*^9}, {3.7312422154989815`*^9, 
   3.731242224017807*^9}, {3.7312423794719973`*^9, 3.7312424318500404`*^9}, {
   3.731246940566818*^9, 3.7312469653649178`*^9}, {3.7312470131433163`*^9, 
   3.7312470138918023`*^9}, {3.7312470591779547`*^9, 3.7312470611469*^9}, {
   3.731247212118985*^9, 3.7312472370439425`*^9}, {3.7312472851986036`*^9, 
   3.731247308140439*^9}, {3.7312473565327377`*^9, 3.7312473629397106`*^9}, {
   3.7312473946744595`*^9, 3.7312473958933463`*^9}, 3.7312570366363554`*^9, {
   3.7312570667628565`*^9, 3.7312571011396627`*^9}, {3.731257514565099*^9, 
   3.731257518126826*^9}, {3.731257586763342*^9, 3.7312576262487593`*^9}, {
   3.731257680168889*^9, 3.7312576813565655`*^9}, {3.7312580884638824`*^9, 
   3.7312581308862824`*^9}, {3.7312583536316037`*^9, 
   3.7312584152512007`*^9}, {3.7312584514239144`*^9, 
   3.7312584522497025`*^9}, {3.7312584857614765`*^9, 3.731258493236253*^9}, {
   3.7312587045959244`*^9, 3.731258803146616*^9}, {3.731258838456583*^9, 
   3.7312588908493695`*^9}, {3.731258942915373*^9, 3.7312589522668023`*^9}, {
   3.731258999044484*^9, 3.7312591062645526`*^9}, {3.7312942438519087`*^9, 
   3.7312942451359615`*^9}, {3.731294704631956*^9, 3.7312947398163905`*^9}, {
   3.7312949687752504`*^9, 3.731294984727456*^9}, {3.731295046684181*^9, 
   3.731295112032939*^9}, {3.731295144561154*^9, 3.731295238137729*^9}, {
   3.731295587450362*^9, 3.731295589338382*^9}, {3.7312957721310096`*^9, 
   3.7312958384362755`*^9}, {3.731295888625245*^9, 3.731295901165485*^9}, {
   3.731295942766238*^9, 3.7312959672947006`*^9}, {3.731296011219519*^9, 
   3.73129603427195*^9}, {3.7312961660984592`*^9, 3.731296227623581*^9}, {
   3.7312963416571507`*^9, 3.731296405079689*^9}, {3.731296535413302*^9, 
   3.731296648614742*^9}, {3.7312967298238745`*^9, 3.7312967422520266`*^9}, {
   3.7312967754044724`*^9, 3.731296786712577*^9}, {3.731296824953089*^9, 
   3.7312968439012833`*^9}, {3.7312969180582266`*^9, 
   3.7312969228343034`*^9}, {3.731296999831213*^9, 3.7312970013752375`*^9}, {
   3.731297085348274*^9, 3.731297134228877*^9}, {3.73129719036557*^9, 
   3.73129720795782*^9}, {3.731297239398179*^9, 3.731297270854577*^9}, {
   3.7312974156787815`*^9, 3.7312974206268406`*^9}, {3.7312975148040075`*^9, 
   3.73129751899206*^9}, {3.731297722678117*^9, 3.731297773418565*^9}, {
   3.731297850439062*^9, 3.73129793333152*^9}, {3.7312980149800086`*^9, 
   3.731298015128014*^9}, {3.7312981962420187`*^9, 3.731298244030648*^9}, {
   3.731298323399603*^9, 3.731298360820061*^9}, {3.731298511592634*^9, 
   3.731298512212679*^9}, {3.731298555177172*^9, 3.731298576885442*^9}, {
   3.7312986379644537`*^9, 3.73129864343248*^9}, {3.7313389062156115`*^9, 
   3.7313389204315643`*^9}, {3.731343031443264*^9, 3.7313430474307547`*^9}, {
   3.7313446053371363`*^9, 3.7313446502089767`*^9}, {3.7313447143963547`*^9, 
   3.7313447362573595`*^9}, {3.731344767525212*^9, 3.731344769850978*^9}, {
   3.7313449662774487`*^9, 3.731345007157504*^9}, {3.7313452062165995`*^9, 
   3.731345226835405*^9}, 3.7313537738044453`*^9, {3.731357455262526*^9, 
   3.7313575890623455`*^9}, {3.731357624904622*^9, 3.7313576541844254`*^9}, {
   3.731357774613328*^9, 3.7313578079456224`*^9}, {3.7313578707574587`*^9, 
   3.731358016722247*^9}, {3.731358066486493*^9, 3.731358083461049*^9}, {
   3.731358129534443*^9, 3.7313582781407022`*^9}, {3.7313583474779477`*^9, 
   3.731358450186017*^9}, {3.731358521968072*^9, 3.7313585702182903`*^9}, {
   3.731358604592389*^9, 3.731358684855487*^9}, {3.7313587215348396`*^9, 
   3.7313587370578775`*^9}, {3.731358890022902*^9, 3.7313589165387235`*^9}, {
   3.731358958329687*^9, 3.7313590709846015`*^9}, {3.731359147614979*^9, 
   3.731359175172415*^9}, {3.7313592114406786`*^9, 3.7313592502814894`*^9}, {
   3.731359289158629*^9, 3.731359359606877*^9}, {3.731359435113255*^9, 
   3.731359482299917*^9}, {3.731359738975008*^9, 3.731359743928322*^9}, {
   3.7313598295036345`*^9, 3.731359833737088*^9}, {3.7313600014960403`*^9, 
   3.731360071965391*^9}, {3.7313601453226414`*^9, 3.7313601861151867`*^9}, {
   3.7313602244862823`*^9, 3.7313602349377995`*^9}, {3.7313603697923765`*^9, 
   3.7313603888681574`*^9}, {3.731360450091547*^9, 3.7313604907978225`*^9}, {
   3.7313608579150248`*^9, 3.7313609267288675`*^9}, {3.7313609600006294`*^9, 
   3.731360961313278*^9}, {3.7313609916156025`*^9, 3.7313611167131195`*^9}, {
   3.731361173757638*^9, 3.731361237608659*^9}, {3.731361283630088*^9, 
   3.7313613151043615`*^9}, {3.731361373453093*^9, 3.7313614757822123`*^9}, {
   3.731361512320469*^9, 3.7313615654053354`*^9}, {3.7313616047173047`*^9, 
   3.7313616579441314`*^9}, {3.7313617065271873`*^9, 3.731361719254882*^9}, {
   3.7313617572790656`*^9, 3.7313618094477987`*^9}, {3.731361843781067*^9, 
   3.7313618472248335`*^9}, {3.7313618858337083`*^9, 3.731361923322585*^9}, {
   3.7313619730701256`*^9, 3.7313620373154216`*^9}, {3.731362135922155*^9, 
   3.731362162635754*^9}, 3.7313627418055077`*^9, {3.7313627820749073`*^9, 
   3.7313628009058547`*^9}, {3.731363195619339*^9, 3.7313631990658236`*^9}, {
   3.7313633165017505`*^9, 3.731363317142413*^9}, {3.731363360014741*^9, 
   3.73136338042324*^9}, {3.7313639294811897`*^9, 3.7313641050872593`*^9}, {
   3.731364208342381*^9, 3.731364249484578*^9}, 3.7313653878015013`*^9, {
   3.731367444035567*^9, 3.7313674448785543`*^9}, {3.7313674775882745`*^9, 
   3.7313674776706963`*^9}, {3.731369656785567*^9, 3.731369691693612*^9}, {
   3.7313699382732487`*^9, 3.731369942242857*^9}, {3.7313700628304234`*^9, 
   3.7313701127858686`*^9}, {3.7313701881297274`*^9, 3.731370346791729*^9}, {
   3.731370378642832*^9, 3.7313703814122334`*^9}, {3.7313704383954897`*^9, 
   3.731370519928363*^9}, {3.7313705963625617`*^9, 3.7313706833730764`*^9}, {
   3.731372159453668*^9, 3.7313722424423018`*^9}, 3.731372590761057*^9, {
   3.731375119036372*^9, 3.7313751309566307`*^9}, {3.7313751652533894`*^9, 
   3.7313752055159965`*^9}, 3.731375241300353*^9, {3.7313753620824533`*^9, 
   3.7313753736285915`*^9}, {3.73137540613035*^9, 3.731375420087004*^9}, {
   3.7313755333842497`*^9, 3.731375533665535*^9}, 3.73137599879688*^9, {
   3.731378733450918*^9, 3.731378756792944*^9}, {3.7313790358255434`*^9, 
   3.7313790375691757`*^9}, {3.7313791424957323`*^9, 3.731379204127262*^9}, {
   3.7313793085753946`*^9, 3.731379326337754*^9}, {3.731379753238009*^9, 
   3.73137977152168*^9}, {3.7313798185278263`*^9, 3.7313798397839084`*^9}, {
   3.731379881072731*^9, 3.7313799303994837`*^9}, {3.7313807531698227`*^9, 
   3.73138075650419*^9}, {3.731380792989094*^9, 3.731380796301778*^9}, {
   3.731381537338192*^9, 3.7313815467959595`*^9}, {3.731381576896776*^9, 
   3.731381602075914*^9}, {3.7314054517476273`*^9, 3.731405483556028*^9}, {
   3.7314055398247194`*^9, 3.7314055495808773`*^9}, {3.7314057547107506`*^9, 
   3.7314057692853084`*^9}, {3.7314059924568677`*^9, 
   3.7314060014173746`*^9}, {3.731412990965398*^9, 3.731413008122761*^9}, {
   3.731414753718604*^9, 3.7314147555988717`*^9}, 3.7314148334404907`*^9, {
   3.7314400605319767`*^9, 3.731440095679976*^9}, 3.7314401765976763`*^9, {
   3.731440398901453*^9, 3.7314404404714756`*^9}, {3.731469083370991*^9, 
   3.7314690946536174`*^9}, {3.7314714550562563`*^9, 3.731471455931363*^9}, {
   3.7314725587616014`*^9, 3.7314725608868113`*^9}, 3.731473002342781*^9, {
   3.731845923447528*^9, 3.7318459235725164`*^9}, {3.731846054874259*^9, 
   3.7318461796989126`*^9}, {3.731846211638499*^9, 3.731846231038602*^9}, {
   3.7318470379194765`*^9, 3.73184708661878*^9}, {3.731847154273157*^9, 
   3.7318472668610954`*^9}, {3.731853119963628*^9, 3.731853260831927*^9}, {
   3.7318534203646903`*^9, 3.731853550543564*^9}, {3.731853698893798*^9, 
   3.7318537612636347`*^9}, {3.7318538645583553`*^9, 
   3.7318538653084707`*^9}, {3.73185389630755*^9, 3.7318539097502956`*^9}, {
   3.7318540238046317`*^9, 3.7318540599995966`*^9}, {3.731854109089218*^9, 
   3.731854248535334*^9}, {3.731854511431429*^9, 3.7318547506617413`*^9}, {
   3.731854780668482*^9, 3.731854782278049*^9}, {3.731865135098883*^9, 
   3.7318653400389524`*^9}, {3.731865644808835*^9, 3.7318656783700047`*^9}, {
   3.7318657144989014`*^9, 3.731865831267496*^9}, {3.731866932435009*^9, 
   3.7318669670039062`*^9}, {3.731867011133568*^9, 3.731867011565876*^9}, {
   3.73187661253132*^9, 3.7318766558537493`*^9}, {3.7318769378075223`*^9, 
   3.7318769634580154`*^9}, {3.7318771241917477`*^9, 3.731877127304488*^9}, {
   3.7318826626460915`*^9, 3.731882668237235*^9}, {3.7318827549598*^9, 
   3.731882791923171*^9}, {3.731888686868372*^9, 3.7318887052474146`*^9}, {
   3.731888781790717*^9, 3.7318888302849913`*^9}, {3.7318888773769207`*^9, 
   3.7318889072472005`*^9}, {3.7318890143469753`*^9, 
   3.7318890294819307`*^9}, {3.731889208373373*^9, 3.7318893407056837`*^9}, {
   3.7318893894104185`*^9, 3.7318896405580025`*^9}, {3.7318897286535535`*^9, 
   3.7318898544299116`*^9}, {3.7318899371758776`*^9, 3.731889944754466*^9}, {
   3.7318903292435846`*^9, 3.731890407622876*^9}, {3.7318904398925796`*^9, 
   3.731890568868097*^9}, {3.731890615202138*^9, 3.731891064011232*^9}, {
   3.7318911107524824`*^9, 3.731891112987002*^9}, {3.7318911526312633`*^9, 
   3.731891175012256*^9}, {3.731891242990303*^9, 3.731891337578498*^9}, {
   3.731891379721876*^9, 3.731891627797306*^9}, {3.7318916847612333`*^9, 
   3.7318916947578707`*^9}, {3.7318917980497203`*^9, 3.731891863707821*^9}, {
   3.731956733694108*^9, 3.731956734303562*^9}, {3.7319691444805527`*^9, 
   3.73196915048947*^9}, {3.731969196836609*^9, 3.731969273229711*^9}, {
   3.731969310308354*^9, 3.731969331760366*^9}, {3.7319694408535786`*^9, 
   3.7319694562408595`*^9}, {3.731969515873*^9, 3.731969527593176*^9}, {
   3.731969602190462*^9, 3.7319696106182184`*^9}, {3.7319696592372847`*^9, 
   3.7319696611281137`*^9}, {3.731969753852504*^9, 3.731969802088394*^9}, {
   3.7322261572885284`*^9, 3.7322263993414035`*^9}, {3.7322265496221704`*^9, 
   3.7322265568193707`*^9}, {3.732242996307522*^9, 3.73224299961442*^9}, {
   3.73224303370872*^9, 3.7322430477583036`*^9}, {3.7322432217411323`*^9, 
   3.7322432245616727`*^9}, {3.732243294076372*^9, 3.732243299661297*^9}, {
   3.7322436364229755`*^9, 3.7322436613515453`*^9}, {3.732246320853758*^9, 
   3.7322463413242836`*^9}, {3.7334293958077927`*^9, 3.733429410474862*^9}, {
   3.7334294475728045`*^9, 3.733429482364727*^9}, {3.73342994248913*^9, 
   3.733430116188177*^9}, {3.7334301462769227`*^9, 3.7334302918485613`*^9}, {
   3.734731181363194*^9, 3.734731186163311*^9}, {3.7347312265712185`*^9, 
   3.734731460552289*^9}, {3.73473166556711*^9, 3.734731672261964*^9}, {
   3.7348121896285725`*^9, 3.7348121936166444`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"1c52c04d-9ae9-4e66-8d4a-cc962b93615d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Interface Start-Up ", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.728650984492378*^9, 3.7286509891368017`*^9}, {
   3.7286510804070644`*^9, 3.728651125824997*^9}, {3.728651611475852*^9, 
   3.72865163184548*^9}, {3.728651668129918*^9, 3.7286516905988684`*^9}, {
   3.7286521440628753`*^9, 3.728652152968508*^9}, {3.7286521875892644`*^9, 
   3.728652216864953*^9}, {3.7286523062589636`*^9, 3.728652580519998*^9}, {
   3.7286533174427333`*^9, 3.7286533192736297`*^9}, {3.7286534537012186`*^9, 
   3.728653476130796*^9}, {3.7286535856830177`*^9, 3.7286536081246843`*^9}, {
   3.728654021888423*^9, 3.728654043415924*^9}, {3.731119135460784*^9, 
   3.731119211156506*^9}, {3.7311192857991247`*^9, 3.7311193144492025`*^9}, {
   3.7311194250722837`*^9, 3.731119467384427*^9}, {3.731119505402889*^9, 
   3.7311199739709926`*^9}, {3.731120030676564*^9, 3.7311201626771097`*^9}, {
   3.7311201943277483`*^9, 3.7311202024158063`*^9}, {3.7311202630811005`*^9, 
   3.7311203681499767`*^9}, {3.7311204461076193`*^9, 
   3.7311204483916483`*^9}, {3.731120588820405*^9, 3.731120600488538*^9}, {
   3.7311208593422365`*^9, 3.731120889162426*^9}, {3.7312399165748434`*^9, 
   3.731240001644846*^9}, {3.7312400688429365`*^9, 3.7312400938724475`*^9}, {
   3.7312411883567557`*^9, 3.731241220919143*^9}, {3.7312412592744093`*^9, 
   3.731241371320558*^9}, {3.7312414103999133`*^9, 3.731241535664418*^9}, {
   3.731241716649181*^9, 3.7312417378876443`*^9}, {3.7312422154989815`*^9, 
   3.731242224017807*^9}, {3.7312423794719973`*^9, 3.7312424318500404`*^9}, {
   3.731246940566818*^9, 3.7312469653649178`*^9}, {3.7312470131433163`*^9, 
   3.7312470138918023`*^9}, {3.7312470591779547`*^9, 3.7312470611469*^9}, {
   3.731247212118985*^9, 3.7312472370439425`*^9}, {3.7312472851986036`*^9, 
   3.731247308140439*^9}, {3.7312473565327377`*^9, 3.7312473629397106`*^9}, {
   3.7312473946744595`*^9, 3.7312473958933463`*^9}, 3.7312570366363554`*^9, {
   3.7312570667628565`*^9, 3.7312571011396627`*^9}, {3.731257514565099*^9, 
   3.731257518126826*^9}, {3.731257586763342*^9, 3.7312576262487593`*^9}, {
   3.731257680168889*^9, 3.7312576813565655`*^9}, {3.7312580884638824`*^9, 
   3.7312581308862824`*^9}, {3.7312583536316037`*^9, 
   3.7312584152512007`*^9}, {3.7312584514239144`*^9, 
   3.7312584522497025`*^9}, {3.7312584857614765`*^9, 3.731258493236253*^9}, {
   3.7312587045959244`*^9, 3.731258803146616*^9}, {3.731258838456583*^9, 
   3.7312588908493695`*^9}, {3.731258942915373*^9, 3.7312589522668023`*^9}, {
   3.731258999044484*^9, 3.7312591062645526`*^9}, {3.7312942438519087`*^9, 
   3.7312942451359615`*^9}, {3.731294704631956*^9, 3.7312947398163905`*^9}, {
   3.7312949687752504`*^9, 3.731294984727456*^9}, {3.731295046684181*^9, 
   3.731295112032939*^9}, {3.731295144561154*^9, 3.731295238137729*^9}, {
   3.731295587450362*^9, 3.731295589338382*^9}, {3.7312957721310096`*^9, 
   3.7312958384362755`*^9}, {3.731295888625245*^9, 3.731295901165485*^9}, {
   3.731295942766238*^9, 3.7312959672947006`*^9}, {3.731296011219519*^9, 
   3.73129603427195*^9}, {3.7312961660984592`*^9, 3.731296227623581*^9}, {
   3.7312963416571507`*^9, 3.731296405079689*^9}, {3.731296535413302*^9, 
   3.731296648614742*^9}, {3.7312967298238745`*^9, 3.7312967422520266`*^9}, {
   3.7312967754044724`*^9, 3.731296786712577*^9}, {3.731296824953089*^9, 
   3.7312968439012833`*^9}, {3.7312969180582266`*^9, 
   3.7312969228343034`*^9}, {3.731296999831213*^9, 3.7312970013752375`*^9}, {
   3.731297085348274*^9, 3.731297134228877*^9}, {3.73129719036557*^9, 
   3.73129720795782*^9}, {3.731297239398179*^9, 3.731297270854577*^9}, {
   3.7312974156787815`*^9, 3.7312974206268406`*^9}, {3.7312975148040075`*^9, 
   3.73129751899206*^9}, {3.731297722678117*^9, 3.731297773418565*^9}, {
   3.731297850439062*^9, 3.73129793333152*^9}, {3.7312980149800086`*^9, 
   3.731298015128014*^9}, {3.7312981962420187`*^9, 3.731298244030648*^9}, {
   3.731298323399603*^9, 3.731298360820061*^9}, {3.731298511592634*^9, 
   3.731298512212679*^9}, {3.731298555177172*^9, 3.731298576885442*^9}, {
   3.7312986379644537`*^9, 3.73129864343248*^9}, {3.7313389062156115`*^9, 
   3.7313389204315643`*^9}, {3.731343031443264*^9, 3.7313430474307547`*^9}, {
   3.7313446053371363`*^9, 3.7313446502089767`*^9}, {3.7313447143963547`*^9, 
   3.7313447362573595`*^9}, {3.731344767525212*^9, 3.731344769850978*^9}, {
   3.7313449662774487`*^9, 3.731345007157504*^9}, {3.7313452062165995`*^9, 
   3.731345226835405*^9}, 3.7313537738044453`*^9, {3.731357455262526*^9, 
   3.7313575890623455`*^9}, {3.731357624904622*^9, 3.7313576541844254`*^9}, {
   3.731357774613328*^9, 3.7313578079456224`*^9}, {3.7313578707574587`*^9, 
   3.731358016722247*^9}, {3.731358066486493*^9, 3.731358083461049*^9}, {
   3.731358129534443*^9, 3.7313582781407022`*^9}, {3.7313583474779477`*^9, 
   3.731358450186017*^9}, {3.731358521968072*^9, 3.7313585702182903`*^9}, {
   3.731358604592389*^9, 3.731358684855487*^9}, {3.7313587215348396`*^9, 
   3.7313587370578775`*^9}, {3.731358890022902*^9, 3.7313589165387235`*^9}, {
   3.731358958329687*^9, 3.7313590709846015`*^9}, {3.731359147614979*^9, 
   3.731359175172415*^9}, {3.7313592114406786`*^9, 3.7313592502814894`*^9}, {
   3.731359289158629*^9, 3.731359359606877*^9}, {3.731359435113255*^9, 
   3.731359482299917*^9}, {3.731359738975008*^9, 3.731359743928322*^9}, {
   3.7313598295036345`*^9, 3.731359833737088*^9}, {3.7313600014960403`*^9, 
   3.731360071965391*^9}, {3.7313601453226414`*^9, 3.7313601861151867`*^9}, {
   3.7313602244862823`*^9, 3.7313602349377995`*^9}, {3.7313603697923765`*^9, 
   3.7313603888681574`*^9}, {3.731360450091547*^9, 3.7313604907978225`*^9}, {
   3.7313608579150248`*^9, 3.7313609267288675`*^9}, {3.7313609600006294`*^9, 
   3.731360961313278*^9}, {3.7313609916156025`*^9, 3.7313611167131195`*^9}, {
   3.731361173757638*^9, 3.731361237608659*^9}, {3.731361283630088*^9, 
   3.7313613151043615`*^9}, {3.731361373453093*^9, 3.7313614757822123`*^9}, {
   3.731361512320469*^9, 3.7313615654053354`*^9}, {3.7313616047173047`*^9, 
   3.7313616579441314`*^9}, {3.7313617065271873`*^9, 3.731361719254882*^9}, {
   3.7313617572790656`*^9, 3.7313618094477987`*^9}, {3.731361843781067*^9, 
   3.7313618472248335`*^9}, {3.7313618858337083`*^9, 3.731361923322585*^9}, {
   3.7313619730701256`*^9, 3.7313620373154216`*^9}, {3.731362135922155*^9, 
   3.731362162635754*^9}, 3.7313627418055077`*^9, {3.7313627820749073`*^9, 
   3.7313628009058547`*^9}, {3.731363195619339*^9, 3.7313631990658236`*^9}, {
   3.7313633165017505`*^9, 3.731363317142413*^9}, {3.731363360014741*^9, 
   3.73136338042324*^9}, {3.7313639294811897`*^9, 3.7313641050872593`*^9}, {
   3.731364208342381*^9, 3.731364249484578*^9}, 3.7313653878015013`*^9, {
   3.731367444035567*^9, 3.7313674448785543`*^9}, {3.7313674775882745`*^9, 
   3.7313674776706963`*^9}, {3.731369656785567*^9, 3.731369691693612*^9}, {
   3.7313699382732487`*^9, 3.731369942242857*^9}, {3.7313700628304234`*^9, 
   3.7313701127858686`*^9}, {3.7313701881297274`*^9, 3.731370346791729*^9}, {
   3.731370378642832*^9, 3.7313703814122334`*^9}, {3.7313704383954897`*^9, 
   3.731370519928363*^9}, {3.7313705963625617`*^9, 3.7313706833730764`*^9}, {
   3.731372159453668*^9, 3.7313722424423018`*^9}, 3.731372590761057*^9, {
   3.731375119036372*^9, 3.7313751309566307`*^9}, {3.7313751652533894`*^9, 
   3.7313752055159965`*^9}, 3.731375241300353*^9, {3.7313753620824533`*^9, 
   3.7313753736285915`*^9}, {3.73137540613035*^9, 3.731375420087004*^9}, {
   3.7313755333842497`*^9, 3.731375533665535*^9}, 3.73137599879688*^9, {
   3.731378733450918*^9, 3.731378756792944*^9}, {3.7313790358255434`*^9, 
   3.7313790375691757`*^9}, {3.7313791424957323`*^9, 3.731379204127262*^9}, {
   3.7313793085753946`*^9, 3.731379326337754*^9}, {3.731379753238009*^9, 
   3.73137977152168*^9}, {3.7313798185278263`*^9, 3.7313798397839084`*^9}, {
   3.731379881072731*^9, 3.7313799303994837`*^9}, {3.7313807531698227`*^9, 
   3.73138075650419*^9}, {3.731380792989094*^9, 3.731380796301778*^9}, {
   3.731381537338192*^9, 3.7313815467959595`*^9}, {3.731381576896776*^9, 
   3.731381602075914*^9}, {3.7314054517476273`*^9, 3.731405483556028*^9}, {
   3.7314055398247194`*^9, 3.7314055495808773`*^9}, {3.7314057547107506`*^9, 
   3.7314057692853084`*^9}, {3.7314059924568677`*^9, 
   3.7314060014173746`*^9}, {3.731412990965398*^9, 3.731413008122761*^9}, {
   3.731414753718604*^9, 3.7314147555988717`*^9}, 3.7314148334404907`*^9, {
   3.7314400605319767`*^9, 3.731440095679976*^9}, 3.7314401765976763`*^9, {
   3.731440398901453*^9, 3.7314404404714756`*^9}, {3.731469083370991*^9, 
   3.7314690946536174`*^9}, {3.7314714550562563`*^9, 3.731471455931363*^9}, {
   3.7314725587616014`*^9, 3.7314725608868113`*^9}, 3.731473002342781*^9, {
   3.731845923447528*^9, 3.7318459235725164`*^9}, {3.731846054874259*^9, 
   3.7318461796989126`*^9}, {3.731846211638499*^9, 3.731846231038602*^9}, {
   3.7318470379194765`*^9, 3.73184708661878*^9}, {3.731847154273157*^9, 
   3.7318472668610954`*^9}, {3.731853119963628*^9, 3.731853260831927*^9}, {
   3.7318534203646903`*^9, 3.731853550543564*^9}, {3.731853698893798*^9, 
   3.7318537612636347`*^9}, {3.7318538645583553`*^9, 
   3.7318538653084707`*^9}, {3.73185389630755*^9, 3.7318539097502956`*^9}, {
   3.7318540238046317`*^9, 3.7318540599995966`*^9}, {3.731854109089218*^9, 
   3.731854248535334*^9}, {3.731854511431429*^9, 3.7318547506617413`*^9}, {
   3.731854780668482*^9, 3.731854782278049*^9}, {3.731865135098883*^9, 
   3.7318653400389524`*^9}, {3.731865644808835*^9, 3.7318656783700047`*^9}, {
   3.7318657144989014`*^9, 3.731865831267496*^9}, {3.731866932435009*^9, 
   3.7318669670039062`*^9}, {3.731867011133568*^9, 3.731867011565876*^9}, {
   3.73187661253132*^9, 3.7318766558537493`*^9}, {3.7318769378075223`*^9, 
   3.7318769634580154`*^9}, {3.7318771241917477`*^9, 3.731877127304488*^9}, {
   3.7318826626460915`*^9, 3.731882668237235*^9}, {3.7318827549598*^9, 
   3.731882791923171*^9}, {3.731888686868372*^9, 3.7318887052474146`*^9}, {
   3.731888781790717*^9, 3.7318888302849913`*^9}, {3.7318888773769207`*^9, 
   3.7318889072472005`*^9}, {3.7318890143469753`*^9, 
   3.7318890294819307`*^9}, {3.731889208373373*^9, 3.7318893407056837`*^9}, {
   3.7318893894104185`*^9, 3.7318896405580025`*^9}, {3.7318897286535535`*^9, 
   3.7318898544299116`*^9}, {3.7318899371758776`*^9, 3.731889944754466*^9}, {
   3.7318903292435846`*^9, 3.731890407622876*^9}, {3.7318904398925796`*^9, 
   3.731890568868097*^9}, {3.731890615202138*^9, 3.731891064011232*^9}, {
   3.7318911107524824`*^9, 3.731891112987002*^9}, {3.7318911526312633`*^9, 
   3.731891175012256*^9}, {3.731891242990303*^9, 3.731891337578498*^9}, {
   3.731891379721876*^9, 3.731891627797306*^9}, {3.7318916847612333`*^9, 
   3.7318916947578707`*^9}, {3.7318917980497203`*^9, 3.731891822751737*^9}, {
   3.731891918921174*^9, 3.731891962214615*^9}, 3.7318924782918243`*^9, {
   3.731892587478901*^9, 3.7318926257281103`*^9}, {3.731892885443174*^9, 
   3.7318928875086756`*^9}, 3.731950389109121*^9, {3.7319504610172386`*^9, 
   3.7319504759918814`*^9}, {3.73195672234784*^9, 3.731956723113597*^9}, {
   3.7322266908886223`*^9, 3.7322267910778093`*^9}, {3.7322270010876665`*^9, 
   3.7322270363233795`*^9}, {3.732228223109207*^9, 3.73222828109009*^9}, {
   3.7322288986218634`*^9, 3.7322289038527155`*^9}, {3.732229958610854*^9, 
   3.7322299907954865`*^9}, {3.732230376266164*^9, 3.7322304074400177`*^9}, {
   3.7322305604094906`*^9, 3.732230594213447*^9}, {3.732230713087711*^9, 
   3.7322307607263412`*^9}, {3.7322308006264997`*^9, 3.732230822254033*^9}, {
   3.732231007461795*^9, 3.732231056142275*^9}, {3.732231167177111*^9, 
   3.7322311823999987`*^9}, {3.732231221596258*^9, 3.732231244733398*^9}, {
   3.7322436712700696`*^9, 
   3.73224379127067*^9}},ExpressionUUID->"5c4ef99c-f268-42d8-ae75-\
58602ca60b7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Out", " ", "sources", " ", "to", " ", "different", " ", "parts", " ", 
        "of", " ", "the", " ", "program"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"numRowSettings", "=", "10"}], ",", "\[IndentingNewLine]", 
       RowBox[{"numColSettings", "=", "10"}], ",", "\[IndentingNewLine]", 
       RowBox[{"musicSettings", "=", "50"}], ",", "\[IndentingNewLine]", 
       RowBox[{"soundSettings", "=", "50"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"notClickedButtonColorSettings", "="}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"clickedbuttonColorSettings", "="}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Makes", " ", "it", " ", "go", " ", "to", " ", "the", " ", "function", 
       " ", "title", " ", "screen"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"makeTitleScreen", "[", "]"}], " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "scoFile", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"SetDirectory", "[", 
           RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"FileExistsQ", "[", "\"\<scores.txt\>\"", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"scoFile", "=", 
              RowBox[{"CreateFile", "[", "\"\<scores.txt\>\"", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Close", "[", "scoFile", "]"}], ";"}]}], " ", 
           RowBox[{"(*", " ", 
            RowBox[{"close", " ", "the", " ", "file"}], " ", "*)"}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"titleScreen", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "sends", " ", "it", " ", "to", " ", "the", " ", "make", " ", "board", 
        " ", "screen"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"makeBoardScreen", "[", "dimen_", "]"}], " ", ":=", " ", 
       RowBox[{"DynamicModule", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"makeBoardMainMethod", "[", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"setupMakeBoardScreen", "[", 
           RowBox[{
            RowBox[{"dimen", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"dimen", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<BoardMake\>\"", ",", 
            "Null"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "takes", " ", "it", " ", "to", " ", "the", " ", "play", " ", "game", 
        " ", "screen"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"playGameScreen", "[", "]"}], " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"makeBoardMainMethod", "[", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"setupMakeBoardScreen", "[", 
           RowBox[{
           "numRowSettings", ",", "numColSettings", ",", "\"\<PlayGame\>\"", 
            ",", "Null"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "takes", " ", "you", " ", "to", " ", "AI", " ", "solver", " ", 
        "screen"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AISolverScreen", "[", "]"}], " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"makeBoardMainMethod", "[", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"setupMakeBoardScreen", "[", 
           RowBox[{
           "numRowSettings", ",", "numColSettings", ",", "\"\<AIGame\>\"", 
            ",", "Null"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
      ";", "\n", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"settingScreen", "[", "]"}], " ", ":=", " ", 
       RowBox[{"DynamicModule", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"CreatePalette", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"This", " ", "is", " ", "the", " ", "settings"}], 
                 ",", " ", 
                 RowBox[{
                 "we", " ", "had", " ", "to", " ", "inset", " ", "the", " ", 
                  "sliders", " ", "to", " ", "make", " ", "it", " ", "look", 
                  " ", "good"}]}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<Settings\>\"", ",", " ", "Gray", ",", " ", "Bold", 
                    ",", " ", 
                    RowBox[{"FontSize", "\[Rule]", "40"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Goudy Stout\>\""}]}], "]"}],
                   ",", 
                  RowBox[{"{", 
                   RowBox[{"Center", ",", "750"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "This", " ", "is", " ", "the", " ", "slider", " ", 
                  "placement", " ", "for", " ", "each", " ", 
                  RowBox[{"attribute", "."}]}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\< Rows: \>\"", ",", " ", 
                    RowBox[{"Dynamic", "[", "numRowSettings", "]"}]}], "}"}], 
                    "]"}], ",", "Red", ",", 
                    RowBox[{"FontSize", "\[Rule]", "25"}], ",", " ", "Bold"}],
                    "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"300", ",", "700"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Slider", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "numRowSettings", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "25", ",", "1"}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"300", ",", "650"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "This", " ", "one", " ", "deals", " ", "with", " ", 
                  "columns"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\< Cols: \>\"", ",", " ", 
                    RowBox[{"Dynamic", "[", "numColSettings", "]"}]}], "}"}], 
                    "]"}], ",", "Red", ",", 
                    RowBox[{"FontSize", "\[Rule]", "25"}], ",", " ", "Bold"}],
                    "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"900", ",", "700"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Slider", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "numColSettings", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "25", ",", "1"}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"900", ",", "650"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "Sound", " ", "and", " ", "music", " ", "arent", " ", 
                  "linked", " ", "to", " ", "anything", " ", "yet", " ", 
                  "but", " ", "they", " ", "will", " ", "be", " ", 
                  RowBox[{"soon", "."}]}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\< Sound: \>\"", " ", ",", 
                    RowBox[{"Dynamic", "[", "soundSettings", "]"}]}], "}"}], 
                    "]"}], ",", "Red", ",", 
                    RowBox[{"FontSize", "\[Rule]", "25"}], ",", " ", "Bold"}],
                    "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Center", ",", "500"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Slider", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "soundSettings", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "100", ",", "1"}], "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Center", ",", "450"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "Back", " ", "button", " ", "takes", " ", "you", " ", "to", 
                  " ", "the", " ", "home", " ", "screen"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Button", "[", 
                   RowBox[{"\"\<Back\>\"", ",", 
                    RowBox[{
                    RowBox[{"NotebookClose", "[", " ", 
                    RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", " ", 
                    RowBox[{"titleScreen", "[", "]"}]}], ",", " ", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"150", ",", "200"}], "}"}]}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1200"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "800"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"1200", ",", "800"}], "}"}]}]}], "]"}], 
            "\[IndentingNewLine]", ",", " ", "\[IndentingNewLine]", 
            RowBox[{"WindowTitle", "\[Rule]", "\"\<Settings\>\""}], ",", " ", 
            RowBox[{"Background", "\[Rule]", "LightBlue"}], ",", 
            RowBox[{"WindowMargins", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Automatic", ",", " ", "Automatic"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"Automatic", ",", " ", "Automatic"}], "}"}]}], 
              "}"}]}], ",", " ", 
            RowBox[{"WindowSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"1200", ",", "800"}], "}"}]}], ",", 
            RowBox[{"WindowFloating", "\[Rule]", "False"}], ",", 
            RowBox[{"WindowClickSelect", "\[Rule]", "True"}]}], " ", 
           RowBox[{"(*", " ", "options", " ", "*)"}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"scoreScreen", "[", "]"}], " ", ":=", " ", 
       RowBox[{"DynamicModule", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"CreatePalette", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Future", " ", "score", " ", "screen"}], " ", "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"Inset", "[", 
                RowBox[{
                 RowBox[{"Button", "[", 
                  RowBox[{"\"\<Back\>\"", ",", 
                   RowBox[{
                    RowBox[{"NotebookClose", "[", " ", 
                    RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", " ", 
                    RowBox[{"titleScreen", "[", "]"}]}], ",", " ", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"150", ",", "200"}], "}"}]}], "]"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1200"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "800"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"1200", ",", "800"}], "}"}]}]}], "]"}], 
            "\[IndentingNewLine]", ",", " ", "\[IndentingNewLine]", 
            RowBox[{"WindowTitle", "\[Rule]", "\"\<High-Scores\>\""}], ",", 
            " ", 
            RowBox[{"Background", "\[Rule]", "LightBlue"}], ",", 
            RowBox[{"WindowMargins", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Automatic", ",", " ", "Automatic"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"Automatic", ",", " ", "Automatic"}], "}"}]}], 
              "}"}]}], ",", " ", 
            RowBox[{"WindowSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"1200", ",", "800"}], "}"}]}], ",", 
            RowBox[{"WindowFloating", "\[Rule]", "False"}], ",", 
            RowBox[{"WindowClickSelect", "\[Rule]", "True"}]}], " ", 
           RowBox[{"(*", " ", "options", " ", "*)"}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.728650984492378*^9, 3.7286509891368017`*^9}, {
   3.7286510804070644`*^9, 3.728651125824997*^9}, {3.728651611475852*^9, 
   3.72865163184548*^9}, {3.728651668129918*^9, 3.7286516905988684`*^9}, {
   3.7286521440628753`*^9, 3.728652152968508*^9}, {3.7286521875892644`*^9, 
   3.728652216864953*^9}, {3.7286523062589636`*^9, 3.728652580519998*^9}, {
   3.7286533174427333`*^9, 3.7286533192736297`*^9}, {3.7286534537012186`*^9, 
   3.728653476130796*^9}, {3.7286535856830177`*^9, 3.7286536081246843`*^9}, {
   3.728654021888423*^9, 3.728654043415924*^9}, {3.731119135460784*^9, 
   3.731119211156506*^9}, {3.7311192857991247`*^9, 3.7311193144492025`*^9}, {
   3.7311194250722837`*^9, 3.731119467384427*^9}, {3.731119505402889*^9, 
   3.7311199739709926`*^9}, {3.731120030676564*^9, 3.7311201626771097`*^9}, {
   3.7311201943277483`*^9, 3.7311202024158063`*^9}, {3.7311202630811005`*^9, 
   3.7311203681499767`*^9}, {3.7311204461076193`*^9, 
   3.7311204483916483`*^9}, {3.731120588820405*^9, 3.731120600488538*^9}, {
   3.7311208593422365`*^9, 3.731120889162426*^9}, {3.7312399165748434`*^9, 
   3.731240001644846*^9}, {3.7312400688429365`*^9, 3.7312400938724475`*^9}, {
   3.7312411883567557`*^9, 3.731241220919143*^9}, {3.7312412592744093`*^9, 
   3.731241371320558*^9}, {3.7312414103999133`*^9, 3.731241535664418*^9}, {
   3.731241716649181*^9, 3.7312417378876443`*^9}, {3.7312422154989815`*^9, 
   3.731242224017807*^9}, {3.7312423794719973`*^9, 3.7312424318500404`*^9}, {
   3.731246940566818*^9, 3.7312469653649178`*^9}, {3.7312470131433163`*^9, 
   3.7312470138918023`*^9}, {3.7312470591779547`*^9, 3.7312470611469*^9}, {
   3.731247212118985*^9, 3.7312472370439425`*^9}, {3.7312472851986036`*^9, 
   3.731247308140439*^9}, {3.7312473565327377`*^9, 3.7312473629397106`*^9}, {
   3.7312473946744595`*^9, 3.7312473958933463`*^9}, 3.7312570366363554`*^9, {
   3.7312570667628565`*^9, 3.7312571011396627`*^9}, {3.731257514565099*^9, 
   3.731257518126826*^9}, {3.731257586763342*^9, 3.7312576262487593`*^9}, {
   3.731257680168889*^9, 3.7312576813565655`*^9}, {3.7312580884638824`*^9, 
   3.7312581308862824`*^9}, {3.7312583536316037`*^9, 
   3.7312584152512007`*^9}, {3.7312584514239144`*^9, 
   3.7312584522497025`*^9}, {3.7312584857614765`*^9, 3.731258493236253*^9}, {
   3.7312587045959244`*^9, 3.731258803146616*^9}, {3.731258838456583*^9, 
   3.7312588908493695`*^9}, {3.731258942915373*^9, 3.7312589522668023`*^9}, {
   3.731258999044484*^9, 3.7312591062645526`*^9}, {3.7312942438519087`*^9, 
   3.7312942451359615`*^9}, {3.731294704631956*^9, 3.7312947398163905`*^9}, {
   3.7312949687752504`*^9, 3.731294984727456*^9}, {3.731295046684181*^9, 
   3.731295112032939*^9}, {3.731295144561154*^9, 3.731295238137729*^9}, {
   3.731295587450362*^9, 3.731295589338382*^9}, {3.7312957721310096`*^9, 
   3.7312958384362755`*^9}, {3.731295888625245*^9, 3.731295901165485*^9}, {
   3.731295942766238*^9, 3.7312959672947006`*^9}, {3.731296011219519*^9, 
   3.73129603427195*^9}, {3.7312961660984592`*^9, 3.731296227623581*^9}, {
   3.7312963416571507`*^9, 3.731296405079689*^9}, {3.731296535413302*^9, 
   3.731296648614742*^9}, {3.7312967298238745`*^9, 3.7312967422520266`*^9}, {
   3.7312967754044724`*^9, 3.731296786712577*^9}, {3.731296824953089*^9, 
   3.7312968439012833`*^9}, {3.7312969180582266`*^9, 
   3.7312969228343034`*^9}, {3.731296999831213*^9, 3.7312970013752375`*^9}, {
   3.731297085348274*^9, 3.731297134228877*^9}, {3.73129719036557*^9, 
   3.73129720795782*^9}, {3.731297239398179*^9, 3.731297270854577*^9}, {
   3.7312974156787815`*^9, 3.7312974206268406`*^9}, {3.7312975148040075`*^9, 
   3.73129751899206*^9}, {3.731297722678117*^9, 3.731297773418565*^9}, {
   3.731297850439062*^9, 3.73129793333152*^9}, {3.7312980149800086`*^9, 
   3.731298015128014*^9}, {3.7312981962420187`*^9, 3.731298244030648*^9}, {
   3.731298323399603*^9, 3.731298360820061*^9}, {3.731298511592634*^9, 
   3.731298512212679*^9}, {3.731298555177172*^9, 3.731298576885442*^9}, {
   3.7312986379644537`*^9, 3.73129864343248*^9}, {3.7313389062156115`*^9, 
   3.7313389204315643`*^9}, {3.731343031443264*^9, 3.7313430474307547`*^9}, {
   3.7313446053371363`*^9, 3.7313446502089767`*^9}, {3.7313447143963547`*^9, 
   3.7313447362573595`*^9}, {3.731344767525212*^9, 3.731344769850978*^9}, {
   3.7313449662774487`*^9, 3.731345007157504*^9}, {3.7313452062165995`*^9, 
   3.731345226835405*^9}, 3.7313537738044453`*^9, {3.731357455262526*^9, 
   3.7313575890623455`*^9}, {3.731357624904622*^9, 3.7313576541844254`*^9}, {
   3.731357774613328*^9, 3.7313578079456224`*^9}, {3.7313578707574587`*^9, 
   3.731358016722247*^9}, {3.731358066486493*^9, 3.731358083461049*^9}, {
   3.731358129534443*^9, 3.7313582781407022`*^9}, {3.7313583474779477`*^9, 
   3.731358450186017*^9}, {3.731358521968072*^9, 3.7313585702182903`*^9}, {
   3.731358604592389*^9, 3.731358684855487*^9}, {3.7313587215348396`*^9, 
   3.7313587370578775`*^9}, {3.731358890022902*^9, 3.7313589165387235`*^9}, {
   3.731358958329687*^9, 3.7313590709846015`*^9}, {3.731359147614979*^9, 
   3.731359175172415*^9}, {3.7313592114406786`*^9, 3.7313592502814894`*^9}, {
   3.731359289158629*^9, 3.731359359606877*^9}, {3.731359435113255*^9, 
   3.731359482299917*^9}, {3.731359738975008*^9, 3.731359743928322*^9}, {
   3.7313598295036345`*^9, 3.731359833737088*^9}, {3.7313600014960403`*^9, 
   3.731360071965391*^9}, {3.7313601453226414`*^9, 3.7313601861151867`*^9}, {
   3.7313602244862823`*^9, 3.7313602349377995`*^9}, {3.7313603697923765`*^9, 
   3.7313603888681574`*^9}, {3.731360450091547*^9, 3.7313604907978225`*^9}, {
   3.7313608579150248`*^9, 3.7313609267288675`*^9}, {3.7313609600006294`*^9, 
   3.731360961313278*^9}, {3.7313609916156025`*^9, 3.7313611167131195`*^9}, {
   3.731361173757638*^9, 3.731361237608659*^9}, {3.731361283630088*^9, 
   3.7313613151043615`*^9}, {3.731361373453093*^9, 3.7313614757822123`*^9}, {
   3.731361512320469*^9, 3.7313615654053354`*^9}, {3.7313616047173047`*^9, 
   3.7313616579441314`*^9}, {3.7313617065271873`*^9, 3.731361719254882*^9}, {
   3.7313617572790656`*^9, 3.7313618094477987`*^9}, {3.731361843781067*^9, 
   3.7313618472248335`*^9}, {3.7313618858337083`*^9, 3.731361923322585*^9}, {
   3.7313619730701256`*^9, 3.7313620373154216`*^9}, {3.731362135922155*^9, 
   3.731362162635754*^9}, 3.7313627418055077`*^9, {3.7313627820749073`*^9, 
   3.7313628009058547`*^9}, {3.731363195619339*^9, 3.7313631990658236`*^9}, {
   3.7313633165017505`*^9, 3.731363317142413*^9}, {3.731363360014741*^9, 
   3.73136338042324*^9}, {3.7313639294811897`*^9, 3.7313641050872593`*^9}, {
   3.731364208342381*^9, 3.731364249484578*^9}, 3.7313653878015013`*^9, {
   3.731367444035567*^9, 3.7313674448785543`*^9}, {3.7313674775882745`*^9, 
   3.7313674776706963`*^9}, {3.731369656785567*^9, 3.731369691693612*^9}, {
   3.7313699382732487`*^9, 3.731369942242857*^9}, {3.7313700628304234`*^9, 
   3.7313701127858686`*^9}, {3.7313701881297274`*^9, 3.731370346791729*^9}, {
   3.731370378642832*^9, 3.7313703814122334`*^9}, {3.7313704383954897`*^9, 
   3.731370519928363*^9}, {3.7313705963625617`*^9, 3.7313706833730764`*^9}, {
   3.731372159453668*^9, 3.7313722424423018`*^9}, 3.731372590761057*^9, {
   3.731375119036372*^9, 3.7313751309566307`*^9}, {3.7313751652533894`*^9, 
   3.7313752055159965`*^9}, 3.731375241300353*^9, {3.7313753620824533`*^9, 
   3.7313753736285915`*^9}, {3.73137540613035*^9, 3.731375420087004*^9}, {
   3.7313755333842497`*^9, 3.731375533665535*^9}, 3.73137599879688*^9, {
   3.731378733450918*^9, 3.731378756792944*^9}, {3.7313790358255434`*^9, 
   3.7313790375691757`*^9}, {3.7313791424957323`*^9, 3.731379204127262*^9}, {
   3.7313793085753946`*^9, 3.731379326337754*^9}, {3.731379753238009*^9, 
   3.73137977152168*^9}, {3.7313798185278263`*^9, 3.7313798397839084`*^9}, {
   3.731379881072731*^9, 3.7313799303994837`*^9}, {3.7313807531698227`*^9, 
   3.73138075650419*^9}, {3.731380792989094*^9, 3.731380796301778*^9}, {
   3.731381537338192*^9, 3.7313815467959595`*^9}, {3.731381576896776*^9, 
   3.731381602075914*^9}, {3.7314054517476273`*^9, 3.731405483556028*^9}, {
   3.7314055398247194`*^9, 3.7314055495808773`*^9}, {3.7314057547107506`*^9, 
   3.7314057692853084`*^9}, {3.7314059924568677`*^9, 
   3.7314060014173746`*^9}, {3.731412990965398*^9, 3.731413008122761*^9}, {
   3.731414753718604*^9, 3.7314147555988717`*^9}, 3.7314148334404907`*^9, {
   3.7314400605319767`*^9, 3.731440095679976*^9}, 3.7314401765976763`*^9, {
   3.731440398901453*^9, 3.7314404404714756`*^9}, {3.731469083370991*^9, 
   3.7314690946536174`*^9}, {3.7314714550562563`*^9, 3.731471455931363*^9}, {
   3.7314725587616014`*^9, 3.7314725608868113`*^9}, 3.731473002342781*^9, {
   3.731845923447528*^9, 3.7318459235725164`*^9}, {3.731846054874259*^9, 
   3.7318461796989126`*^9}, {3.731846211638499*^9, 3.731846231038602*^9}, {
   3.7318470379194765`*^9, 3.73184708661878*^9}, {3.731847154273157*^9, 
   3.7318472668610954`*^9}, {3.731853119963628*^9, 3.731853260831927*^9}, {
   3.7318534203646903`*^9, 3.731853550543564*^9}, {3.731853698893798*^9, 
   3.7318537612636347`*^9}, {3.7318538645583553`*^9, 
   3.7318538653084707`*^9}, {3.73185389630755*^9, 3.7318539097502956`*^9}, {
   3.7318540238046317`*^9, 3.7318540599995966`*^9}, {3.731854109089218*^9, 
   3.731854248535334*^9}, {3.731854511431429*^9, 3.7318547506617413`*^9}, {
   3.731854780668482*^9, 3.731854782278049*^9}, {3.731865135098883*^9, 
   3.7318653400389524`*^9}, {3.731865644808835*^9, 3.7318656783700047`*^9}, {
   3.7318657144989014`*^9, 3.731865831267496*^9}, {3.731866932435009*^9, 
   3.7318669670039062`*^9}, {3.731867011133568*^9, 3.731867011565876*^9}, {
   3.73187661253132*^9, 3.7318766558537493`*^9}, {3.7318769378075223`*^9, 
   3.7318769634580154`*^9}, {3.7318771241917477`*^9, 3.731877127304488*^9}, {
   3.7318826626460915`*^9, 3.731882668237235*^9}, {3.7318827549598*^9, 
   3.731882791923171*^9}, {3.731888686868372*^9, 3.7318887052474146`*^9}, {
   3.731888781790717*^9, 3.7318888302849913`*^9}, {3.7318888773769207`*^9, 
   3.7318889072472005`*^9}, {3.7318890143469753`*^9, 
   3.7318890294819307`*^9}, {3.731889208373373*^9, 3.7318893407056837`*^9}, {
   3.7318893894104185`*^9, 3.7318896405580025`*^9}, {3.7318897286535535`*^9, 
   3.7318898544299116`*^9}, {3.7318899371758776`*^9, 3.731889944754466*^9}, {
   3.7318903292435846`*^9, 3.731890407622876*^9}, {3.7318904398925796`*^9, 
   3.731890568868097*^9}, {3.731890615202138*^9, 3.731891064011232*^9}, {
   3.7318911107524824`*^9, 3.731891112987002*^9}, {3.7318911526312633`*^9, 
   3.731891175012256*^9}, {3.731891242990303*^9, 3.731891337578498*^9}, {
   3.731891379721876*^9, 3.731891627797306*^9}, {3.7318916847612333`*^9, 
   3.7318916947578707`*^9}, {3.7318917980497203`*^9, 3.731891822751737*^9}, {
   3.731891918921174*^9, 3.731891962214615*^9}, 3.7318924782918243`*^9, {
   3.731892587478901*^9, 3.7318926257281103`*^9}, {3.731892885443174*^9, 
   3.7318928875086756`*^9}, 3.731950389109121*^9, {3.7319504610172386`*^9, 
   3.7319504759918814`*^9}, {3.73195672234784*^9, 3.731956723113597*^9}, {
   3.7322266908886223`*^9, 3.7322267910778093`*^9}, {3.7322270010876665`*^9, 
   3.7322270363233795`*^9}, {3.732228223109207*^9, 3.73222828109009*^9}, {
   3.7322288986218634`*^9, 3.7322289038527155`*^9}, {3.732229958610854*^9, 
   3.7322299907954865`*^9}, {3.732230376266164*^9, 3.7322304074400177`*^9}, {
   3.7322305604094906`*^9, 3.732230594213447*^9}, {3.732230713087711*^9, 
   3.7322307607263412`*^9}, {3.7322308006264997`*^9, 3.732230822254033*^9}, {
   3.732231007461795*^9, 3.732231056142275*^9}, {3.732231167177111*^9, 
   3.7322311823999987`*^9}, {3.732231221596258*^9, 3.732231244733398*^9}, {
   3.7322436712700696`*^9, 3.732243736490288*^9}, {3.7322438044438505`*^9, 
   3.732243812530423*^9}, {3.732244157941916*^9, 3.7322441759197893`*^9}, {
   3.7322453262685604`*^9, 3.732245328655885*^9}, {3.7331946859903355`*^9, 
   3.733194692410185*^9}, {3.7331948110127287`*^9, 3.733194836405796*^9}, 
   3.7331988664473553`*^9, {3.7334294924876747`*^9, 3.7334294941159525`*^9}, {
   3.733429535381758*^9, 3.733429565098153*^9}, {3.733448223400474*^9, 
   3.7334482329397025`*^9}, {3.733454109427109*^9, 3.7334541301033382`*^9}, {
   3.7334545770130563`*^9, 3.7334545778745766`*^9}, {3.733660538495541*^9, 
   3.7336605486555305`*^9}, {3.7341472806532335`*^9, 3.734147295733708*^9}, {
   3.7341473759627633`*^9, 3.734147530934865*^9}, {3.73427755156063*^9, 
   3.734277555761503*^9}, {3.7342917727849717`*^9, 3.73429180965904*^9}, {
   3.7348121198424234`*^9, 3.7348121225797405`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"66a2e110-cf6a-4f56-9222-edc5daff6647"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate Screen Functions", "Section",
 CellChangeTimes->{{3.7322443453139763`*^9, 3.7322443604844556`*^9}, {
  3.732244393591646*^9, 3.7322443997269964`*^9}, {3.732244555007633*^9, 
  3.732244558364646*^9}},ExpressionUUID->"0bdb20c0-2dbb-4b75-992a-\
be2ecc42d81c"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Encompassing", " ", "module", " ", "that", " ", "has", " ", "all", " ", 
    "the", " ", "setting", " ", "of", " ", "board", " ", "in", " ", "it"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"makeBoardMainMethod", "[", "]"}], ":=", 
    RowBox[{"DynamicModule", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"startBoard", ",", "\[IndentingNewLine]", 
        RowBox[{"isGameWon", "=", "0"}], ",", "\[IndentingNewLine]", 
        "gridInfo", ",", "\[IndentingNewLine]", "list", ",", 
        "\[IndentingNewLine]", "empty", ",", "\[IndentingNewLine]", "hover", 
        ",", "\[IndentingNewLine]", "Bomb", ",", "\[IndentingNewLine]", 
        "hint", ",", "\[IndentingNewLine]", "hoverBomb", ",", 
        "\[IndentingNewLine]", "numOfRows", ",", "\[IndentingNewLine]", 
        "numOfCols", ",", "\[IndentingNewLine]", "numOfButtons", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"isFirstClick", "=", "True"}], ",", "\[IndentingNewLine]", 
        "numOfBombs", ",", "\[IndentingNewLine]", "typeState", ",", 
        "\[IndentingNewLine]", "tempScore", ",", "\[IndentingNewLine]", 
        "tempName", ",", "\[IndentingNewLine]", 
        RowBox[{"time", "=", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"permanentBombsList", "=", 
         RowBox[{"{", "}"}]}], ",", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"list", " ", "of", " ", "bombs"}], " ", "-", " ", 
          RowBox[{"determined", " ", "by", " ", "AI"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"permanentNotBombsList", "=", 
         RowBox[{"{", "}"}]}], ",", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"list", " ", "of", " ", "not", " ", "bombs"}], " ", "-", 
          " ", 
          RowBox[{"determined", " ", "by", " ", "AI"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"AIClickButtons", "=", 
         RowBox[{"{", "}"}]}], ",", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"the", " ", "buttons", " ", "AI", " ", "clicks"}], "..."}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"ListOfBoards", " ", "=", " ", 
         RowBox[{"{", "}"}]}]}], " ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"List", " ", "of", " ", "all", " ", "the", " ", "stages"}], 
         ",", " ", 
         RowBox[{"used", " ", "in", " ", "animate"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      StyleBox[
       RowBox[{"(*", " ", 
        RowBox[{
        "variables", " ", "stated", " ", "are", " ", "inside", " ", "the", 
         " ", "module", " ", "so", " ", "they", " ", "dont", " ", "mess", " ",
          "with", " ", "other", " ", "methods", " ", "outside", " ", "of", 
         " ", "the", " ", "module", " ", "but", " ", "it", " ", "will", " ", 
         "apply", " ", "to", " ", "all", " ", "the", " ", "methods", " ", 
         "inside", " ", "of", " ", "it", " ", "though"}], " ", "*)"}], 
       "Subsection"], 
      StyleBox["\[IndentingNewLine]", "Subsection"], 
      StyleBox[
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"rows", " ", "-", " ", 
          RowBox[{
          "number", " ", "of", " ", "rows", " ", "in", " ", "grid", 
           "\[IndentingNewLine]", "cols"}], " ", "-", " ", 
          RowBox[{
          "number", " ", "of", " ", "cols", " ", "in", " ", "grid", " ", 
           "\[IndentingNewLine]", "playtype"}], " ", "-", " ", 
          RowBox[{
          "used", " ", "to", " ", "make", " ", "dynamic", " ", "code", " ", 
           RowBox[{"(", 
            RowBox[{"more", " ", "efficent"}], ")"}], "\[IndentingNewLine]", 
           "presetGridInfo"}], " ", "-", " ", 
          RowBox[{
          "Null", " ", "if", " ", "using", " ", "random", " ", "board"}]}], 
         ",", " ", 
         RowBox[{
         "a", " ", "2", "d", " ", "grid", " ", "list", " ", "if", " ", 
          "preset", " ", "board"}]}], " ", "*)"}], "Subsubtitle"], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"setupMakeBoardScreen", "[", 
         RowBox[{
         "rows_", ",", "cols_", ",", "playtype_", ",", "presetGridInfo_"}], 
         "]"}], ":=", 
        RowBox[{"DynamicModule", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", "c", ",", "max"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"numOfRows", "=", "rows"}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"numOfCols", "=", "cols"}], ";", "\[IndentingNewLine]", 
           RowBox[{"numOfButtons", "=", 
            RowBox[{"rows", "*", "cols"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"typeState", "=", "playtype"}], ";", "\[IndentingNewLine]",
            "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "sets", " ", "up", " ", "the", " ", "graphics", " ", "of", " ", 
             "the", " ", "certain", " ", "states", " ", "of", " ", "the", " ",
              "buttons", " ", "as", " ", "it", " ", "is", " ", "used", " ", 
             "throughout", " ", "the", " ", "program", " ", "at", " ", 
             "various", " ", "states", " ", "of", " ", "grid", " ", "images", 
             " ", "and", " ", "grids"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"max", "=", 
            RowBox[{"Max", "[", 
             RowBox[{"numOfCols", ",", "numOfRows"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"empty", " ", "=", " ", 
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Lighter", "[", 
                 RowBox[{"Gray", ",", ".1"}], "]"}], ",", 
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1.2"}], ",", 
                    RowBox[{"-", "1.2"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1.2", ",", "1.2"}], "}"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"500", "/", "max"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"hover", " ", "=", " ", 
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", "}"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"500", "/", "max"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"Scaled", "[", "1", "]"}]}], ",", 
              RowBox[{"Background", "\[Rule]", 
               RowBox[{"Darker", "[", "Gray", "]"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Bomb", "=", " ", 
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Darker", "[", 
                 RowBox[{"Red", ",", ".2"}], "]"}], ",", 
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1.2"}], ",", 
                    RowBox[{"-", "1.2"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1.2", ",", "1.2"}], "}"}]}], "]"}], ",", 
                RowBox[{"Darker", "[", 
                 RowBox[{"Red", ",", ".1"}], "]"}], ",", 
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"500", "/", "max"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"hoverBomb", " ", "=", " ", 
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", "}"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"500", "/", "max"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"Scaled", "[", "1", "]"}]}], ",", " ", 
              RowBox[{"Background", "\[Rule]", 
               RowBox[{"Darker", "[", "Red", "]"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"hint", "=", 
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", "}"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"500", "/", "max"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"Scaled", "[", "1", "]"}]}], ",", " ", 
              RowBox[{"Background", "\[Rule]", 
               RowBox[{"Darker", "[", "Blue", "]"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"startBoard", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "rows"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "cols"}], "}"}]}], "]"}]}], ";", 
           " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Shows", " ", "the", " ", "current", " ", "state", " ", "of", " ",
              "the", " ", "board", " ", "that", " ", "the", " ", "player", 
             " ", "can", " ", "see"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"gridInfo", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "rows"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "cols"}], "}"}]}], "]"}]}], ";", 
           " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Holds", " ", "information", " ", "of", " ", "the", " ", "grid"}],
             " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
             "This", " ", "which", " ", "statement", " ", "checks", " ", 
              "which", " ", "part", " ", "of", " ", "the", " ", "program", 
              " ", "we", " ", "are", " ", "in", " ", "to", " ", "choose", " ",
               "the", " ", "correct", " ", "method", " ", "to", " ", 
              RowBox[{"choose", ".", " ", "This"}], " ", "is", " ", "because",
               " ", "we", " ", "did", " ", "not", " ", "want", " ", "similar",
               " ", "code", " ", "in", " ", "our", " ", "notebook", " ", 
              "with", " ", "slight", " ", "modifications"}], ",", " ", 
             RowBox[{
             "so", " ", "we", " ", "decided", " ", "to", " ", "use", " ", "a",
               " ", "\"\<boolean\>\"", " ", "style", " ", "approach", " ", 
              "with", " ", "strings", " ", "so", " ", "our", " ", "code", " ",
               "would", " ", "be", " ", "less", " ", "repeative", " ", "and", 
              " ", "more", " ", "efficent"}]}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Which", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"typeState", "\[Equal]", "\"\<BoardMake\>\""}], ",", " ", 
             RowBox[{
              RowBox[{"list", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"dynamicClickButton", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"r", ",", "c"}], "}"}], ",", "empty"}], "]"}], 
                 ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"r", ",", "1", ",", "rows"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"c", ",", "1", ",", "cols"}], "}"}]}], "]"}]}], ";", 
              RowBox[{
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"Ceiling", "[", 
                   RowBox[{"rows", "*", ".5"}], "]"}], ",", 
                  RowBox[{"Ceiling", "[", 
                   RowBox[{"cols", "*", ".5"}], "]"}]}], "]"}], "]"}], "=", 
               RowBox[{"Style", "[", "\"\<\>\"", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"renderMakeBoard", "[", "]"}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{"typeState", "\[Equal]", "\"\<PlayGame\>\""}], ",", " ", 
             RowBox[{
              RowBox[{"list", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"dynamicClickButton", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"r", ",", "c"}], "}"}], ",", "empty"}], "]"}], 
                 ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"r", ",", "1", ",", "rows"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"c", ",", "1", ",", "cols"}], "}"}]}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"renderBoard", "[", "]"}], ";"}], "\[IndentingNewLine]",
              ",", "\[IndentingNewLine]", 
             RowBox[{"typeState", "\[Equal]", "\"\<PresetGame\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"list", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"dynamicClickButton", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"r", ",", "c"}], "}"}], ",", "empty"}], "]"}], 
                 ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"r", ",", "1", ",", "numOfRows"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"c", ",", "1", ",", "numOfCols"}], "}"}]}], "]"}]}],
               ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"SameQ", "[", 
                  RowBox[{
                  "presetGridInfo", ",", " ", "\[IndentingNewLine]", "Null"}],
                   "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"gridInfo", "=", "presetGridInfo"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"numOfBombs", "=", "0"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"r", "=", "1"}], ",", 
                   RowBox[{"r", "\[LessEqual]", "numOfRows"}], ",", 
                   RowBox[{"r", "++"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"c", "=", "1"}], ",", 
                    RowBox[{"c", "\[LessEqual]", "numOfCols"}], ",", 
                    RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{"r", ",", "c"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "100"}]}], ",", 
                    RowBox[{"numOfBombs", "++"}]}], "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"renderBoard", "[", "]"}], ";"}], "\[IndentingNewLine]",
              ",", "\[IndentingNewLine]", 
             RowBox[{"typeState", "\[Equal]", "\"\<AIGame\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"list", "=", 
               RowBox[{"Table", "[", 
                RowBox[{"hover", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"r", ",", "1", ",", "rows"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"c", ",", "1", ",", "cols"}], "}"}]}], "]"}]}], ";",
               " ", 
              RowBox[{"(*", " ", 
               RowBox[{
               "Shows", " ", "the", " ", "current", " ", "state", " ", "of", 
                " ", "the", " ", "board", " ", "that", " ", "the", " ", 
                "player", " ", "can", " ", "see"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"SameQ", "[", 
                  RowBox[{"presetGridInfo", ",", " ", "Null"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{"Not", " ", "Null"}], " ", "=", " ", 
                  RowBox[{
                   RowBox[{"PRESET", " ", "BOARD"}], " ", "-", " ", 
                   RowBox[{"DO", " ", "NOT", " ", 
                    RowBox[{
                    RowBox[{"EDIT", "!!"}], "!"}]}]}]}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"gridInfo", "=", "presetGridInfo"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"numOfBombs", "=", "0"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"r", "=", "1"}], ",", 
                   RowBox[{"r", "\[LessEqual]", "numOfRows"}], ",", 
                   RowBox[{"r", "++"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"c", "=", "1"}], ",", 
                    RowBox[{"c", "\[LessEqual]", "numOfCols"}], ",", 
                    RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{"r", ",", "c"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "100"}]}], ",", 
                    RowBox[{"numOfBombs", "++"}]}], "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{"\"\<Preset BOARD: \>\"", ",", " ", "gridInfo"}], 
                   "]"}], ";"}], "*)"}], "\[IndentingNewLine]", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"NULL", " ", "-", " ", 
                  RowBox[{"RANDOM", " ", "GENERATE", " ", "BOARD"}]}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"generateBomb", "[", 
                  RowBox[{"numOfRows", ",", "numOfCols", ",", 
                   RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfRows", "*", ".5"}], "]"}], ",", 
                   RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfCols", "*", ".5"}], "]"}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"generateNumbers", "[", "]"}], ";"}]}], 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"Print", "[", "\"\<RNG BOARD\>\"", "]"}], "*)"}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"renderAIBoard", "[", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       StyleBox[
        RowBox[{"(*", " ", 
         RowBox[{
         "Our", " ", "AI", " ", "graphic", " ", "is", " ", "relatively", " ", 
          "different", " ", "from", " ", "any", " ", "other", " ", "display", 
          " ", "interface", " ", "so", " ", "we", " ", "have", " ", "a", " ", 
          "seperate", " ", "method", " ", "as", " ", "opposed", " ", "to", 
          " ", "a", " ", "dynamic", " ", 
          RowBox[{"render", "."}]}], " ", "*)"}], "Subsection"], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"renderAIBoard", "[", "]"}], " ", ":=", " ", 
        RowBox[{"DynamicModule", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "tempNumber", ",", "r", ",", "c", ",", "dir", ",", "grid", ",", 
            "numrows", ",", "numcols", ",", "temprows", ",", "tempcols"}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CreatePalette", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "new", " ", "Module", " ", "that", " ", "renders", " ", 
                   "board", " ", "to", " ", "allow", " ", "it", " ", "to", 
                   " ", "change"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Inset", " ", "each", " ", "of", " ", "the", " ", 
                   "buttons"}], "*)"}], "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Inset", "[", " ", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{"Random", " ", "board"}], " ", "-", " ", 
                    RowBox[{"original", " ", "settings"}]}], " ", "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Random Board\>\"", ",", "Bold", ",", "Black", ",", 
                    RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"NotebookClose", "[", 
                    RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AISolverScreen", "[", "]"}], ";"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1000", ",", "600"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Reset\>\"", ",", "Bold", ",", "Black", ",", 
                    RowBox[{"FontSize", "\[Rule]", "35"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], 
                    "]"}], ",", " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "\"\<cover\>\"", " ", "up", " ", "the", " ", "board", " ",
                     "with", " ", "the", " ", "old", " ", "information"}], 
                    " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"NotebookClose", "[", 
                    RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"makeBoardMainMethod", "[", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"setupMakeBoardScreen", "[", 
                    RowBox[{
                    "numOfRows", ",", "numOfCols", ",", "\"\<AIGame\>\"", ",",
                     "gridInfo"}], "]"}]}], "\[IndentingNewLine]", ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1000", ",", "400"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"Inset", "[", " ", 
                   RowBox[{"(*", " ", 
                    RowBox[{"Import", " ", "board", " ", 
                    RowBox[{"from", " ", ".", "tll"}], " ", "file"}], " ", 
                    "*)"}], "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Import Board\>\"", ",", "Bold", ",", "Black", ",", 
                    RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], 
                    "]"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "grabs", " ", "a", " ", "tll", " ", "file", " ", "that", 
                    " ", "can", " ", "be", " ", 
                    RowBox[{"used", ".", " ", "We"}], " ", 
                    RowBox[{"decided", " ", ".", "tll"}], " ", "because", " ",
                     "it", " ", "was", " ", "unique"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"dir", "=", 
                    RowBox[{"SystemDialogInput", "[", 
                    RowBox[{"\"\<FileOpen\>\"", ",", " ", "\"\<.tll\>\""}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"dir", "\[NotEqual]", "$Canceled"}], ",", ",", 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"grid", "=", 
                    RowBox[{"ReadList", "[", "dir", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gridInfo", "=", 
                    RowBox[{"grid", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "repace", " ", "grid", " ", "with", " ", "the", " ", 
                    "preset", " ", "info"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "adjusts", " ", "the", " ", "board", " ", "info", " ", 
                    "based", " ", "on", " ", "what", " ", "we", " ", "know"}],
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"numrows", "=", 
                    RowBox[{"Length", "[", "gridInfo", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"numcols", "=", 
                    RowBox[{"Length", "[", 
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"NotebookClose", "[", 
                    RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"makeBoardMainMethod", "[", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"setupMakeBoardScreen", "[", 
                    RowBox[{
                    "numrows", ",", "numcols", ",", "\"\<AIGame\>\"", ",", 
                    RowBox[{"grid", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]}], " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "recall", " ", "method", " ", "with", " ", "a", " ", 
                    "preset", " ", "board"}], "*)"}], "\[IndentingNewLine]", 
                    "]"}], ";"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}], 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "Queued", " ", "is", " ", "used", " ", "for", " ", 
                    "methods", " ", "that", " ", "take", " ", "a", " ", 
                    "longer", " ", "time", " ", "to", " ", "run", " ", "than",
                     " ", "unusal"}], " ", "*)"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", "200"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Run AI Solver\>\"", ",", "Bold", ",", "Black", ",", 
                    RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], 
                    "]"}], ",", " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "Run", " ", "the", " ", "entire", " ", "AI", " ", 
                    "Solver", " ", "and", " ", "develop", " ", "animate", " ",
                     "list"}], " ", "*)"}], "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{
                    "Middle", " ", "guess", " ", "is", " ", "always", " ", 
                    "safe"}], " ", "-", " ", 
                    RowBox[{"no", " ", "matter", " ", "what"}], " ", "-", " ", 
                    RowBox[{
                    "cannot", " ", "lose", " ", "on", " ", "first", " ", 
                    "click"}]}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"temprows", "=", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfRows", "*", ".5"}], "]"}]}], ";", " ", 
                    "\[IndentingNewLine]", 
                    RowBox[{"tempcols", "=", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfCols", "*", ".5"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"ListOfBoards", ",", " ", "list"}], "]"}], ";", 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{"append", " ", "blank", " ", "board"}], " ", "-", 
                    " ", 
                    RowBox[{"state", " ", "1"}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ListOfBoards", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", " ", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfRows", "*", ".5"}], "]"}], ",", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfCols", "*", ".5"}], "]"}]}], " ", "]"}], 
                    "]"}], "=", "hint"}], ";", " ", 
                    RowBox[{
                    "(*", " ", "\"\<First-click middle (safe-space)\>\"", " ",
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"tempNumber", "=", 
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{"temprows", ",", "tempcols"}], "]"}], "]"}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"temprows", ",", "tempcols"}], "]"}], "]"}], "=", 
                    "tempNumber"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"NumberLook", "[", 
                    RowBox[{"tempNumber", ",", "temprows", ",", "tempcols"}], 
                    "]"}], ";", " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "open", " ", "the", " ", "firstclick", " ", "middle", " ", 
                    RowBox[{"spot", "."}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"ListOfBoards", ",", " ", "list"}], "]"}], ";", 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{
                    "append", " ", "next", " ", "board", " ", "with", " ", 
                    "first", " ", "click"}], " ", "-", " ", 
                    RowBox[{"state", " ", "2"}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"AIClickButtons", ",", 
                    RowBox[{"{", 
                    RowBox[{"temprows", ",", "tempcols"}], "}"}]}], "]"}], 
                    ";", " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{"button", " ", "of", " ", "clicks"}], " ", "*)"}],
                     "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"makeProbsList", "[", "]"}], ";"}], " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{"THE", " ", "AI", " ", "ALGORITHM"}], " ", "-", 
                    " ", 
                    RowBox[{
                    "RECURSIVE", " ", "METHOD", " ", "that", " ", "makes", 
                    " ", "animate", " ", "list", " ", "and", " ", "solves", 
                    " ", "board"}]}], " ", "*)"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "600"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{
                    "Opens", " ", "up", " ", "a", " ", "palette", " ", "with",
                     " ", "animated", " ", "boards", " ", "for", " ", 
                    "solver"}], " ", "-", " ", 
                    RowBox[{"must", " ", "use", " ", "AI", " ", "Solver", " ", 
                    RowBox[{"first", "!"}]}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Animate\>\"", ",", "Bold", ",", "Black", ",", 
                    RowBox[{"FontSize", "\[Rule]", "35"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], 
                    "]"}], ",", " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{"Animate", " ", "the", " ", "board"}], " ", "-", 
                    " ", 
                    RowBox[{
                    "must", " ", "RUN", " ", "AI", " ", "SOLVER", " ", 
                    "first"}]}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"CreatePalette", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Animate", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"GraphicsGrid", "[", 
                    RowBox[{
                    RowBox[{"ListOfBoards", "[", 
                    RowBox[{"[", "t", "]"}], "]"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "All"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1180", ",", "600"}], "}"}]}], ",", 
                    RowBox[{"Background", "\[Rule]", "LightGray"}]}], "]"}], 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{"the", " ", "animate", " ", "display"}], " ", 
                    "*)"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "1", ",", 
                    RowBox[{"Length", "[", "ListOfBoards", "]"}], ",", "1"}], 
                    "}"}], ",", 
                    RowBox[{"AnimationDirection", "\[Rule]", "Forward"}], ",",
                     " ", 
                    RowBox[{"AnimationRunning", "\[Rule]", "True"}], ",", 
                    RowBox[{"DefaultDuration", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "ListOfBoards", "]"}], ">", "30"}],
                     ",", "10", ",", " ", "10"}], "]"}]}], ",", 
                    RowBox[{"AnimationRepetitions", "\[Rule]", "1"}], ",", 
                    RowBox[{"DisplayAllSteps", "\[Rule]", "True"}]}], "]"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"WindowSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1200", ",", " ", "800"}], "}"}]}]}], "]"}], " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{"maximum", " ", "30", "s", " ", "run"}], ",", " ", 
                    RowBox[{
                    RowBox[{"don", "'"}], "t", " ", 
                    RowBox[{"repeat", "."}]}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "400"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Back\>\"", ",", "Bold", ",", "Blue", ",", 
                    RowBox[{"FontSize", "\[Rule]", "35"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"NotebookClose", "[", " ", 
                    RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", " ", 
                    RowBox[{"titleScreen", "[", "]"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"150", ",", "200"}], "}"}]}], "]"}], ",", " ", 
                  RowBox[{"(*", " ", 
                   RowBox[{"Back", " ", "button"}], " ", "*)"}], 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"GraphicsGrid", "[", 
                    RowBox[{"list", ",", 
                    RowBox[{"Frame", "\[Rule]", "All"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1200", ",", "600"}], "}"}]}], ",", 
                    RowBox[{"Background", "\[Rule]", "LightGray"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", "525"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", "Center"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"500", ",", "500"}], "}"}]}], "]"}]}], " ", 
                 RowBox[{"(*", " ", "grid", " ", "*)"}], 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1200"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "800"}], "}"}]}], "}"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"1200", ",", "800"}], "}"}]}]}], "]"}], "]"}], ",", 
             RowBox[{"Background", "\[Rule]", "LightBlue"}], ",", 
             RowBox[{"WindowTitle", "\[Rule]", "\"\<AI Solver\>\""}], ",", 
             " ", 
             RowBox[{"WindowSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"1200", ",", "800"}], "}"}]}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       StyleBox[
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "Dynamic", " ", "button", " ", "click", " ", "with", " ", 
           "paramater", " ", 
           RowBox[{"type", ".", " ", "Allow"}], " ", "the", " ", "buttons", 
           " ", "to", " ", "react", " ", "depending", " ", "on", " ", "the", 
           " ", "type", " ", "of", " ", "gamemode", " ", 
           RowBox[{"board", ".", " ", "NOTE"}]}], " ", "-", " ", 
          RowBox[{
          "AI", " ", "does", " ", "not", " ", "use", " ", "buttons"}]}], " ", 
         "*)"}], "Subsection"], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"dynamicClickButton", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], ",", "type_"}], "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"tempNumber", ",", "rows", ",", "cols"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Button", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Mouseover", "[", 
             RowBox[{"type", ",", 
              RowBox[{"MouseAppearance", "[", 
               RowBox[{"hover", ",", "\"\<LinkHand\>\""}], "]"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                "make", " ", "broad", " ", "must", " ", "be", " ", "able", 
                 " ", "to", " ", "toggle", " ", "between", " ", "a", " ", 
                 "bomb", " ", "and", " ", "\"\<not bomb\>\""}], " ", "=", " ", 
                RowBox[{"empty", " ", 
                 RowBox[{"button", ".", " ", "Therefore"}]}]}], ",", " ", 
               RowBox[{
               "if", " ", "it", " ", "is", " ", "currently", " ", "a", " ", 
                "bomb", " ", 
                RowBox[{"(", 
                 RowBox[{"-", "100"}], ")"}], " ", "make", " ", "it", " ", 
                "empty", " ", "and", " ", "vice", " ", "versa"}]}], " ", 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"typeState", "\[Equal]", "\"\<BoardMake\>\""}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Equal]", "0"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{"(*", " ", 
                    RowBox[{"Make", " ", "bomb"}], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
                    RowBox[{"-", "100"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
                    RowBox[{"-", "100"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Turns", " ", "it", " ", "into", " ", "the", " ", "red", 
                    " ", "graphic", " ", "button"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
                    RowBox[{"dynamicClickButton", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i", ",", "j"}], "}"}], ",", "Bomb"}], "]"}]}], 
                    ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                   RowBox[{"(*", " ", 
                    RowBox[{"Remove", " ", "bomb"}], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "0"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "0"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Turns", " ", "it", " ", "into", " ", "a", " ", "black", 
                    " ", "graphic", " ", "button"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
                    RowBox[{"dynamicClickButton", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i", ",", "j"}], "}"}], ",", "empty"}], "]"}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]",
                "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"If", " ", "firstclick", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                  "generate", " ", "board", " ", "after", " ", "first", " ", 
                   "click", " ", "to", " ", "prevent", " ", "losing", " ", 
                   "on", " ", "first"}], "-", "click"}], ")"}], " ", "and", 
                " ", "playgame", " ", "mode"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"isFirstClick", " ", "&&", " ", 
                 RowBox[{"typeState", "\[Equal]", "\"\<PlayGame\>\""}]}], ",",
                 "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"generateBomb", "[", 
                  RowBox[{"numOfRows", ",", "numOfCols", ",", "i", ",", "j"}],
                   "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"generateNumbers", "[", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"isFirstClick", "=", "False"}], ";"}]}], " ", 
               RowBox[{"(*", " ", 
                RowBox[{"set", " ", "to", " ", "false"}], " ", "*)"}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"tempNumber", "=", 
               RowBox[{"gridInfo", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", " ", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{
                "Replace", " ", "the", " ", "information", " ", "in", " ", 
                 "the", " ", "game"}], "..."}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"startBoard", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "tempNumber"}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"NumberLook", "[", 
               RowBox[{"tempNumber", ",", "i", ",", "j"}], "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"numOfButtons", "\[Equal]", "numOfBombs"}], ",", 
                RowBox[{"isGameWon", "=", "1"}]}], "]"}], ";", " ", 
              RowBox[{"(*", " ", 
               RowBox[{"game", " ", "is", " ", "won"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"gridInfo", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Equal]", 
                 RowBox[{"-", "100"}]}], ",", 
                RowBox[{"isGameWon", "=", 
                 RowBox[{"-", "1"}]}]}], "]"}], ";", " ", 
              RowBox[{"(*", " ", 
               RowBox[{"game", " ", "is", " ", "lost"}], " ", "*)"}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"isGameWon", "\[NotEqual]", "0"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"rows", "=", "1"}], ",", 
                   RowBox[{"rows", "\[LessEqual]", "numOfRows"}], ",", 
                   RowBox[{"rows", "++"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"cols", "=", "1"}], ",", 
                    RowBox[{"cols", "\[LessEqual]", "numOfCols"}], ",", 
                    RowBox[{"cols", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"rows", ",", "cols"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{"rows", ",", "cols"}], "]"}], "]"}], "=", 
                    "hover"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"isGameWon", "\[Equal]", 
                    RowBox[{"-", "1"}]}], "&&", 
                    RowBox[{
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{"rows", ",", "cols"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "100"}]}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{"rows", ",", "cols"}], "]"}], "]"}], "=", 
                    "Bomb"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"isGameWon", "\[Equal]", "1"}], "&&", 
                    RowBox[{"typeState", "\[Equal]", "\"\<PlayGame\>\""}]}], 
                   ",", " ", 
                   RowBox[{"(*", " ", 
                    RowBox[{"win", " ", "and", " ", "random", " ", "board"}], 
                    " ", "*)"}], "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"aaaaa", "=", "time"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{"Head", "@", "aaaaa"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{"aaaaa", "/", "5"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"tempScore", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1000", "*", "numOfBombs"}], ")"}], "-", 
                    RowBox[{"20", "*", "time"}]}], ")"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"tempScore", "=", 
                    RowBox[{"Round", "@", 
                    RowBox[{"N", "[", "tempScore", "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CreateWindow", "[", 
                    RowBox[{
                    RowBox[{"DialogNotebook", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"TextCell", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Score: \>\"", " ", ",", "tempScore"}], "}"}],
                     "]"}], ",", " ", "25", ",", "Bold"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"TextCell", "[", 
                    RowBox[{"\"\<Name: \>\"", ",", "25"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"InputField", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "tempName", "]"}], ",", "String", 
                    ",", 
                    RowBox[{"FieldSize", "\[Rule]", "10"}]}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ChoiceButtons", "[", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{"confirm", " ", "button"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"highScoreFile", "[", 
                    RowBox[{"tempName", ",", "tempScore"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"DialogReturn", "[", "]"}], ";"}], 
                    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
                    "]"}]}], "}"}], ",", 
                    RowBox[{
                    "WindowTitle", "\[Rule]", "\"\<High-Scores\>\""}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"WindowSize", "\[Rule]", "All"}]}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
            RowBox[{"Appearance", "\[Rule]", "None"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"highScoreFile", "[", 
         RowBox[{"name_", ",", "score_"}], "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"scoreFile", ",", "toRemove"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Open", "[", "\"\<scores.txt\>\"", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"scoreFile", "=", 
            RowBox[{"Import", "[", 
             RowBox[{"\"\<scores.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"scoreFile", ",", 
             RowBox[{"{", 
              RowBox[{"name", ",", " ", "score"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"scoreFile", "=", 
            RowBox[{"Reverse", "@", 
             RowBox[{"SortBy", "[", 
              RowBox[{"scoreFile", ",", "Last"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"toRemove", "=", 
            RowBox[{
             RowBox[{"Length", "[", "scoreFile", "]"}], "-", "5"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"toRemove", ">", "0"}], ",", " ", 
             RowBox[{"(*", " ", 
              RowBox[{"we", " ", "need", " ", "to", " ", "remove"}], " ", 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"scoreFile", "=", 
              RowBox[{"Drop", "[", 
               RowBox[{"scoreFile", ",", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "*", "toRemove"}], ")"}]}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Export", "[", 
            RowBox[{
            "\"\<scores.txt\>\"", ",", "scoreFile", ",", "\"\<Table\>\""}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Close", "[", "\"\<scores.txt\>\"", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       StyleBox[
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "Randomly", " ", "generate", " ", "the", " ", "bombs", " ", "in", 
           " ", "the", " ", "size", " ", "rows", " ", "x", " ", "col", " ", 
           "grid"}], ",", " ", 
          RowBox[{
          "excluding", " ", "the", " ", "3", "x3", " ", "grid", " ", 
           "surrounding", " ", "first", " ", "click", " ", 
           RowBox[{"(", 
            RowBox[{"clickedX", " ", "and", " ", "clickedY"}], ")"}]}]}], " ",
          "*)"}], "Subsection"], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"generateBomb", "[", 
         RowBox[{"rows_", ",", "cols_", ",", "clickedX_", ",", "clickedY_"}], 
         "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"PlayTable", ",", " ", "PlayGrid", ",", 
            RowBox[{"BombCount", "=", "0"}], ",", "RandomCoorX", ",", 
            "RandomCoorY", ",", "PrevCoor", ",", "r", ",", "c", ",", 
            "ForbiddenBombChoices", ",", "E1", ",", "E2"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "This", " ", "is", " ", "used", " ", "to", " ", "allow", " ", 
            "the", " ", "generation", " ", "of", " ", "bombs", " ", "after", 
            " ", "the", " ", "first", " ", "click", " ", "and", " ", "the", 
            " ", "graphics", " ", "for", " ", "it"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"PlayTable", " ", "=", " ", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Darker", "[", 
                    RowBox[{"Yellow", ",", ".2"}], "]"}], ",", 
                   RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.5", ",", 
                    RowBox[{"-", "1.5"}]}], "}"}]}], "]"}], ",", 
                   RowBox[{"Darker", "[", 
                    RowBox[{"Yellow", ",", ".1"}], "]"}], ",", 
                   RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}], "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "30"}]}], "]"}], ",", 
              RowBox[{"{", "rows", "}"}], ",", 
              RowBox[{"{", "cols", "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"PlayGrid", " ", ":=", " ", 
            RowBox[{"Grid", "[", 
             RowBox[{"PlayTable", ",", 
              RowBox[{"Spacings", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", ".15"}], ",", 
                 RowBox[{"-", ".15"}]}], "}"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ForbiddenBombChoices", " ", "=", " ", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"clickedX", "+", "E1"}], ",", 
                RowBox[{"clickedY", "+", "E2"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"E1", ",", 
                RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"E2", ",", 
                RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Places", " ", "bombs", " ", "cannot", " ", "be", " ", "placed"}],
             " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"ForbiddenBombChoices", "=", 
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", "ForbiddenBombChoices", "]"}], ",", 
              "2"}], "]"}]}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{"Format", " ", "list"}], " ", "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"numOfBombs", "=", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"rows", "*", "cols"}], ")"}], "/", "8"}], "+", "1"}], 
             "]"}]}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{"Number", " ", "of", " ", "bombs"}], " ", "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"BombCount", " ", "<", "numOfBombs"}], ",", " ", 
             RowBox[{"(*", " ", 
              RowBox[{
              "Generate", " ", "bombs", " ", "based", " ", "on", " ", "valid",
                " ", "locations"}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"RandomCoorX", "=", " ", 
               RowBox[{"RandomInteger", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "rows"}], "}"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"RandomCoorY", " ", "=", " ", 
               RowBox[{"RandomInteger", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "cols"}], "}"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"While", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"PlayTable", "[", 
                    RowBox[{"[", "RandomCoorX", "]"}], "]"}], "[", 
                   RowBox[{"[", "RandomCoorY", "]"}], "]"}], "\[Equal]", " ", 
                  "Bomb"}], "||", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{"ForbiddenBombChoices", ",", 
                   RowBox[{"{", 
                    RowBox[{"RandomCoorX", ",", "RandomCoorY"}], "}"}]}], 
                  "]"}]}], 
                RowBox[{"(*", "ADD", "*)"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"RandomCoorX", "=", " ", 
                  RowBox[{"RandomInteger", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "rows"}], "}"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"RandomCoorY", " ", "=", " ", 
                  RowBox[{"RandomInteger", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "cols"}], "}"}], "]"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"PlayTable", "[", 
                 RowBox[{"[", "RandomCoorX", "]"}], "]"}], "[", 
                RowBox[{"[", "RandomCoorY", "]"}], "]"}], "=", "Bomb"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"gridInfo", "[", 
                 RowBox[{"[", "RandomCoorX", "]"}], "]"}], "[", 
                RowBox[{"[", "RandomCoorY", "]"}], "]"}], "=", 
               RowBox[{"-", "100"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"BombCount", "++"}], ";"}]}], " ", 
            RowBox[{"(*", " ", 
             RowBox[{"Increase", " ", "count"}], " ", "*)"}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       StyleBox[
        RowBox[{"(*", " ", 
         RowBox[{
         "Generate", " ", "the", " ", "numbers", " ", "in", " ", "the", " ", 
          "board", " ", "after", " ", "the", " ", "bombs", " ", "have", " ", 
          "been", " ", "placed", " ", "on", " ", "the", " ", "board"}], " ", 
         "*)"}], "Subsection"], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"generateNumbers", "[", "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "r", ",", "c", ",", "rows", ",", "cols", ",", "rr", ",", "cc"}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "This", " ", "methods", " ", "go", " ", "through", " ", "the", " ",
             "rows", " ", "and", " ", "columns", " ", "and", " ", "generated",
             " ", "the", " ", "numbers", " ", "based", " ", "on", " ", "the", 
            " ", "bombs", " ", "in", " ", "their", " ", "3", "x3", " ", 
            "square"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"rows", "=", "numOfRows"}], ";", "\[IndentingNewLine]", 
           RowBox[{"cols", "=", "numOfCols"}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"r", "=", "1"}], ",", 
             RowBox[{"r", "\[LessEqual]", " ", "rows"}], ",", 
             RowBox[{"r", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"c", "=", "1"}], ",", 
                RowBox[{"c", "\[LessEqual]", "cols"}], ",", 
                RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{"r", ",", "c"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "100"}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    "looks", " ", "around", " ", "the", " ", "bomb", " ", 
                    "to", " ", "add", " ", "1", " ", "to", " ", "their", " ", 
                    "number", " ", "and", " ", "eventually", " ", "you", " ", 
                    "will", " ", "have", " ", "the", " ", "sum"}], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"rr", "=", 
                    RowBox[{"-", "1"}]}], ",", 
                    RowBox[{"rr", "\[LessEqual]", "1"}], ",", 
                    RowBox[{"rr", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"cc", "=", 
                    RowBox[{"-", "1"}]}], ",", 
                    RowBox[{"cc", "\[LessEqual]", "1"}], ",", 
                    RowBox[{"cc", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"r", "+", "rr"}], "\[GreaterEqual]", "1"}], "&&", 
                    RowBox[{
                    RowBox[{"c", "+", "cc"}], "\[GreaterEqual]", "1"}], "&&", 
                    RowBox[{
                    RowBox[{"r", "+", "rr"}], "\[LessEqual]", "rows"}], "&&", 
                    RowBox[{
                    RowBox[{"c", "+", "cc"}], "\[LessEqual]", "cols"}], "&&", 
                    RowBox[{
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"r", "+", "rr"}], ",", 
                    RowBox[{"c", "+", "cc"}]}], "]"}], "]"}], "\[NotEqual]", 
                    RowBox[{"-", "100"}]}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"r", "+", "rr"}], ",", 
                    RowBox[{"c", "+", "cc"}]}], "]"}], "]"}], "++"}], ";"}]}],
                     "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       StyleBox[
        RowBox[{"(*", " ", 
         RowBox[{
         "Render", " ", "the", " ", "board", " ", "for", " ", "Play", " ", 
          "Game", " ", "and", " ", "Preset", " ", "Game", " ", "depending", 
          " ", "on", " ", "what", " ", "the", " ", "board", " ", "is", " ", 
          "currently", " ", "with", " ", "the", " ", "proper", " ", "buttons",
           " ", "and", " ", "grid", " ", "functions"}], " ", "*)"}], 
        "Subsection"], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"renderBoard", "[", "]"}], " ", ":=", " ", 
        RowBox[{"DynamicModule", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "r", ",", "c", ",", "dir", ",", "grid", ",", "numrows", ",", 
            "numcols"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"time", "=", 
            RowBox[{"Dynamic", "[", 
             RowBox[{"Floor", "[", 
              RowBox[{"Clock", "[", "9999", "]"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"CreatePalette", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
              RowBox[{"Deploy", "@", 
               RowBox[{"Graphics", "[", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Inset", "[", 
                    RowBox[{"(*", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Floor", "[", 
                    RowBox[{"Clock", "[", "9999", "]"}], "]"}], ",", "Red", 
                    ",", "Bold", ",", "30"}], "]"}]}], "]"}], "*)"}], 
                    RowBox[{"time", ",", 
                    RowBox[{"{", 
                    RowBox[{"1000", ",", "700"}], "}"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    "new", " ", "Module", " ", "that", " ", "renders", " ", 
                    "board", " ", "to", " ", "allow", " ", "it", " ", "to", 
                    " ", "change"}], "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Inset", " ", "each", " ", "of", " ", "the", " ", 
                    "buttons"}], "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Starts", " ", "a", " ", "random", " ", "board", " ", 
                    "just", " ", "like", " ", "you", " ", "are", " ", 
                    "playing", " ", "a", " ", "normal", " ", "game"}], "*)"}],
                     "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Random Board\>\"", ",", "Bold", ",", "Black", ",", 
                    RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], 
                    "]"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"NotebookClose", "[", 
                    RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"playGameScreen", "[", "]"}]}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1000", ",", "600"}], "}"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Resets", " ", "the", " ", "board", " ", "conserves", " ",
                     "the", " ", "board", " ", "but", " ", "it", " ", "will", 
                    " ", "be", " ", "covered", " ", "up"}], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Reset\>\"", ",", "Bold", ",", "Black", ",", 
                    RowBox[{"FontSize", "\[Rule]", "35"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"typeState", "\[Equal]", "\"\<PlayGame\>\""}], 
                    " ", "||", " ", 
                    RowBox[{"typeState", "\[Equal]", "\"\<PresetGame\>\""}]}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"NotebookClose", "[", 
                    RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"makeBoardMainMethod", "[", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"setupMakeBoardScreen", "[", 
                    RowBox[{"numOfRows", ",", "numOfCols", ",", 
                    "\"\<PresetGame\>\"", ",", "gridInfo"}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "400"}], "}"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Allows", " ", "you", " ", "to", " ", "import", " ", "a", 
                    " ", "board"}], "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Import Board\>\"", ",", "Bold", ",", "Black", ",", 
                    RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], 
                    "]"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "grabs", " ", "a", " ", "tll", " ", "file", " ", "that", 
                    " ", "can", " ", "be", " ", 
                    RowBox[{"used", ".", " ", "We"}], " ", 
                    RowBox[{"decided", " ", ".", "tll"}], " ", "because", " ",
                     "it", " ", "was", " ", "unique"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"dir", "=", 
                    RowBox[{"SystemDialogInput", "[", 
                    RowBox[{"\"\<FileOpen\>\"", ",", " ", "\"\<.tll\>\""}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"dir", "\[NotEqual]", "$Canceled"}], ",", ",", 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"grid", "=", 
                    RowBox[{"ReadList", "[", "dir", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gridInfo", "=", 
                    RowBox[{"grid", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "adjusts", " ", "the", " ", "board", " ", "info", " ", 
                    "based", " ", "on", " ", "what", " ", "we", " ", "know"}],
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"numrows", "=", 
                    RowBox[{"Length", "[", "gridInfo", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"numcols", "=", 
                    RowBox[{"Length", "[", 
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"NotebookClose", "[", 
                    RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"makeBoardMainMethod", "[", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"setupMakeBoardScreen", "[", 
                    RowBox[{
                    "numrows", ",", "numcols", ",", "\"\<PresetGame\>\"", ",", 
                    RowBox[{"grid", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}], 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "Queued", " ", "is", " ", "used", " ", "for", " ", 
                    "methods", " ", "that", " ", "take", " ", "a", " ", 
                    "longer", " ", "time", " ", "to", " ", "run", " ", "than",
                     " ", "unusal"}], " ", "*)"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1000", ",", "400"}], "}"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    "This", " ", "is", " ", "a", " ", "button", " ", "that", 
                    " ", "we", " ", "havent", " ", "done", " ", "yet"}], 
                    "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Help Me\>\"", ",", "Bold", ",", "Black", ",", 
                    RowBox[{"FontSize", "\[Rule]", "35"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], 
                    "]"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"numOfButtons", "\[Equal]", 
                    RowBox[{"numOfCols", "*", "numOfRows"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfRows", "*", ".5"}], "]"}], " ", ",", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfCols", "*", ".5"}], "]"}]}], " ", "]"}], 
                    "]"}], "=", 
                    RowBox[{"dynamicClickButton", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfRows", "*", ".5"}], "]"}], ",", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfCols", "*", ".5"}], "]"}]}], "}"}], ",", 
                    "hint"}], " ", "]"}]}], ";"}], " ", "\[IndentingNewLine]",
                     ",", 
                    RowBox[{"helpMeButton", "[", "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "use", " ", "AI", " ", "to", " ", "determine", " ", 
                    "next", " ", "best", " ", "move"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"permanentBombsList", "=", 
                    RowBox[{"{", "}"}]}], ";", 
                    RowBox[{"permanentNotBombsList", "=", 
                    RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "600"}], "}"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    "back", " ", "button", " ", "runs", " ", "the", " ", 
                    "menu", " ", "again"}], "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Back\>\"", ",", "Bold", ",", "Blue", ",", 
                    RowBox[{"FontSize", "\[Rule]", "35"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"NotebookClose", "[", " ", 
                    RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", " ", 
                    RowBox[{"titleScreen", "[", "]"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"150", ",", "200"}], "}"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Creates", " ", "a", " ", "board", " ", "with", " ", 
                    "list"}], "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"GraphicsGrid", "[", 
                    RowBox[{"list", ",", 
                    RowBox[{"Frame", "\[Rule]", "All"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1200", ",", "600"}], "}"}]}], ",", 
                    RowBox[{"Background", "\[Rule]", "LightGray"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", "525"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", "Center"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"500", ",", "500"}], "}"}]}], "]"}]}], 
                  "\[IndentingNewLine]", "}"}], ",", 
                 RowBox[{"PlotRange", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1200"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "800"}], "}"}]}], "}"}]}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"1200", ",", "800"}], "}"}]}]}], "]"}]}], "]"}], 
             ",", 
             RowBox[{"Background", "\[Rule]", "LightBlue"}], ",", 
             RowBox[{"WindowTitle", "\[Rule]", "\"\<Play Game\>\""}], ",", 
             " ", 
             RowBox[{"WindowSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"1200", ",", "800"}], "}"}]}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       StyleBox[
        RowBox[{"(*", " ", 
         RowBox[{
         "Render", " ", "the", " ", "board", " ", "for", " ", "Make", " ", 
          "Board", " ", "depending", " ", "on", " ", "what", " ", "the", " ", 
          "board", " ", "is", " ", "currently", " ", "with", " ", "the", " ", 
          "proper", " ", "buttons", " ", "and", " ", "grid", " ", 
          "functions"}], " ", "*)"}], "Subsection"], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"renderMakeBoard", "[", "]"}], " ", ":=", " ", 
        RowBox[{"DynamicModule", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", "c", ",", "directory", ",", "tempFile"}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CreatePalette", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Back", " ", "button", " ", "to", " ", "the", " ", "main", 
                   " ", "menu"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Back\>\"", ",", "Bold", ",", "Blue", ",", 
                    RowBox[{"FontSize", "\[Rule]", "35"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"NotebookClose", "[", " ", 
                    RowBox[{"ButtonNotebook", "[", "]"}], "]"}], ";", " ", 
                    RowBox[{"titleScreen", "[", "]"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"150", ",", "200"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Saves", " ", "board", " ", "as", " ", "a", " ", "tll", 
                    " ", "file", " ", "in", " ", "any", " ", "place", " ", 
                    "you", " ", "want", " ", "it"}], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Save Board\>\"", ",", "Bold", ",", "Black", ",", 
                    RowBox[{"FontSize", "\[Rule]", "30"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"directory", "=", 
                    RowBox[{"SystemDialogInput", "[", 
                    RowBox[{"\"\<FileSave\>\"", ",", " ", "\"\<.tll\>\""}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"directory", "\[NotEqual]", "$Canceled"}], ",", 
                    ",", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"tempFile", "=", 
                    RowBox[{"CreateFile", "[", "directory", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"generateNumbers", "[", "]"}], ";", " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "complete", " ", "gridinfo", " ", "with", " ", "numbers", 
                    " ", "surrounding", " ", "the", " ", "bombs"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Makes", " ", "numbers", " ", "and", " ", "writes", " ", 
                    "to", " ", "file"}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"WriteString", "[", 
                    RowBox[{"tempFile", ",", "gridInfo"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Close", "[", "tempFile", "]"}], ";"}]}], " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{"close", " ", "the", " ", "file"}], " ", "*)"}], 
                    "\[IndentingNewLine]", "]"}], ";"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "550"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Makes", " ", "a", " ", "random", " ", "board", " ", "in",
                     " ", "the", " ", "grade"}], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Random Board\>\"", ",", "Bold", ",", "Black", ",", 
                    RowBox[{"FontSize", "\[Rule]", " ", "25"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Comic Sans MS\>\""}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"r", "=", "1"}], ",", 
                    RowBox[{"r", "\[LessEqual]", " ", "numOfRows"}], ",", 
                    RowBox[{"r", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"c", "=", "1"}], ",", 
                    RowBox[{"c", "\[LessEqual]", "numOfCols"}], ",", 
                    RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "randomly", " ", "goes", " ", "through", " ", "and", " ", 
                    "adds", " ", "bombs", " ", "throughout", " ", "the", " ", 
                    "table"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "8"}], "}"}], "]"}], "\[Equal]", " ", 
                    "4"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{"r", ",", "c"}], "]"}], "]"}], "=", 
                    RowBox[{"-", "100"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"r", ",", "c"}], "]"}], "]"}], "=", 
                    RowBox[{"-", "100"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{"r", ",", "c"}], "]"}], "]"}], "=", 
                    RowBox[{"dynamicClickButton", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"r", ",", "c"}], "}"}], ",", "Bomb"}], "]"}]}]}], 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{"1", "/", "8"}], " ", "chance", " ", "for", " ", 
                    "any", " ", "given", " ", "square", " ", "to", " ", "be", 
                    " ", "a", " ", "bomb"}], " ", "*)"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{"r", ",", "c"}], "]"}], "]"}], "=", "0"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"r", ",", "c"}], "]"}], "]"}], "=", "0"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{"r", ",", "c"}], "]"}], "]"}], "=", 
                    RowBox[{"dynamicClickButton", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"r", ",", "c"}], "}"}], ",", "empty"}], "]"}]}], 
                    ";"}]}], 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{"7", "/", "8"}], " ", "chance", " ", "for", " ", 
                    "any", " ", "given", " ", "square", " ", "to", " ", "be", 
                    " ", "safe"}], " ", "*)"}], "\[IndentingNewLine]", "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Allows", " ", "the", " ", "middle", " ", "square", " ", 
                    "to", " ", "not", " ", "be", " ", "a", " ", "bomb", " ", 
                    "so", " ", "that", " ", "there", " ", "can", " ", 
                    "always", " ", "be", " ", "one", " ", "non"}], "-", 
                    "bomb"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfRows", "*", ".5"}], "]"}], ",", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfCols", "*", ".5"}], "]"}]}], "]"}], "]"}], 
                    "=", 
                    RowBox[{"Style", "[", "\"\<\>\"", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfRows", "*", ".5"}], "]"}], ",", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfCols", "*", ".5"}], "]"}]}], "]"}], "]"}], 
                    "=", "0"}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfRows", "*", ".5"}], "]"}], ",", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"numOfCols", "*", ".5"}], "]"}]}], "]"}], "]"}], 
                    "=", "0"}], ";"}], "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"200", ",", "80"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1000", ",", "550"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{
                   "Displays", " ", "a", " ", "grid", " ", "of", " ", 
                    "list"}], "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"GraphicsGrid", "[", 
                    RowBox[{"list", ",", 
                    RowBox[{"Frame", "\[Rule]", "All"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1200", ",", "600"}], "}"}]}], ",", 
                    RowBox[{"Background", "\[Rule]", "LightGray"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", "525"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", "Center"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"500", ",", "500"}], "}"}]}], "]"}]}], 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1200"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "800"}], "}"}]}], "}"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"1200", ",", "800"}], "}"}]}]}], "]"}], "]"}], ",", 
             RowBox[{"Background", "\[Rule]", "LightBlue"}], ",", 
             RowBox[{"WindowTitle", "\[Rule]", "\"\<Make Board\>\""}], ",", 
             " ", 
             RowBox[{"WindowSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"1200", ",", "800"}], "}"}]}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       StyleBox[
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "If", " ", "the", " ", "button", " ", "you", " ", "click", " ", 
           "is", " ", "0"}], ",", " ", 
          RowBox[{
          "we", " ", "must", " ", "open", " ", "the", " ", "board", " ", 
           RowBox[{"further", ".", " ", "To"}], " ", "do", " ", "this"}], ",",
           " ", 
          RowBox[{
          "we", " ", "have", " ", "to", " ", "use", " ", "recursion"}]}], " ",
          "*)"}], "Subsection"], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"OpenBoard", "[", 
         RowBox[{"r_", ",", "c_"}], "]"}], ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"tempNumber", ",", " ", 
            RowBox[{"rowsList", " ", "=", " ", 
             RowBox[{"Length", "[", "list", "]"}]}], ",", 
            RowBox[{"colsList", " ", "=", " ", 
             RowBox[{"Length", "[", 
              RowBox[{"list", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "it", " ", "says", " ", "that", " ", "that", " ", "space", " ", 
             "is", " ", "blank", " ", "and", " ", "then", " ", "renders", " ",
              "all", " ", "of", " ", "the", " ", "spaces", " ", "around", " ",
              "it", " ", "to", " ", "open", " ", "up", " ", "whats", " ", 
             "around", " ", "it"}], ",", " ", 
            RowBox[{
            "it", " ", "will", " ", "never", " ", "be", " ", "a", " ", "bomb",
              " ", "because", " ", "if", " ", "it", " ", "was", " ", "then", 
             " ", "it", " ", "would", " ", "be", " ", "a", " ", "number", " ",
              "not", " ", "a", " ", "blank"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"r", "\[GreaterEqual]", " ", "1"}], "&&", 
              RowBox[{"c", "\[GreaterEqual]", " ", "1"}], "&&", 
              RowBox[{"r", "\[LessEqual]", "rowsList"}], "&&", 
              RowBox[{"c", "\[LessEqual]", "colsList"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{"r", ",", "c"}], "]"}], "]"}], "=", 
               RowBox[{"Style", "[", "\"\<\>\"", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"numOfButtons", "--"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"OneMoreTime", "[", 
            RowBox[{
             RowBox[{"r", "-", "1"}], ",", 
             RowBox[{"c", "-", "1"}]}], "]"}], ";", 
           RowBox[{"(*", " ", 
            RowBox[{"TOP", " ", "LEFT", " ", "CORNER"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"OneMoreTime", "[", 
            RowBox[{
             RowBox[{"r", "-", "1"}], ",", "c"}], "]"}], ";", 
           RowBox[{"(*", " ", 
            RowBox[{"DIRECTLY", " ", "ABOVE"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"OneMoreTime", "[", 
            RowBox[{
             RowBox[{"r", "-", "1"}], ",", 
             RowBox[{"c", "+", "1"}]}], "]"}], ";", 
           RowBox[{"(*", " ", 
            RowBox[{"TOP", " ", "RIGHT", " ", "CORNER"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"OneMoreTime", "[", 
            RowBox[{"r", ",", 
             RowBox[{"c", "+", "1"}]}], "]"}], ";", 
           RowBox[{"(*", " ", 
            RowBox[{"DIRECTLY", " ", "RIGHT"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"OneMoreTime", "[", 
            RowBox[{
             RowBox[{"r", "+", "1"}], ",", 
             RowBox[{"c", "+", "1"}]}], "]"}], ";", 
           RowBox[{"(*", " ", 
            RowBox[{"BOTTOM", " ", "RIGHT", " ", "CORNER"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"OneMoreTime", "[", 
            RowBox[{
             RowBox[{"r", "+", "1"}], ",", "c"}], "]"}], ";", 
           RowBox[{"(*", " ", 
            RowBox[{"DIRECTLY", " ", "BELOW"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"OneMoreTime", "[", 
            RowBox[{
             RowBox[{"r", "+", "1"}], ",", 
             RowBox[{"c", "-", "1"}]}], "]"}], ";", 
           RowBox[{"(*", " ", 
            RowBox[{"BOTTOM", " ", "LEFT", " ", "CORNER"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"OneMoreTime", "[", 
            RowBox[{"r", ",", 
             RowBox[{"c", "-", "1"}]}], "]"}], ";"}]}], 
         RowBox[{"(*", " ", 
          RowBox[{"DIRECTLY", " ", "LEFT"}], " ", "*)"}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       StyleBox[
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "OneMoreTime", " ", "is", " ", "recursive", " ", "between", " ", 
           "the", " ", "method", " ", "OpenBoard", " ", "and", " ", 
           RowBox[{"OneMoreTime", ".", " ", "This"}], " ", "recursion", " ", 
           "stops", " ", "when", " ", "a", " ", "non"}], "-", 
          RowBox[{
          "zero", " ", "is", " ", "printed", " ", "for", " ", "all", " ", 
           "the", " ", "directions"}]}], " ", "*)"}], "Subsection"], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"OneMoreTime", "[", 
         RowBox[{"rowsXtra_", ",", " ", "colsXtra_"}], "]"}], ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "it", " ", "is", " ", "a", " ", "function", " ", "that", " ", "is",
             " ", "somewhat", " ", "of", " ", "a", " ", "recursive", " ", 
            "method", " ", "between", " ", "openboard", " ", "because", " ", 
            "it", " ", "checks", " ", "if", " ", "the", " ", "box", " ", "is",
             " ", "a", " ", "zero", " ", "then", " ", "it", " ", "just", " ", 
            "keeps", " ", "opening", " ", "it", " ", 
            RowBox[{"up", ".", " ", "else"}], " ", "it", " ", 
            "\[IndentingNewLine]", "renders", " ", "that", " ", "part", " ", 
            "of", " ", "the", " ", 
            RowBox[{"board", "."}]}], "\[IndentingNewLine]", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"rowsXtra", "\[GreaterEqual]", " ", "1"}], "&&", 
              RowBox[{"colsXtra", "\[GreaterEqual]", " ", "1"}], "&&", " ", 
              RowBox[{"rowsXtra", "\[LessEqual]", "  ", 
               RowBox[{"Length", "[", "startBoard", "]"}]}], "&&", 
              RowBox[{"colsXtra", "\[LessEqual]", " ", 
               RowBox[{"Length", "[", 
                RowBox[{"startBoard", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "&&", " ", 
              RowBox[{
               RowBox[{"startBoard", "[", 
                RowBox[{"[", 
                 RowBox[{"rowsXtra", ",", "colsXtra"}], "]"}], "]"}], 
               "\[Equal]", 
               RowBox[{"-", "1"}]}]}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"gridInfo", "[", 
                  RowBox[{"[", 
                   RowBox[{"rowsXtra", ",", "colsXtra"}], "]"}], "]"}], 
                 "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"startBoard", "[", 
                   RowBox[{"[", 
                    RowBox[{"rowsXtra", ",", "colsXtra"}], "]"}], "]"}], "=", 
                  "0"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"OpenBoard", "[", 
                  RowBox[{"rowsXtra", ",", "colsXtra"}], "]"}], ";"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "aligns", " ", "everything", " ", "as", " ", "if", " ", "it",
                   " ", "were", " ", "a", " ", "normal", " ", "number"}], 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"startBoard", "[", 
                   RowBox[{"[", 
                    RowBox[{"rowsXtra", ",", "colsXtra"}], "]"}], "]"}], "=", 
                  RowBox[{"gridInfo", "[", 
                   RowBox[{"[", 
                    RowBox[{"rowsXtra", ",", "colsXtra"}], "]"}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"NumberLook", "[", 
                  RowBox[{
                   RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{"rowsXtra", ",", "colsXtra"}], "]"}], "]"}], ",", 
                   "rowsXtra", ",", "colsXtra"}], "]"}]}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       StyleBox[
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"Change", " ", "list"}], ",", " ", 
          RowBox[{
          "which", " ", "in", " ", "turn", " ", "changes", " ", "the", " ", 
           "render", " ", "of", " ", "the", " ", 
           RowBox[{"board", ".", " ", "This"}], " ", "depends", " ", "on", 
           " ", "what", " ", "number", " ", "is", " ", "hidden", " ", 
           "behind", " ", "the", " ", "buttons", " ", "and", " ", "will", " ",
            "be", " ", "presented", " ", "in", " ", "different", " ", 
           "styles"}]}], " ", "*)"}], "Subsection",
        FontWeight->"Bold"], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NumberLook", "[", 
         RowBox[{"tempNumber_", ",", "i_", ",", "j_"}], "]"}], ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Which", "[", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "Which", " ", "statement", " ", "that", " ", "looks", " ", "for",
               " ", "which", " ", "number", " ", "it", " ", "is", " ", "and", 
              " ", "then", " ", "displays", " ", "that", " ", "number"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"tempNumber", "\[Equal]", "0"}], ",", 
             RowBox[{"OpenBoard", "[", 
              RowBox[{"i", ",", "j"}], "]"}], ",", 
             RowBox[{"(*", 
              RowBox[{
              "Calls", " ", "open", " ", "board", " ", "to", " ", "start", 
               " ", "the", " ", "recursion", " ", "to", " ", "open", " ", 
               "up", " ", "the", " ", "board"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"tempNumber", "\[Equal]", "1"}], ",", 
             RowBox[{
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<1\>\"", ",", "Blue", ",", 
                RowBox[{"FontSize", "\[Rule]", "30"}], ",", " ", "Bold"}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"tempNumber", "\[Equal]", 
              RowBox[{"-", "100"}]}], ",", " ", 
             RowBox[{
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "Bomb"}], ",", 
             RowBox[{"(*", 
              RowBox[{"Calls", " ", "the", " ", "bomb", " ", "graphic"}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"tempNumber", "\[Equal]", "2"}], ",", " ", 
             RowBox[{
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<2\>\"", ",", "Green", ",", 
                RowBox[{"FontSize", "\[Rule]", "30"}], ",", " ", "Bold"}], 
               "]"}]}], ",", 
             RowBox[{"(*", 
              RowBox[{"REST", " ", "DISPLAYS", " ", "NUMBERS"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"tempNumber", "\[Equal]", "3"}], ",", " ", 
             RowBox[{
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<3\>\"", ",", "Red", ",", 
                RowBox[{"FontSize", "\[Rule]", "30"}], ",", " ", "Bold"}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"tempNumber", "\[Equal]", "4"}], ",", " ", 
             RowBox[{
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<4\>\"", ",", "Purple", ",", 
                RowBox[{"FontSize", "\[Rule]", "30"}], ",", " ", "Bold"}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"tempNumber", "\[Equal]", "5"}], ",", " ", 
             RowBox[{
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<5\>\"", ",", "Magenta", ",", 
                RowBox[{"FontSize", "\[Rule]", "30"}], ",", " ", "Bold"}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"tempNumber", "\[Equal]", "6"}], ",", " ", 
             RowBox[{
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<6\>\"", ",", 
                RowBox[{"Lighter", "[", 
                 RowBox[{"Blue", ",", ".5"}], "]"}], ",", 
                RowBox[{"FontSize", "\[Rule]", "30"}], ",", " ", "Bold"}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"tempNumber", "\[Equal]", "7"}], ",", " ", 
             RowBox[{
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<7\>\"", ",", "Black", ",", 
                RowBox[{"FontSize", "\[Rule]", "30"}], ",", " ", "Bold"}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"tempNumber", "\[Equal]", "8"}], ",", " ", 
             RowBox[{
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<8\>\"", ",", "Gray", ",", 
                RowBox[{"FontSize", "\[Rule]", "30"}], ",", " ", "Bold"}], 
               "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"tempNumber", "\[NotEqual]", "0"}], ",", 
             RowBox[{"numOfButtons", "--"}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Used", " ", "to", " ", "provide", " ", "user", " ", "with", " ", 
         "next", " ", "best", " ", "move", " ", "choice", " ", "to", " ", 
         "select"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"helpMeButton", "[", "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "probsList", ",", " ", "surround3x3", ",", " ", "buttons3x3", ",", 
            " ", "definateBombs3x3", ",", " ", "definateNotBombs3x3", ",", 
            " ", "unsureButtons3x3", ",", "row", ",", "col", ",", "surrR", 
            ",", "surrC", ",", " ", "numerator", ",", "denomenator", ",", 
            "fracProb", ",", "unusedCount", ",", "tempCoord", ",", "maxProbs",
             ",", "maxProbsCoord", ",", "i", ",", "localBombsList", ",", 
            "localNotBombsList", ",", "buttonsLeft"}], "}"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"probsList", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"1", ",", "numOfRows", ",", "numOfCols"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"buttonsLeft", "=", "0"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"STOPPING", " ", "STATE"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"row", "=", "1"}], ",", 
             RowBox[{"row", "\[LessEqual]", "numOfRows"}], ",", 
             RowBox[{"row", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"col", "=", "1"}], ",", 
                RowBox[{"col", "\[LessEqual]", "numOfCols"}], ",", 
                RowBox[{"col", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "100"}]}], ",", " ", 
                   RowBox[{"(*", " ", 
                    RowBox[{"we", " ", "lost"}], " ", "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Return", "[", "\"\<YOU LOST!! QUIT!!\>\"", "]"}],
                     ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"buttonsLeft", "++"}], ";"}]}], " ", 
                  RowBox[{"(*", " ", "unclicked", " ", "*)"}], 
                  "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"2", "ND", " ", "STOPPING", " ", "STATE"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"buttonsLeft", "\[Equal]", " ", "numOfBombs"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Return", "[", "\"\<YOU WON!! STOP!!\>\"", "]"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"If", " ", "it", " ", "is", " ", "a", " ", "bomb"}], ",",
              " ", 
             RowBox[{"set", " ", "probility", " ", "to", " ", "0", " ", 
              RowBox[{"(", 
               RowBox[{
               "Probability", " ", "of", " ", "being", " ", "not", " ", "a", 
                " ", "bomb"}], ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"row", "=", "1"}], ",", 
             RowBox[{"row", "\[LessEqual]", "numOfRows"}], ",", 
             RowBox[{"row", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"col", "=", "1"}], ",", 
                RowBox[{"col", "\[LessEqual]", "numOfCols"}], ",", 
                RowBox[{"col", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{"permanentBombsList", ",", 
                    RowBox[{"{", 
                    RowBox[{"row", ",", "col"}], "}"}]}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"probsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}], "=", "0"}]}], 
                  "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], " ", 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"localBombsList", "=", 
            RowBox[{"{", "}"}]}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "local", " ", "bomb", " ", "list", " ", "for", " ", 
             "interation"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"localNotBombsList", "=", 
            RowBox[{"{", "}"}]}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "local", " ", "not", " ", "bomb", " ", "list", " ", "for", " ", 
             "interation"}], " ", "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "SET", " ", "UP", " ", "3", "X3", " ", "GRIDS", " ", "FOR", " ", 
             "FUTURE", " ", 
             RowBox[{"USE", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"row", "=", "1"}], ",", 
             RowBox[{"row", "\[LessEqual]", "numOfRows"}], ",", 
             RowBox[{"row", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"col", "=", "1"}], ",", 
                RowBox[{"col", "\[LessEqual]", "numOfCols"}], ",", 
                RowBox[{"col", "++"}], ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"surround3x3", "=", 
                  RowBox[{"{", "}"}]}], ";", " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{"EVERYTHING", " ", "touching", " ", "you"}], " ", 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"buttons3x3", "=", 
                  RowBox[{"{", "}"}]}], ";", " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{"BUTTONS", " ", "touching", " ", "you"}], " ", 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"definateBombs3x3", "=", 
                  RowBox[{"{", "}"}]}], ";", " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "DEFINATE", " ", "BOMBS", " ", "touching", " ", "you"}], 
                  " ", "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"definateNotBombs3x3", "=", 
                  RowBox[{"{", "}"}]}], ";", " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "DEFINATE", "  ", "NOT", " ", "BOMBS", " ", "touching", " ",
                    "you"}], " ", "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"unsureButtons3x3", "=", 
                  RowBox[{"{", "}"}]}], ";", " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "UNSURE", " ", "BUTTONS", " ", "touching", " ", "you"}], 
                  " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}], 
                    "\[GreaterEqual]", "1"}], "&&", 
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}], "\[LessEqual]",
                     "8"}]}], ",", " ", 
                   RowBox[{"(*", " ", 
                    RowBox[{"If", 
                    RowBox[{"(", "number", ")"}]}], " ", "*)"}], 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    "MAKE", " ", "ALL", " ", "3", "X3", " ", "LISTS"}], " ", 
                    "*)"}], "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"surrR", "=", 
                    RowBox[{"-", "1"}]}], ",", 
                    RowBox[{"surrR", "\[LessEqual]", "1"}], ",", 
                    RowBox[{"surrR", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"surrC", "=", 
                    RowBox[{"-", "1"}]}], ",", 
                    RowBox[{"surrC", "\[LessEqual]", "1"}], ",", 
                    RowBox[{"surrC", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], "\[GreaterEqual]", "1"}], 
                    " ", "&&", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], "\[LessEqual]", " ", 
                    "numOfRows"}], " ", "&&", " ", 
                    RowBox[{
                    RowBox[{"col", "+", "surrC"}], "\[GreaterEqual]", "1"}], 
                    " ", "&&", 
                    RowBox[{
                    RowBox[{"col", "+", "surrC"}], "\[LessEqual]", " ", 
                    "numOfCols"}]}], ",", 
                    RowBox[{"(*", " ", 
                    RowBox[{"In", " ", "bounds"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"surround3x3", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}], ";", " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{"Make", " ", "surrounding", " ", "list"}], " ", 
                    "*)"}], "\[IndentingNewLine]", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"buttons3x3", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}], ";"}]}], 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "list", " ", "of", " ", "3", "x3", " ", "buttons"}], " ", 
                    "*)"}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "1"}]}], "&&", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"permanentBombsList", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"definateBombs3x3", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}], ";"}]}], 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "list", " ", "of", " ", "3", "x3", " ", "definatebombs"}],
                     " ", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "1"}]}], "&&", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"permanentNotBombsList", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"definateNotBombs3x3", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}], ";"}]}], 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "list", " ", "of", " ", "3", "x3", " ", 
                    "definatenotbombs"}], " ", "*)"}], "\[IndentingNewLine]", 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "1"}]}], " ", "&&", 
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"permanentBombsList", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}]}], " ", "&&", 
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"permanentNotBombsList", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"unsureButtons3x3", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}], ";"}]}], 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{
                    "list", " ", "of", " ", "3", "x3", " ", "unsure", " ", 
                    "buttons"}], " ", "-", " ", 
                    RowBox[{
                    "neither", " ", "bomb", " ", "nor", " ", "not", " ", 
                    "bomb"}]}], " ", "*)"}], "\[IndentingNewLine]", "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<(r, c): (\>\"", ",", "row", ",", "\"\<, \>\"", ",", 
                    " ", "col", ",", "\"\<)\>\""}], "]"}], ";"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<surround3x3: \>\"", ",", "surround3x3"}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<buttons3x3: \>\"", ",", " ", "buttons3x3"}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<definateBombs3x3: \>\"", ",", " ", 
                    "definateBombs3x3"}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<definateNotBombs3x3: \>\"", ",", " ", 
                    "definateNotBombs3x3"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<unsureButtons3x3: \>\"", ",", " ", 
                    "unsureButtons3x3"}], "]"}], ";"}], "*)"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "]"}], ";"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"numerator", "=", 
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}], "-", 
                    RowBox[{"Length", "[", "definateBombs3x3", "]"}]}]}], ";",
                     " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "number", " ", "of", " ", "unsure", " ", "buttons", " ", 
                    "bombs"}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"denomenator", "=", 
                    RowBox[{"Length", "[", "unsureButtons3x3", "]"}]}], ";", 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "number", " ", "of", " ", "buttons", " ", "available"}], 
                    " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"denomenator", "\[NotEqual]", " ", "0"}], ",", 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{"a", " ", "button", " ", "is", " ", "available"}],
                     " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"fracProb", "=", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{"numerator", "/", "denomenator"}], ")"}]}]}], ";",
                     " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "probability", " ", "of", " ", "being", " ", "a", " ", 
                    "bomb"}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<fraction: \>\"", ",", "fracProb"}], "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", "]"}], ";"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"unusedCount", "=", "1"}], ",", 
                    RowBox[{"unusedCount", "\[LessEqual]", 
                    RowBox[{"Length", "[", "unsureButtons3x3", "]"}]}], ",", 
                    RowBox[{"unusedCount", "++"}], ",", "  ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "multiply", " ", "the", " ", "old", " ", "probility", " ",
                     "with", " ", "the", " ", "new", " ", "determined", " ", 
                    "weighted", " ", "probability", " ", "based", " ", "on", 
                    " ", "fracProb"}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"tempCoord", " ", "=", 
                    RowBox[{"unsureButtons3x3", "[", 
                    RowBox[{"[", "unusedCount", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"probsList", "[", 
                    RowBox[{"[", "  ", 
                    RowBox[{
                    RowBox[{"tempCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"tempCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], "]"}], "*=",
                     "fracProb"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fracProb", "\[Equal]", "0"}], ",", " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{
                    "if", " ", "the", " ", "probability", " ", "is", " ", 
                    "0"}], ",", " ", 
                    RowBox[{
                    "it", " ", "is", " ", "FOR", " ", "SURE", " ", "a", " ", 
                    "bomb"}]}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"permanentBombsList", ",", "tempCoord"}], "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"localBombsList", ",", "tempCoord"}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fracProb", "\[Equal]", "1"}], ",", " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{
                    "if", " ", "the", " ", "probability", " ", "is", " ", 
                    "1"}], ",", " ", 
                    RowBox[{
                    "it", " ", "is", " ", "FOR", " ", "SURE", " ", "NOT", " ",
                     "a", " ", "bomb"}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"permanentNotBombsList", ",", "tempCoord"}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"localNotBombsList", ",", "tempCoord"}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "localNotBombsList", "]"}], "\[Equal]", 
               "0"}], "&&", 
              RowBox[{
               RowBox[{"Length", "[", "localBombsList", "]"}], "\[Equal]", 
               "0"}]}], ",", " ", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
               "If", " ", "we", " ", "found", " ", "no", " ", "for", " ", 
                "sure", " ", "bombs", " ", "or", " ", "for", " ", "sure", " ",
                 "not", " ", "bombs"}], ",", " ", 
               RowBox[{
               "then", " ", "we", " ", "must", " ", "choose", " ", "the", " ",
                 "highest", " ", "probility", " ", "box"}]}], " ", "*)"}], 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"maxProbs", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{"maxProbsCoord", "=", 
               RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "Determine", " ", "the", " ", "maximum", " ", "probility", " ",
                 "in", " ", "the", " ", "grid", " ", "that", " ", 
                RowBox[{"doesn", "'"}], "t", " ", "have", " ", "a", " ", 
                "probility", " ", "of", " ", "1", " ", 
                RowBox[{"(", 
                 RowBox[{"not", " ", "evaluated"}], ")"}]}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"row", "=", "1"}], ",", 
                RowBox[{"row", "\[LessEqual]", "numOfRows"}], ",", 
                RowBox[{"row", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"col", "=", "1"}], ",", 
                   RowBox[{"col", "\[LessEqual]", "numOfCols"}], ",", 
                   RowBox[{"col", "++"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxProbs", "<", 
                    RowBox[{"probsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"probsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}], "<", "1"}]}], 
                    ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"maxProbs", "=", 
                    RowBox[{"probsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"maxProbsCoord", "=", 
                    RowBox[{"{", 
                    RowBox[{"row", ",", "col"}], "}"}]}], ";"}]}], "  ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "best", " ", "next", " ", "guess", " ", "based", " ", 
                    "on", " ", "probility"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "maxProbsCoord", "]"}], ";"}], 
                    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"startBoard", "[", 
                  RowBox[{"[", "  ", 
                   RowBox[{
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], "]"}], 
                 "\[Equal]", 
                 RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "Change", " ", "the", " ", "board", " ", "using", " ", 
                  "NumberLook", " ", "and", " ", "gridInfo", " ", 
                  RowBox[{"(", 
                   RowBox[{"generated", " ", "board", " ", "information"}], 
                   ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{"\"\<Open: \>\"", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], " ", "]"}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"list", "[", 
                   RowBox[{"[", " ", 
                    RowBox[{
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], "]"}], "=", 
                  RowBox[{"dynamicClickButton", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "hint"}], 
                   " ", "]"}]}], ";", " ", "\[IndentingNewLine]", 
                 RowBox[{
                 "Return", "[", "\"\<I helped!... highest probs\>\"", "]"}], 
                 ";"}]}], "\[IndentingNewLine]", "]"}]}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "localNotBombsList", "]"}], ">", 
                 "0"}], ",", " ", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "We", " ", "have", " ", "a", " ", "for", " ", "sure", " ", 
                  "not", " ", 
                  RowBox[{"bomb", "!"}], " ", "PICK", " ", "IT"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Print", "[", "\"\<open all not bombs\>\"", "]"}], 
                  ";"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"i", "=", "1"}], ",", 
                   RowBox[{"i", "\[LessEqual]", 
                    RowBox[{"Length", "[", "localNotBombsList", "]"}]}], ",", 
                   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", " ", 
                    RowBox[{
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], " ", "]"}], 
                    "]"}], "\[Equal]", 
                    RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<Opening NB(s): \>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}]}], " ", 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"list", "[", 
                    RowBox[{"[", " ", 
                    RowBox[{
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], " ", "]"}], 
                    "]"}], "=", 
                    RowBox[{"dynamicClickButton", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", " ", 
                    "hint"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    "Return", "[", "\"\<I helped!... not bombs\>\"", "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}]}], 
                  "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"localNotBombsList", "=", 
                  RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"helpMeButton", "[", "]"}], ";"}]}], " ", 
         RowBox[{"(*", " ", 
          RowBox[{"recursive", " ", "method"}], " ", "*)"}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"makeProbsList", "[", "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "probsList", ",", " ", "surround3x3", ",", " ", "buttons3x3", ",", 
            " ", "definateBombs3x3", ",", " ", "definateNotBombs3x3", ",", 
            " ", "unsureButtons3x3", ",", "row", ",", "col", ",", "surrR", 
            ",", "surrC", ",", " ", "numerator", ",", "denomenator", ",", 
            "fracProb", ",", "unusedCount", ",", "tempCoord", ",", "maxProbs",
             ",", "maxProbsCoord", ",", "i", ",", "localBombsList", ",", 
            "localNotBombsList", ",", "buttonsLeft"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"probsList", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"1", ",", "numOfRows", ",", "numOfCols"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"buttonsLeft", "=", "0"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"STOPPING", " ", "STATE"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"row", "=", "1"}], ",", 
             RowBox[{"row", "\[LessEqual]", "numOfRows"}], ",", 
             RowBox[{"row", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"col", "=", "1"}], ",", 
                RowBox[{"col", "\[LessEqual]", "numOfCols"}], ",", 
                RowBox[{"col", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "100"}]}], ",", " ", 
                   RowBox[{"(*", " ", 
                    RowBox[{"we", " ", "lost"}], " ", "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Return", "[", "\"\<YOU LOST!! QUIT!!\>\"", "]"}],
                     ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"buttonsLeft", "++"}], ";"}]}], " ", 
                  RowBox[{"(*", " ", "unclicked", " ", "*)"}], 
                  "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"2", "ND", " ", "STOPPING", " ", "STATE"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"buttonsLeft", "\[Equal]", " ", "numOfBombs"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Return", "[", "\"\<YOU WON!! STOP!!\>\"", "]"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"If", " ", "it", " ", "is", " ", "a", " ", "bomb"}], ",",
              " ", 
             RowBox[{"set", " ", "probility", " ", "to", " ", "0", " ", 
              RowBox[{"(", 
               RowBox[{
               "Probability", " ", "of", " ", "being", " ", "not", " ", "a", 
                " ", "bomb"}], ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"row", "=", "1"}], ",", 
             RowBox[{"row", "\[LessEqual]", "numOfRows"}], ",", 
             RowBox[{"row", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"col", "=", "1"}], ",", 
                RowBox[{"col", "\[LessEqual]", "numOfCols"}], ",", 
                RowBox[{"col", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{"permanentBombsList", ",", 
                    RowBox[{"{", 
                    RowBox[{"row", ",", "col"}], "}"}]}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"probsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}], "=", "0"}]}], 
                  "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], " ", 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"localBombsList", "=", 
            RowBox[{"{", "}"}]}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "local", " ", "bomb", " ", "list", " ", "for", " ", 
             "interation"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"localNotBombsList", "=", 
            RowBox[{"{", "}"}]}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "local", " ", "not", " ", "bomb", " ", "list", " ", "for", " ", 
             "interation"}], " ", "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "SET", " ", "UP", " ", "3", "X3", " ", "GRIDS", " ", "FOR", " ", 
             "FUTURE", " ", 
             RowBox[{"USE", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"row", "=", "1"}], ",", 
             RowBox[{"row", "\[LessEqual]", "numOfRows"}], ",", 
             RowBox[{"row", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"col", "=", "1"}], ",", 
                RowBox[{"col", "\[LessEqual]", "numOfCols"}], ",", 
                RowBox[{"col", "++"}], ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"surround3x3", "=", 
                  RowBox[{"{", "}"}]}], ";", " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{"EVERYTHING", " ", "touching", " ", "you"}], " ", 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"buttons3x3", "=", 
                  RowBox[{"{", "}"}]}], ";", " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{"BUTTONS", " ", "touching", " ", "you"}], " ", 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"definateBombs3x3", "=", 
                  RowBox[{"{", "}"}]}], ";", " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "DEFINATE", " ", "BOMBS", " ", "touching", " ", "you"}], 
                  " ", "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"definateNotBombs3x3", "=", 
                  RowBox[{"{", "}"}]}], ";", " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "DEFINATE", "  ", "NOT", " ", "BOMBS", " ", "touching", " ",
                    "you"}], " ", "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"unsureButtons3x3", "=", 
                  RowBox[{"{", "}"}]}], ";", " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "UNSURE", " ", "BUTTONS", " ", "touching", " ", "you"}], 
                  " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}], 
                    "\[GreaterEqual]", "1"}], "&&", 
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}], "\[LessEqual]",
                     "8"}]}], ",", " ", 
                   RowBox[{"(*", " ", 
                    RowBox[{"If", 
                    RowBox[{"(", "number", ")"}]}], " ", "*)"}], 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    "MAKE", " ", "ALL", " ", "3", "X3", " ", "LISTS"}], " ", 
                    "*)"}], "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"surrR", "=", 
                    RowBox[{"-", "1"}]}], ",", 
                    RowBox[{"surrR", "\[LessEqual]", "1"}], ",", 
                    RowBox[{"surrR", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"surrC", "=", 
                    RowBox[{"-", "1"}]}], ",", 
                    RowBox[{"surrC", "\[LessEqual]", "1"}], ",", 
                    RowBox[{"surrC", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], "\[GreaterEqual]", "1"}], 
                    " ", "&&", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], "\[LessEqual]", " ", 
                    "numOfRows"}], " ", "&&", " ", 
                    RowBox[{
                    RowBox[{"col", "+", "surrC"}], "\[GreaterEqual]", "1"}], 
                    " ", "&&", 
                    RowBox[{
                    RowBox[{"col", "+", "surrC"}], "\[LessEqual]", " ", 
                    "numOfCols"}]}], ",", 
                    RowBox[{"(*", " ", 
                    RowBox[{"In", " ", "bounds"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"surround3x3", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}], ";", " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{"Make", " ", "surrounding", " ", "list"}], " ", 
                    "*)"}], "\[IndentingNewLine]", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"buttons3x3", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}], ";"}]}], 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "list", " ", "of", " ", "3", "x3", " ", "buttons"}], " ", 
                    "*)"}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "1"}]}], "&&", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"permanentBombsList", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"definateBombs3x3", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}], ";"}]}], 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "list", " ", "of", " ", "3", "x3", " ", "definatebombs"}],
                     " ", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "1"}]}], "&&", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"permanentNotBombsList", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"definateNotBombs3x3", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}], ";"}]}], 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "list", " ", "of", " ", "3", "x3", " ", 
                    "definatenotbombs"}], " ", "*)"}], "\[IndentingNewLine]", 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"-", "1"}]}], " ", "&&", 
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"permanentBombsList", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}]}], " ", "&&", 
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"permanentNotBombsList", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"unsureButtons3x3", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"row", "+", "surrR"}], ",", " ", 
                    RowBox[{"col", "+", "surrC"}]}], "}"}]}], "]"}], ";"}]}], 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{
                    "list", " ", "of", " ", "3", "x3", " ", "unsure", " ", 
                    "buttons"}], " ", "-", " ", 
                    RowBox[{
                    "neither", " ", "bomb", " ", "nor", " ", "not", " ", 
                    "bomb"}]}], " ", "*)"}], "\[IndentingNewLine]", "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<(r, c): (\>\"", ",", "row", ",", "\"\<, \>\"", ",", 
                    " ", "col", ",", "\"\<)\>\""}], "]"}], ";"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<surround3x3: \>\"", ",", "surround3x3"}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<buttons3x3: \>\"", ",", " ", "buttons3x3"}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<definateBombs3x3: \>\"", ",", " ", 
                    "definateBombs3x3"}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<definateNotBombs3x3: \>\"", ",", " ", 
                    "definateNotBombs3x3"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<unsureButtons3x3: \>\"", ",", " ", 
                    "unsureButtons3x3"}], "]"}], ";"}], "*)"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "]"}], ";"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"numerator", "=", 
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}], "-", 
                    RowBox[{"Length", "[", "definateBombs3x3", "]"}]}]}], ";",
                     " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "number", " ", "of", " ", "unsure", " ", "buttons", " ", 
                    "bombs"}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"denomenator", "=", 
                    RowBox[{"Length", "[", "unsureButtons3x3", "]"}]}], ";", 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "number", " ", "of", " ", "buttons", " ", "available"}], 
                    " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"denomenator", "\[NotEqual]", " ", "0"}], ",", 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{"a", " ", "button", " ", "is", " ", "available"}],
                     " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"fracProb", "=", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{"numerator", "/", "denomenator"}], ")"}]}]}], ";",
                     " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "probability", " ", "of", " ", "being", " ", "a", " ", 
                    "bomb"}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<fraction: \>\"", ",", "fracProb"}], "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", "]"}], ";"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"unusedCount", "=", "1"}], ",", 
                    RowBox[{"unusedCount", "\[LessEqual]", 
                    RowBox[{"Length", "[", "unsureButtons3x3", "]"}]}], ",", 
                    RowBox[{"unusedCount", "++"}], ",", "  ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "multiply", " ", "the", " ", "old", " ", "probility", " ",
                     "with", " ", "the", " ", "new", " ", "determined", " ", 
                    "weighted", " ", "probability", " ", "based", " ", "on", 
                    " ", "fracProb"}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"tempCoord", " ", "=", 
                    RowBox[{"unsureButtons3x3", "[", 
                    RowBox[{"[", "unusedCount", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"probsList", "[", 
                    RowBox[{"[", "  ", 
                    RowBox[{
                    RowBox[{"tempCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"tempCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], "]"}], "*=",
                     "fracProb"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fracProb", "\[Equal]", "0"}], ",", " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{
                    "if", " ", "the", " ", "probability", " ", "is", " ", 
                    "0"}], ",", " ", 
                    RowBox[{
                    "it", " ", "is", " ", "FOR", " ", "SURE", " ", "a", " ", 
                    "bomb"}]}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"permanentBombsList", ",", "tempCoord"}], "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"localBombsList", ",", "tempCoord"}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fracProb", "\[Equal]", "1"}], ",", " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{
                    "if", " ", "the", " ", "probability", " ", "is", " ", 
                    "1"}], ",", " ", 
                    RowBox[{
                    "it", " ", "is", " ", "FOR", " ", "SURE", " ", "NOT", " ",
                     "a", " ", "bomb"}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"permanentNotBombsList", ",", "tempCoord"}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"localNotBombsList", ",", "tempCoord"}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "localNotBombsList", "]"}], "\[Equal]", 
               "0"}], "&&", 
              RowBox[{
               RowBox[{"Length", "[", "localBombsList", "]"}], "\[Equal]", 
               "0"}]}], ",", " ", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
               "If", " ", "we", " ", "found", " ", "no", " ", "for", " ", 
                "sure", " ", "bombs", " ", "or", " ", "for", " ", "sure", " ",
                 "not", " ", "bombs"}], ",", " ", 
               RowBox[{
               "then", " ", "we", " ", "must", " ", "choose", " ", "the", " ",
                 "highest", " ", "probility", " ", "box"}]}], " ", "*)"}], 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"maxProbs", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{"maxProbsCoord", "=", 
               RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "Determine", " ", "the", " ", "maximum", " ", "probility", " ",
                 "in", " ", "the", " ", "grid", " ", "that", " ", 
                RowBox[{"doesn", "'"}], "t", " ", "have", " ", "a", " ", 
                "probility", " ", "of", " ", "1", " ", 
                RowBox[{"(", 
                 RowBox[{"not", " ", "evaluated"}], ")"}]}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"row", "=", "1"}], ",", 
                RowBox[{"row", "\[LessEqual]", "numOfRows"}], ",", 
                RowBox[{"row", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"col", "=", "1"}], ",", 
                   RowBox[{"col", "\[LessEqual]", "numOfCols"}], ",", 
                   RowBox[{"col", "++"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"maxProbs", "<", 
                    RowBox[{"probsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"probsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}], "<", "1"}]}], 
                    ",", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"maxProbs", "=", 
                    RowBox[{"probsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"maxProbsCoord", "=", 
                    RowBox[{"{", 
                    RowBox[{"row", ",", "col"}], "}"}]}], ";"}]}], "  ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "best", " ", "next", " ", "guess", " ", "based", " ", 
                    "on", " ", "probility"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "maxProbsCoord", "]"}], ";"}], 
                    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"startBoard", "[", 
                  RowBox[{"[", "  ", 
                   RowBox[{
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], "]"}], 
                 "\[Equal]", 
                 RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "Change", " ", "the", " ", "board", " ", "using", " ", 
                  "NumberLook", " ", "and", " ", "gridInfo", " ", 
                  RowBox[{"(", 
                   RowBox[{"generated", " ", "board", " ", "information"}], 
                   ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"NumberLook", "[", " ", 
                  RowBox[{
                   RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], ",", 
                   RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"startBoard", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "=", 
                  RowBox[{"gridInfo", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
                 " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"Print", "[", 
                    RowBox[{"\"\<Opening: \>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], " ", "]"}], 
                   ";"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"AIClickButtons", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ";", 
                 " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "Append", " ", "to", " ", "the", " ", "next", " ", 
                   "click"}], " ", "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "=", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], ",", 
                    "Green", ",", 
                    RowBox[{"Background", "\[Rule]", "LightBlue"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "30"}], ",", " ", "Bold"}],
                     "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"ListOfBoards", ",", " ", "list"}], "]"}], ";", 
                 RowBox[{"(*", 
                  RowBox[{
                  "APPEND", " ", "TO", " ", "LIST", " ", "OF", " ", 
                   "BOARDS"}], "*)"}], "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"ListOfBoards", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "ListOfBoards", "]"}], "-", "1"}], 
                    ",", " ", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], " ", "=", 
                  " ", "hint"}], ";"}]}], 
               RowBox[{"(*", " ", 
                RowBox[{
                "visually", " ", "display", " ", "next", " ", "click", " ", 
                 "for", " ", "the", " ", "prior", " ", "board", " ", "with", 
                 " ", "blue", " ", "background"}], " ", "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"startBoard", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "=", 
                  RowBox[{"gridInfo", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"maxProbsCoord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";"}], 
                "*)"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]",
              ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "localNotBombsList", "]"}], ">", 
                 "0"}], ",", " ", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "We", " ", "have", " ", "a", " ", "for", " ", "sure", " ", 
                  "not", " ", 
                  RowBox[{"bomb", "!"}], " ", "PICK", " ", "IT"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Print", "[", "\"\<open all not bombs\>\"", "]"}], 
                  ";"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"i", "=", "1"}], ",", 
                   RowBox[{"i", "\[LessEqual]", 
                    RowBox[{"Length", "[", "localNotBombsList", "]"}]}], ",", 
                   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", " ", 
                    RowBox[{
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], " ", "]"}], 
                    "]"}], "\[Equal]", 
                    RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "Change", " ", "the", " ", "board", " ", "using", " ", 
                    "NumberLook", " ", "and", " ", "gridInfo", " ", 
                    RowBox[{"(", 
                    RowBox[{"generated", " ", "board", " ", "information"}], 
                    ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"NumberLook", "[", 
                    RowBox[{
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"startBoard", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
                    "=", 
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<Opening: \>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}]}], " ", 
                    "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
                    "=", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"gridInfo", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
                    ",", "Green", ",", 
                    RowBox[{"Background", "\[Rule]", "LightBlue"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "30"}], ",", " ", "Bold"}],
                     "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"AIClickButtons", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                    ";", " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "Append", " ", "to", " ", "the", " ", "next", " ", 
                    "click"}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"ListOfBoards", ",", " ", "list"}], "]"}], ";", 
                    RowBox[{"(*", 
                    RowBox[{
                    "APPEND", " ", "TO", " ", "LIST", " ", "OF", " ", 
                    "BOARDS"}], "*)"}], "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ListOfBoards", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "ListOfBoards", "]"}], "-", "1"}], 
                    ",", " ", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"localNotBombsList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], " ", "]"}], 
                    "]"}], " ", "=", " ", "hint"}], ";"}]}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "visually", " ", "display", " ", "next", " ", "click", 
                    " ", "for", " ", "the", " ", "prior", " ", "board", " ", 
                    "with", " ", "blue", " ", "background"}], " ", "*)"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
                  "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"localNotBombsList", "=", 
                  RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<PBL: \>\"", ",", " ", "permanentBombsList"}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{"\"\<PNBL: \>\"", ",", "permanentNotBombsList"}], "]"}],
              ";"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<probsList: \>\"", ",", " ", 
               RowBox[{"MatrixForm", "[", "probsList", "]"}]}], "]"}], ";"}], 
            "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"makeProbsList", "[", "]"}]}]}], 
         RowBox[{"(*", " ", 
          RowBox[{"recursive", " ", "method"}], " ", "*)"}], 
         "\[IndentingNewLine]", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7314051566642294`*^9, 3.7314052779626646`*^9}, {
   3.731405323545987*^9, 3.7314053526878676`*^9}, {3.7314053857388864`*^9, 
   3.7314054028230205`*^9}, 3.731405515608425*^9, {3.731405555456908*^9, 
   3.7314055935461597`*^9}, {3.7314056249825497`*^9, 3.731405665650565*^9}, {
   3.731405784722364*^9, 3.7314057911089363`*^9}, {3.731405855575159*^9, 
   3.731405883189041*^9}, {3.7314059378577642`*^9, 3.731405955521458*^9}, {
   3.7314060214958076`*^9, 3.7314061294039493`*^9}, {3.731406199598667*^9, 
   3.7314062072447753`*^9}, {3.7314062394966235`*^9, 
   3.7314062469544706`*^9}, {3.731406278781258*^9, 3.731406298496256*^9}, {
   3.7314063435456066`*^9, 3.7314063458303337`*^9}, {3.731406379604289*^9, 
   3.7314064691622887`*^9}, {3.7314126962893953`*^9, 
   3.7314127622411633`*^9}, {3.7314131462533607`*^9, 
   3.7314131485400085`*^9}, {3.731413205526838*^9, 3.731413212738941*^9}, {
   3.731413318999476*^9, 3.731413322962843*^9}, {3.731413362783601*^9, 
   3.7314133649790106`*^9}, 3.731413399332658*^9, {3.7314135622521563`*^9, 
   3.731413563393055*^9}, {3.7314138340543103`*^9, 3.731413844523349*^9}, {
   3.7314145892014894`*^9, 3.731414592176016*^9}, {3.731414704588464*^9, 
   3.731414745470252*^9}, {3.7314148259906683`*^9, 3.731414842791849*^9}, {
   3.7314149183693933`*^9, 3.7314149185569205`*^9}, {3.7314397218391237`*^9, 
   3.7314397476614428`*^9}, {3.731439945210094*^9, 3.731439990754692*^9}, {
   3.7314405434798555`*^9, 3.731440554978195*^9}, {3.731440654116617*^9, 
   3.731440658780232*^9}, {3.731468579689149*^9, 3.731468582642662*^9}, 
   3.7314694135783863`*^9, 3.731469598020893*^9, {3.7314696459952116`*^9, 
   3.7314696572776103`*^9}, {3.731470312021096*^9, 3.7314703589641843`*^9}, 
   3.7314704361293287`*^9, {3.731470510700085*^9, 3.731470607507841*^9}, {
   3.7314707134262857`*^9, 3.73147078446603*^9}, {3.7314708826964645`*^9, 
   3.7314709027770276`*^9}, {3.731470962674698*^9, 3.731470970222505*^9}, {
   3.7314710075238285`*^9, 3.731471011321158*^9}, 3.7314710963312316`*^9, {
   3.731471129991531*^9, 3.731471133476279*^9}, {3.7318770258078585`*^9, 
   3.731877032820515*^9}, {3.7318774827358303`*^9, 3.7318774845612516`*^9}, {
   3.7318776326931562`*^9, 3.7318776634732656`*^9}, {3.731877714789545*^9, 
   3.731877717201894*^9}, {3.731877804825444*^9, 3.7318778246610737`*^9}, {
   3.731877900142878*^9, 3.7318779082175665`*^9}, {3.7318781559911222`*^9, 
   3.7318781704411273`*^9}, {3.7318783836329403`*^9, 3.731878509663659*^9}, {
   3.731878743037671*^9, 3.7318787604098015`*^9}, {3.7318793586375833`*^9, 
   3.7318793728098574`*^9}, {3.731879474199271*^9, 3.7318794921760187`*^9}, {
   3.731879535640358*^9, 3.7318795903581476`*^9}, {3.7318797667275743`*^9, 
   3.731879786303711*^9}, {3.7318812155689087`*^9, 3.731881215740768*^9}, {
   3.731881518393349*^9, 3.731881546325739*^9}, {3.7318815804702983`*^9, 
   3.7318816024873624`*^9}, 3.7318816693915606`*^9, {3.7318817946853437`*^9, 
   3.731881805024299*^9}, {3.731881846054788*^9, 3.731881847795939*^9}, 
   3.731882748653349*^9, {3.73188296950662*^9, 3.731882973303889*^9}, {
   3.731886409474478*^9, 3.7318864098159456`*^9}, {3.7318921209245677`*^9, 
   3.7318921588527255`*^9}, {3.7318922470949345`*^9, 3.7318922661183*^9}, {
   3.7318923674493027`*^9, 3.7318923698488426`*^9}, {3.7318924062807674`*^9, 
   3.7318924418772373`*^9}, {3.7318924909509754`*^9, 3.731892558419541*^9}, {
   3.731892705431239*^9, 3.731892775887518*^9}, {3.7318928600739*^9, 
   3.7318928623949947`*^9}, {3.731892971556785*^9, 3.731892975081623*^9}, {
   3.731942979260323*^9, 3.7319430515895433`*^9}, {3.7319430864084864`*^9, 
   3.7319431018192863`*^9}, {3.731943295032482*^9, 3.731943354262246*^9}, {
   3.7319433980149126`*^9, 3.7319434658834753`*^9}, {3.731943528592188*^9, 
   3.7319435414249897`*^9}, {3.731943581529337*^9, 3.731943581716858*^9}, {
   3.731943625865863*^9, 3.731943626225246*^9}, {3.7319441890247545`*^9, 
   3.7319441959215355`*^9}, {3.73194422796821*^9, 3.731944235581601*^9}, {
   3.731944708212364*^9, 3.7319447192030115`*^9}, {3.731944755685255*^9, 
   3.7319447651707015`*^9}, {3.731944859880724*^9, 3.731944916541583*^9}, {
   3.7319449570581636`*^9, 3.7319449606492357`*^9}, {3.731945020964926*^9, 
   3.7319450249341316`*^9}, {3.731945427250884*^9, 3.731945427657175*^9}, {
   3.731949399091426*^9, 3.7319494949452558`*^9}, {3.7319497201150436`*^9, 
   3.7319497256809855`*^9}, {3.7319497670088463`*^9, 3.73194980018554*^9}, {
   3.731949859973744*^9, 3.7319498851570053`*^9}, {3.7319503296111546`*^9, 
   3.7319503792512617`*^9}, {3.731950430372548*^9, 3.7319504481865997`*^9}, {
   3.731950566509215*^9, 3.731950660904233*^9}, {3.7319507472252645`*^9, 
   3.7319507582903337`*^9}, {3.73195450661193*^9, 3.7319545096904354`*^9}, {
   3.7319545397049065`*^9, 3.7319545440960083`*^9}, {3.7319545978103523`*^9, 
   3.7319546118991113`*^9}, {3.7319546933333206`*^9, 
   3.7319546956304893`*^9}, {3.73195477630787*^9, 3.7319548038710394`*^9}, {
   3.731954834075547*^9, 3.7319548511726923`*^9}, {3.7319550310344315`*^9, 
   3.731955041582529*^9}, {3.7319551519434624`*^9, 3.7319551824214664`*^9}, {
   3.731955221659073*^9, 3.7319552766650457`*^9}, 3.731955575529833*^9, {
   3.731955674099372*^9, 3.731955674365028*^9}, {3.7319557137135706`*^9, 
   3.7319557306355658`*^9}, {3.7319557940438404`*^9, 
   3.7319558915871315`*^9}, {3.7319559570773506`*^9, 
   3.7319559839444504`*^9}, {3.731956052658039*^9, 3.7319560534706345`*^9}, {
   3.7319561444134097`*^9, 3.7319561637452497`*^9}, {3.731956248673292*^9, 
   3.7319562587906466`*^9}, {3.7319562925883036`*^9, 3.7319563195628157`*^9}, 
   3.731956606320347*^9, {3.731956773022547*^9, 3.7319567733038244`*^9}, {
   3.7319569871064644`*^9, 3.7319569906281967`*^9}, {3.731957174242961*^9, 
   3.731957208943081*^9}, {3.7319573765295086`*^9, 3.731957555936159*^9}, {
   3.731957586417981*^9, 3.73195760373214*^9}, {3.7319576340434046`*^9, 
   3.731957677232067*^9}, {3.7319577943560376`*^9, 3.7319578395879774`*^9}, {
   3.7319579325248175`*^9, 3.731957996393832*^9}, {3.7319580823361807`*^9, 
   3.731958274251156*^9}, {3.731958305738847*^9, 3.7319584214342227`*^9}, {
   3.7319584525034246`*^9, 3.7319585362391834`*^9}, 3.7319586389919453`*^9, {
   3.731958687082004*^9, 3.731958770716384*^9}, {3.731958918632554*^9, 
   3.7319590679152575`*^9}, {3.731959525595155*^9, 3.731959559207284*^9}, {
   3.731959661381773*^9, 3.7319597647322674`*^9}, {3.731959801631726*^9, 
   3.7319598386963024`*^9}, {3.7319598706636505`*^9, 3.7319598898618813`*^9}, 
   3.7319604365206184`*^9, {3.7319605835572386`*^9, 3.7319605890511274`*^9}, 
   3.731960737112562*^9, {3.731960966146259*^9, 3.7319609802149706`*^9}, {
   3.731961024102105*^9, 3.7319610257899656`*^9}, {3.7319650517917786`*^9, 
   3.731965107955579*^9}, {3.731965267039081*^9, 3.7319654238527327`*^9}, {
   3.731965482344836*^9, 3.7319656651645455`*^9}, {3.731965699264147*^9, 
   3.731965861659148*^9}, {3.7319659284915457`*^9, 3.731965961673233*^9}, {
   3.731966070394185*^9, 3.73196607342577*^9}, {3.731966410146511*^9, 
   3.731966426212536*^9}, {3.7319664875992675`*^9, 3.7319664961783986`*^9}, {
   3.7319672109257283`*^9, 3.7319672341230145`*^9}, {3.7319677115466337`*^9, 
   3.7319677245642996`*^9}, {3.7319677940389056`*^9, 3.731967798829443*^9}, {
   3.7319679099400444`*^9, 3.7319679192232065`*^9}, {3.731967951651696*^9, 
   3.731967971659691*^9}, {3.7319680205295315`*^9, 3.7319680239830675`*^9}, {
   3.7319683314957*^9, 3.7319683653082438`*^9}, {3.731968421474249*^9, 
   3.73196843296842*^9}, {3.73196872833848*^9, 3.731968843838163*^9}, {
   3.731968905420395*^9, 3.731968908592626*^9}, {3.7319689883507447`*^9, 
   3.7319689911323595`*^9}, {3.7322270672055626`*^9, 
   3.7322270902227926`*^9}, {3.7322275324511986`*^9, 
   3.7322275496813774`*^9}, {3.7322275820984063`*^9, 
   3.7322276836376266`*^9}, {3.7322277232304707`*^9, 3.732227735098592*^9}, {
   3.732227819703637*^9, 3.732227864578426*^9}, {3.732228198752561*^9, 
   3.7322282032695513`*^9}, {3.732231251344158*^9, 3.7322312517853417`*^9}, {
   3.7322313282357144`*^9, 3.7322313434916897`*^9}, {3.7322313935878415`*^9, 
   3.7322314073224707`*^9}, {3.732231444462487*^9, 3.732231482706506*^9}, {
   3.732231551494953*^9, 3.732231565759993*^9}, {3.7322315962302246`*^9, 
   3.7322316466757774`*^9}, {3.7322327440708303`*^9, 
   3.7322327484866056`*^9}, {3.7322327957663918`*^9, 3.732232873533287*^9}, {
   3.7322329212712936`*^9, 3.732233038623479*^9}, {3.7322330931147985`*^9, 
   3.7322331205228896`*^9}, {3.732233968289691*^9, 3.7322340042513633`*^9}, {
   3.7322346686781197`*^9, 3.7322346802439427`*^9}, {3.7322347181851482`*^9, 
   3.7322347496680803`*^9}, {3.7322348814525557`*^9, 
   3.7322348894909587`*^9}, {3.7322350534782043`*^9, 
   3.7322351124164085`*^9}, {3.732235521736986*^9, 3.732235537791808*^9}, {
   3.7322355713683496`*^9, 3.732235578316951*^9}, {3.7322357614356303`*^9, 
   3.732235790993835*^9}, {3.7322359312151556`*^9, 3.732235941229824*^9}, {
   3.732236067034549*^9, 3.7322361102414694`*^9}, {3.7322364039499483`*^9, 
   3.732236493808616*^9}, {3.732236575955387*^9, 3.7322366083104897`*^9}, {
   3.7322367985044575`*^9, 3.7322368070813026`*^9}, {3.732236986625976*^9, 
   3.732237046241545*^9}, {3.732237655146682*^9, 3.7322376716557026`*^9}, {
   3.73223770957082*^9, 3.7322377357044897`*^9}, {3.7322377929207153`*^9, 
   3.7322378283700514`*^9}, {3.7322379466839795`*^9, 3.732237959935233*^9}, {
   3.7322381720257626`*^9, 3.7322381858044186`*^9}, {3.7322383599118924`*^9, 
   3.7322383616655583`*^9}, {3.7322383981661267`*^9, 
   3.7322384699364147`*^9}, {3.73223853590777*^9, 3.732238569168685*^9}, {
   3.7322391746028438`*^9, 3.7322392263043637`*^9}, {3.7322392718044086`*^9, 
   3.732239308095959*^9}, {3.732239582536086*^9, 3.7322396109517183`*^9}, {
   3.732239837616446*^9, 3.7322398719941187`*^9}, {3.7322399434436584`*^9, 
   3.7322400217384543`*^9}, {3.7322400621953497`*^9, 3.732240159179801*^9}, {
   3.7322441472604437`*^9, 3.7322441494081664`*^9}, {3.7322441822636986`*^9, 
   3.732244216747637*^9}, {3.732244324020231*^9, 3.73224434434242*^9}, {
   3.7322445952732058`*^9, 3.732244821044037*^9}, {3.7322448595047846`*^9, 
   3.73224486388151*^9}, {3.732244918113383*^9, 3.732245277822857*^9}, {
   3.7322454145859184`*^9, 3.732245414824564*^9}, {3.732245478676723*^9, 
   3.732245491059698*^9}, {3.7322455290229073`*^9, 3.7322455675234885`*^9}, {
   3.7322458054060936`*^9, 3.732245887534977*^9}, {3.732246079464464*^9, 
   3.732246128634832*^9}, {3.7322461792690907`*^9, 3.7322462120958033`*^9}, {
   3.732246248387602*^9, 3.732246251780672*^9}, {3.7322463884358406`*^9, 
   3.7322464449244227`*^9}, {3.7322464764544497`*^9, 
   3.7322466739439363`*^9}, {3.7332277158456554`*^9, 3.7332277544205008`*^9}, 
   3.733450995290445*^9, {3.7334525240765*^9, 3.733452637219707*^9}, {
   3.7334527701168327`*^9, 3.733452814496468*^9}, {3.733452863642443*^9, 
   3.733452919389064*^9}, {3.733452955441256*^9, 3.733452955585475*^9}, {
   3.733453013787242*^9, 3.7334530475804396`*^9}, {3.733453132345742*^9, 
   3.73345331527824*^9}, {3.7334533481061172`*^9, 3.733453358375873*^9}, {
   3.7334548073521824`*^9, 3.73345483645583*^9}, {3.733533298074277*^9, 
   3.7335333230387897`*^9}, {3.733533464009389*^9, 3.7335337442318997`*^9}, 
   3.73353381833004*^9, {3.7335338778632936`*^9, 3.73353388385404*^9}, {
   3.7335339588528748`*^9, 3.733533963279524*^9}, {3.7335343499281845`*^9, 
   3.7335343701438475`*^9}, {3.733534845829873*^9, 3.7335348514482956`*^9}, {
   3.73353497904912*^9, 3.7335350311514378`*^9}, {3.7335352856932907`*^9, 
   3.7335353227445507`*^9}, {3.733535440601406*^9, 3.7335354454651203`*^9}, {
   3.7335354807903748`*^9, 3.7335355284211817`*^9}, {3.7335789251339445`*^9, 
   3.7335789642794456`*^9}, {3.7335790255930967`*^9, 3.733579026628153*^9}, {
   3.7335792193053284`*^9, 3.7335792217988462`*^9}, {3.733579264534092*^9, 
   3.7335792895479345`*^9}, {3.7335793231279626`*^9, 
   3.7335793275347595`*^9}, {3.733579366805276*^9, 3.7335793943399577`*^9}, {
   3.733609708734943*^9, 3.7336099542974997`*^9}, {3.733609996036239*^9, 
   3.7336099974582634`*^9}, {3.7336103691224585`*^9, 
   3.7336103907341084`*^9}, {3.7336104359888825`*^9, 
   3.7336104465212407`*^9}, {3.7336105053555326`*^9, 3.733610514340892*^9}, {
   3.7336105542200594`*^9, 3.7336105545794706`*^9}, {3.7336105852858315`*^9, 
   3.7336106604031224`*^9}, {3.733610755867999*^9, 3.7336107868556385`*^9}, {
   3.733610818530856*^9, 3.7336108493466015`*^9}, {3.733611326850015*^9, 
   3.733611331616144*^9}, {3.7336113634632473`*^9, 3.733611376058323*^9}, {
   3.7336114265011396`*^9, 3.7336114270793514`*^9}, {3.733658471682392*^9, 
   3.733658474376547*^9}, {3.73365865452823*^9, 3.73365865665742*^9}, {
   3.7336587585972357`*^9, 3.733658758659743*^9}, {3.733658928978192*^9, 
   3.733658933936862*^9}, {3.733659263941703*^9, 3.7336592655083714`*^9}, {
   3.7336593150868907`*^9, 3.733659341460179*^9}, 3.733659394567981*^9, {
   3.7336595057677345`*^9, 3.7336595455911913`*^9}, {3.733659703817802*^9, 
   3.733659708396592*^9}, {3.733659784967663*^9, 3.7336598480924063`*^9}, {
   3.7336600484284487`*^9, 3.733660068620901*^9}, {3.733660153641358*^9, 
   3.7336601943854465`*^9}, 3.7336606062551813`*^9, {3.7336606845019817`*^9, 
   3.7336606869978724`*^9}, {3.7336607461311703`*^9, 
   3.7336607781650167`*^9}, {3.7336609489094205`*^9, 3.733660950194564*^9}, {
   3.733660997959146*^9, 3.733660998664422*^9}, {3.7336610883189483`*^9, 
   3.7336611452351117`*^9}, {3.7336611817295694`*^9, 
   3.7336611848866663`*^9}, {3.733882854243703*^9, 3.733882901644865*^9}, {
   3.7338831738926373`*^9, 3.7338832219555807`*^9}, {3.733883337325985*^9, 
   3.733883357901422*^9}, {3.733883392546141*^9, 3.7338834051737037`*^9}, {
   3.733885630133975*^9, 3.733885817960911*^9}, {3.733885854970536*^9, 
   3.7338859173678646`*^9}, {3.7338859918868704`*^9, 
   3.7338860176339293`*^9}, {3.733888354162778*^9, 3.7338886065198584`*^9}, {
   3.733888845353154*^9, 3.7338888581182623`*^9}, {3.733888916953548*^9, 
   3.7338889881024375`*^9}, {3.733889050117222*^9, 3.7338890967579145`*^9}, {
   3.7340910096305733`*^9, 3.734091014474781*^9}, {3.7340910588195257`*^9, 
   3.7340912209994164`*^9}, 3.7340912599834585`*^9, {3.734091294212885*^9, 
   3.734091294462412*^9}, {3.734091329860047*^9, 3.7340913490692263`*^9}, {
   3.73409149015716*^9, 3.734091514190228*^9}, {3.734091605158538*^9, 
   3.7340916221049976`*^9}, {3.734091654409416*^9, 3.7340916561761894`*^9}, {
   3.7340917111618495`*^9, 3.7340919528360524`*^9}, {3.7340920143997126`*^9, 
   3.734092024667423*^9}, {3.734092112604184*^9, 3.7340921306680627`*^9}, {
   3.7340923609825*^9, 3.7340923798741674`*^9}, {3.734092546954347*^9, 
   3.73409256107743*^9}, {3.7340926259378705`*^9, 3.734092626078524*^9}, {
   3.734092663698258*^9, 3.7340926903314915`*^9}, {3.734092850364818*^9, 
   3.7340928505054593`*^9}, {3.73409288308206*^9, 3.7340929017437935`*^9}, {
   3.7340930505731697`*^9, 3.734093052147484*^9}, {3.7340932255328584`*^9, 
   3.7340933005646343`*^9}, {3.734093359385317*^9, 3.73409335979043*^9}, {
   3.7340934163538275`*^9, 3.7340934268250923`*^9}, {3.73409350006662*^9, 
   3.734093571528286*^9}, {3.734093617753026*^9, 3.734093623871986*^9}, {
   3.734093663067271*^9, 3.7340936633954344`*^9}, {3.734093720842786*^9, 
   3.734093729032505*^9}, {3.7341459909104404`*^9, 3.7341459926190023`*^9}, {
   3.73414609580959*^9, 3.7341462072174673`*^9}, {3.7341462479941216`*^9, 
   3.7341462632619925`*^9}, {3.734146296154678*^9, 3.734146331629184*^9}, {
   3.7341463653823905`*^9, 3.7341463810666275`*^9}, {3.734146439314972*^9, 
   3.734146465652977*^9}, {3.7341466055974736`*^9, 3.734146618744772*^9}, {
   3.7341466960098205`*^9, 3.7341467236179714`*^9}, {3.734146761698517*^9, 
   3.7341468104879513`*^9}, {3.7341468406126013`*^9, 3.734146869549053*^9}, {
   3.7341469427374215`*^9, 3.7341469522358203`*^9}, {3.7341470160486298`*^9, 
   3.7341472108103743`*^9}, 3.734147255171843*^9, {3.734147563808942*^9, 
   3.7341475880128336`*^9}, {3.7341476467430763`*^9, 
   3.7341477291898155`*^9}, {3.7341478424323645`*^9, 
   3.7341479269750347`*^9}, {3.734147996650335*^9, 3.734148181000141*^9}, {
   3.7341483753073053`*^9, 3.7341484205469456`*^9}, {3.7341485198361*^9, 
   3.7341485252462687`*^9}, {3.734148591978007*^9, 3.7341486582582006`*^9}, {
   3.7341490551193237`*^9, 3.734149058237767*^9}, {3.7341491268837376`*^9, 
   3.7341491315458612`*^9}, {3.7341491744637375`*^9, 
   3.7341491927334237`*^9}, {3.734226393887908*^9, 3.734226397761383*^9}, {
   3.7342266783707314`*^9, 3.734226710824898*^9}, {3.734226754591954*^9, 
   3.734226772403491*^9}, {3.734226889332054*^9, 3.734226937671105*^9}, {
   3.7342272788914323`*^9, 3.7342272861482964`*^9}, {3.734227318032878*^9, 
   3.7342273605487127`*^9}, {3.734227402660882*^9, 3.7342274042995343`*^9}, {
   3.7342274513003635`*^9, 3.734227533520648*^9}, 3.734227649911398*^9, {
   3.734227806372099*^9, 3.7342278096474266`*^9}, {3.7342281706498747`*^9, 
   3.7342281829455566`*^9}, {3.734265125418189*^9, 3.7342652126669493`*^9}, {
   3.734265256747711*^9, 3.734265291533917*^9}, {3.7342653573628445`*^9, 
   3.7342653920655365`*^9}, {3.7342654656209135`*^9, 
   3.7342654765592213`*^9}, {3.7342655468710136`*^9, 3.734265558174137*^9}, {
   3.734265591018225*^9, 3.734265619539791*^9}, {3.734265734853632*^9, 
   3.734265881064296*^9}, {3.734265954391988*^9, 3.7342659545594544`*^9}, {
   3.7342661006690035`*^9, 3.734266120903*^9}, {3.7342661975112734`*^9, 
   3.7342662244054384`*^9}, {3.73426628362253*^9, 3.7342662845579844`*^9}, {
   3.73426633702806*^9, 3.73426635454117*^9}, {3.7342664089818773`*^9, 
   3.7342664091381426`*^9}, {3.7342664981923676`*^9, 
   3.7342666060615387`*^9}, {3.734276467200836*^9, 3.734276523434203*^9}, {
   3.7342766190150967`*^9, 3.7342766795601177`*^9}, {3.734276717667944*^9, 
   3.7342767497956743`*^9}, 3.7342769546538343`*^9, 3.7342770033265915`*^9, {
   3.7342771656071157`*^9, 3.7342771662634077`*^9}, {3.734277403586144*^9, 
   3.7342774375446887`*^9}, {3.7342776863400755`*^9, 
   3.7342777070671253`*^9}, {3.7342780137808228`*^9, 
   3.7342781122103224`*^9}, {3.7342781455626163`*^9, 3.734278241999257*^9}, {
   3.7342783679921756`*^9, 3.734278368634719*^9}, {3.734278411054872*^9, 
   3.734278412512388*^9}, {3.7342784504976444`*^9, 3.7342785028398104`*^9}, {
   3.7342786034763727`*^9, 3.734278631320727*^9}, {3.7342790157603626`*^9, 
   3.734279067211458*^9}, {3.734279116025853*^9, 3.7342791220011077`*^9}, {
   3.734279169744129*^9, 3.7342791921351624`*^9}, {3.7342878579734163`*^9, 
   3.7342878621695747`*^9}, {3.734288013388053*^9, 3.7342880231891193`*^9}, {
   3.7342881956387625`*^9, 3.734288254392022*^9}, {3.73428834534692*^9, 
   3.7342886005095167`*^9}, {3.7342886373796062`*^9, 
   3.7342886443842344`*^9}, {3.7342887137938356`*^9, 
   3.7342887139532585`*^9}, {3.734288833308693*^9, 3.7342888399142313`*^9}, {
   3.7342889730643835`*^9, 3.7342890180510283`*^9}, {3.73428905779571*^9, 
   3.7342891196181545`*^9}, {3.7342891857229652`*^9, 
   3.7342891864218235`*^9}, {3.7342892252049713`*^9, 3.734289293186742*^9}, {
   3.734289517877325*^9, 3.734289524136973*^9}, 3.7342899443305087`*^9, {
   3.7342902389585133`*^9, 3.734290306045878*^9}, {3.734290666419984*^9, 
   3.734290666751871*^9}, 3.7342907391012907`*^9, {3.734290772097045*^9, 
   3.7342907951303034`*^9}, {3.7342908801383886`*^9, 3.734290880735978*^9}, {
   3.734291253808843*^9, 3.734291463773038*^9}, {3.7342915290922737`*^9, 
   3.73429153015106*^9}, {3.734810861388646*^9, 3.734810886092636*^9}, {
   3.7348109190090914`*^9, 3.734810919263678*^9}, {3.7348112981876783`*^9, 
   3.734811402896248*^9}, {3.7348114712233963`*^9, 3.734811503613776*^9}, {
   3.734811538291253*^9, 3.734811565214051*^9}, {3.734811596393201*^9, 
   3.7348117358328953`*^9}, {3.7348118313106747`*^9, 
   3.7348118324794536`*^9}, {3.7348118703637047`*^9, 3.734811954034875*^9}, {
   3.734812086594413*^9, 3.73481211384138*^9}, {3.7348122056230326`*^9, 
   3.734812206692624*^9}, {3.734812250137159*^9, 3.7348122547769127`*^9}, {
   3.7348122897289057`*^9, 3.734812306809415*^9}, {3.7456712733719544`*^9, 
   3.745671284478718*^9}, {3.7456713350100503`*^9, 3.7456713546882367`*^9}, {
   3.7456713918096824`*^9, 3.7456713942329116`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"bc0cd7e5-7833-46fb-85d9-deea2dbcd120"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeTitleScreen", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7334545942724857`*^9, 3.7334546016081295`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"d0136a1e-be81-42bc-ac3f-189a82dcf119"]
}, Open  ]]
},
WindowSize->{1264, 608},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingPageRange->{Automatic, Automatic},
Magnification:>1.15 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 227, 3, 76, "Section",ExpressionUUID->"0f6c3696-07b3-437c-b74b-5d4cf58e8145"],
Cell[CellGroupData[{
Cell[832, 29, 11784, 159, 76, "Section",ExpressionUUID->"c34ed131-6694-4218-aa12-092f13e1e126",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[12619, 190, 262282, 4330, 3375, "Input",ExpressionUUID->"1c52c04d-9ae9-4e66-8d4a-cc962b93615d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]],
Cell[CellGroupData[{
Cell[274938, 4525, 11868, 160, 59, "Section",ExpressionUUID->"5c4ef99c-f268-42d8-ae75-58602ca60b7a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[286809, 4687, 28102, 503, 1667, "Input",ExpressionUUID->"66a2e110-cf6a-4f56-9222-edc5daff6647",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[314960, 5196, 271, 4, 100, "Section",ExpressionUUID->"0bdb20c0-2dbb-4b75-992a-be2ecc42d81c"],
Cell[315234, 5202, 216197, 4314, 18580, "Input",ExpressionUUID->"bc0cd7e5-7833-46fb-85d9-deea2dbcd120"],
Cell[531434, 9518, 230, 4, 43, "Input",ExpressionUUID->"d0136a1e-be81-42bc-ac3f-189a82dcf119"]
}, Open  ]]
}
]
*)

